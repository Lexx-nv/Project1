&НаСервереБезКонтекста
Процедура ПолучитьДанныеНоменклатуры(СтруктураДанных)
	СтруктураДанных.Вставить("ЕдиницаИзмерения",			СтруктураДанных.Номенклатура.ЕдиницаХраненияОстатков);
	СтруктураДанных.Вставить("Коэффициент",					СтруктураДанных.ЕдиницаИзмерения.Коэффициент);
КонецПроцедуры //
 
&НаКлиенте
Процедура СписокНоменклатурыВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТипЗначения = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный));
	
	Количество = 1;
	Если НЕ ВвестиЗначение(Количество, "Введите количество", ТипЗначения) Тогда
		Возврат;
	КонецЕсли;	
	
	СтруктураПодбора = Новый Структура();
	СтруктураПодбора.Вставить("Команда",      КомандаПодбора);
	СтруктураПодбора.Вставить("Номенклатура", Значение);
	
	СтруктураПодбора.Вставить("Количество",   Количество);
	
	ПолучитьДанныеНоменклатуры(СтруктураПодбора);
	
	ОповеститьОВыборе(СтруктураПодбора);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборУслуг(ЗначениеОтбора)

    ЭлементОтбора = СписокНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Услуга");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование = Истина;
    ЭлементОтбора.ПравоеЗначение = ЗначениеОтбора;
	
КонецПроцедуры //

// Процедура добавляет вывод остатков в список номенклатуры
//
&НаСервере
Процедура УстановитьСписокСОстатками()

	СписокНоменклатуры.ПроизвольныйЗапрос = Истина;
	
	Если Параметры.Склад.Пустая() Тогда
		СписокНоменклатуры.ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СпрНоменклатура.Ссылка,
			|	СпрНоменклатура.Код,
			|	СпрНоменклатура.Наименование,
			|	СпрНоменклатура.НаименованиеПолное,
			|	СвободныеОстаткиОстатки.КоличествоОстаток
			|ИЗ
			|	Справочник.Номенклатура КАК СпрНоменклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.уатПартииТоваровНаСкладах.Остатки(&Дата, ) КАК СвободныеОстаткиОстатки
			|		ПО СпрНоменклатура.Ссылка = СвободныеОстаткиОстатки.Номенклатура";
	Иначе
		
		СписокНоменклатуры.ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СпрНоменклатура.Ссылка,
			|	СпрНоменклатура.Код,
			|	СпрНоменклатура.Наименование,
			|	СпрНоменклатура.НаименованиеПолное,
			|	СвободныеОстаткиОстатки.КоличествоОстаток
			|ИЗ
			|	Справочник.Номенклатура КАК СпрНоменклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.уатПартииТоваровНаСкладах.Остатки(&Дата, Склад = &Склад) КАК СвободныеОстаткиОстатки
			|		ПО СпрНоменклатура.Ссылка = СвободныеОстаткиОстатки.Номенклатура";
			
		СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("Склад", Параметры.Склад);
	КонецЕсли; 
									  
	СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("Дата", Параметры.ДатаРасчетов);
	
	СписокНоменклатуры.ОсновнаяТаблица = "СпрНоменклатура";
	
	ПолеКоличество = Элементы.Добавить("КоличествоОстаток", Тип("ПолеФормы"), Элементы.СписокНоменклатуры);
	ПолеКоличество.ПутьКДанным = "СписокНоменклатуры.КоличествоОстаток";
	ПолеКоличество.Заголовок = "Остаток";
	ПолеКоличество.Подсказка = "Остаток номенклатуры";
	
КонецПроцедуры //
 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КомандаПодбора = Параметры.Команда;
	Если Параметры.ОтборУслугПоСправочнику Тогда
		УстановитьОтборУслуг(Параметры.ПодбиратьУслуги);
	КонецЕсли;
	
	УстановитьСписокСОстатками();
	
КонецПроцедуры
