
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события "при создании на сервере" формы
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Константы.уатИспользуемаяСистемаGPS.Получить() <> Перечисления.уатСистемаGPS._1СЦСМ тогда
		#Если Клиент тогда
			ТекстСообщения = "Открытие возможно только тогда, когда используемая система GPS - 1C:Центр спутникового мониторинга.";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Отказ);
		#КонецЕсли
		Возврат;
	КонецЕсли;
	
	СписокПараметров = Неопределено;
	
	Если Параметры.Свойство("СписокПараметров", СписокПараметров) Тогда
		
		СписокПараметров = Параметры.СписокПараметров;
	
		
		ОтчетПоДвижениямИСтоянкам = РеквизитФормыВЗначение("Отчет");	
		Для каждого ЭлСписка Из СписокПараметров Цикл
			
			ОтчетПоДвижениямИСтоянкам[ЭлСписка.Представление] = ЭлСписка.Значение; 
			
		КонецЦикла;
		ЗначениеВРеквизитФормы(ОтчетПоДвижениямИСтоянкам, "Отчет");		
		
	КонецЕсли;
	
	Если Не Отчет.Объект = Неопределено Тогда
		КомпоновщикНастроек = Отчет.КомпоновщикНастроек;
		КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
		Элемент = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Элемент.Использование = Истина;
		Элемент.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.Элементы[5].Поле;
		Элемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Элемент.ПравоеЗначение = Отчет.Объект;
		
		ЭлементПользовательскихНастроек = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(ЭлементПользовательскихНастроек,Элемент);
		
		ЭтаФорма.Параметры.ПользовательскиеНастройки = КомпоновщикНастроек.ПользовательскиеНастройки;
		ЭтаФорма.Параметры.СформироватьПриОткрытии = Истина;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

// Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Отчет.НачПериода) И НЕ ЗначениеЗаполнено(Отчет.КонПериода) Тогда
		
		Отчет.НачПериода = НачалоДня(ТекущаяДата());
		Отчет.КонПериода = ТекущаяДата();
	КонецЕсли;
	

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "Регулирование" поля "НачПериода" таблицы.
//
&НаКлиенте
Процедура НачПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Отчет.НачПериода = НачалоДня(Отчет.НачПериода + Направление*24*3600);	
	
КонецПроцедуры // НачПериодаРегулирование()

// Процедура - обработчик события "Регулирование" поля "КонПериода" таблицы.
//
&НаКлиенте
Процедура КонПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Отчет.КонПериода = КонецДня(Отчет.КонПериода + Направление * 24 * 3600);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // КонПериодаРегулирование()

// Процедура - обработчик события "ОбработкаВыбора" поля "КонПериода" таблицы.
//
&НаКлиенте
Процедура КонПериодаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	 
	ВыбранноеЗначение = КонецДня(ВыбранноеЗначение);
	Отчет.КонПериода = ВыбранноеЗначение;
	
	Элемент.УстановитьГраницыВыделения(1,СтрДлина(Элемент.ТекстРедактирования));
	Элемент.ВыделенныйТекст = Строка(ВыбранноеЗначение);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // КонПериодаОбработкаВыбора()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ДОКУМЕНТА

// Обработчик события ОбработкаРасшифровки элемента ПолеТабличногоДокумента.
&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)	
	
	Обл = Результат.ТекущаяОбласть;
	Подстрока = Лев(Обл.Имя,Найти(Обл.Имя,"C")-1);
	НомерСтроки = Число(Прав(Подстрока,СтрДлина(Подстрока)-1));
	НачПериода = Отчет.ТабДанных[НомерСтроки-7].ВремяНач;
	КонПериода = Отчет.ТабДанных[НомерСтроки-7].ВремяКон;
	Если НачПериода = Дата(1,1,1) и КонПериода = Дата(1,1,1)Тогда
		День = Отчет.ТабДанных[НомерСтроки-7].День;
		
		НачПериода = День;		
		КонПериода = КонецДня(День);
	КонецЕсли;
	Если НачПериода = Дата(1,1,1)  и День = Дата(1,1,1)Тогда 
		НачПериода = Отчет.НачПериода;
		КонПериода = Отчет.КонПериода;
	КонецЕсли;
	
	ПарамРасшифровки = Новый Структура("КонПериода,НачПериода,Объект",КонПериода,НачПериода,Отчет.ТабДанных[НомерСтроки-7].Объект);
	Оповестить("РежимМаршрута", ПарамРасшифровки);
	СтандартнаяОбработка = Ложь;	
	
	

КонецПроцедуры

