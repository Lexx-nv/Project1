
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ
//

// Функция выполняет формирование табличного документа отчета по дискретным датчикам.
//
Функция СформироватьОтчетПоДискретнымДатчикам(НачПериода, КонПериода, Объект, Датчик)
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("Макет");
			
    // Данные датчика
	ТабРезультат = ItobОперативныйМониторинг.ПолучитьДанныеДатчикаОбъекта(Объект, НачПериода, КонПериода, Датчик);	
	
	ТабДанных = Новый ТаблицаЗначений;
	ТабДанных.Колонки.Добавить("НачДата");
	ТабДанных.Колонки.Добавить("КонДата");	
	ТабДанных.Колонки.Добавить("Значение");
	ТабДанных.Колонки.Добавить("Продолжительность");
	ТабДанных.Колонки.Добавить("Широта");
	ТабДанных.Колонки.Добавить("Долгота");
	ТабДанных.Колонки.Добавить("Расшифровка");
	
	Если ТабРезультат.Количество() > 0 Тогда
						
		СтрокаНачалаДиапазона = ТабРезультат[0];
		
		Для п = 1 По ТабРезультат.Количество()-1 Цикл
			
			Если ТабРезультат[п].Значение <> СтрокаНачалаДиапазона.Значение
				ИЛИ п = ТабРезультат.Количество()-1 Тогда
				
				НовСтрокаДанных = ТабДанных.Добавить();
				НовСтрокаДанных.НачДата  = СтрокаНачалаДиапазона.Период;
				НовСтрокаДанных.КонДата  = ТабРезультат[п].Период-?(п = ТабРезультат.Количество()-1,0,1);				
				НовСтрокаДанных.Значение = СтрокаНачалаДиапазона.Значение;
				НовСтрокаДанных.Широта   = СтрокаНачалаДиапазона.Широта;
				НовСтрокаДанных.Долгота  = СтрокаНачалаДиапазона.Долгота;
				НовСтрокаДанных.Расшифровка  = СтрокаНачалаДиапазона.Расшифровка;
				НовСтрокаДанных.Продолжительность = НовСтрокаДанных.КонДата - НовСтрокаДанных.НачДата + 1;
				
				СтрокаНачалаДиапазона = ТабРезультат[п];
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;	
	
	ОбластьШапка         = Макет.ПолучитьОбласть("Шапка");
	ОбластьДетали        = Макет.ПолучитьОбласть("Детали");	
	
	ОбластьШапка.Параметры.ЗаголовокОтчета = "Отчет по дискретным датчикам за "+ПредставлениеПериода(НачПериода,КонПериода);
	ОбластьШапка.Параметры.Объект = "Объект мониторинга: "+Объект+", датчик: "+Датчик;
	
	ТабДокумент.Вывести(ОбластьШапка);
		
	НомПП = 1;
	
	Для Каждого СтрокаДанных Из ТабДанных Цикл
						
		ОбластьДетали.Параметры.Заполнить(СтрокаДанных);
		ОбластьДетали.Параметры.Значение = ?(ПустаяСтрока(СтрокаДанных.Расшифровка), "Показание: "+СтрокаДанных.Значение, СтрокаДанных.Расшифровка);
		ОбластьДетали.Параметры.НомПП = НомПП;				
		ОбластьДетали.Параметры.Место = ItobОперативныйМониторинг.НайтиБлижайшийАдрес(СтрокаДанных.Широта, СтрокаДанных.Долгота);				
		ОбластьДетали.Параметры.Продолжительность = ItobОперативныйМониторинг.ПредставлениеВремени(СтрокаДанных.Продолжительность);		
		ОбластьДетали.Параметры.Расшифровка = Новый Структура("НачПериода,КонПериода,Объект",СтрокаДанных.НачДата-1,СтрокаДанных.КонДата+1,Объект);
		
		ТабДокумент.Вывести(ОбластьДетали);
				
		НомПП = НомПП + 1;
	
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("ИтогЗаголовок");
	ТабДокумент.Вывести(Область);
	
	ОбластьИтогСтрока = Макет.ПолучитьОбласть("ИтогСтрока");
	
	ТабДанных.Свернуть("Значение,Расшифровка", "Продолжительность");
	Для Каждого СтрокаИтоги Из ТабДанных Цикл
		ОбластьИтогСтрока.Параметры.Значение = ?(ПустаяСтрока(СтрокаИтоги.Расшифровка), "Показание: "+СтрокаИтоги.Значение, СтрокаИтоги.Расшифровка);
		ОбластьИтогСтрока.Параметры.Продолжительность = ItobОперативныйМониторинг.ПредставлениеВремени(СтрокаИтоги.Продолжительность)+" ("+Формат(СтрокаИтоги.Продолжительность/ТабДанных.Итог("Продолжительность")*100,"ЧЦ=3; ЧДЦ=1; ЧН=0")+"%)";
		ТабДокумент.Вывести(ОбластьИтогСтрока);
	
	КонецЦикла;
	
	
	Возврат ТабДокумент;

	
КонецФункции // СформироватьОтчетПоДискретнымДатчикам()

// Процедура обработчик события "ПриКомпоновкеРезультата" объекта
//
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	
	ДокументРезультат.Вывести(СформироватьОтчетПоДискретнымДатчикам(
		НачПериода,
		КонПериода,
		Объект,
		Датчик));
				
КонецПроцедуры // ПриКомпоновкеРезультата()
  
// Процедура - обработчик события "ОбработкаПроверкиЗаполнения".
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НачПериода > КонПериода Тогда
		ТекстОшибки = НСтр("ru='Начало периода не может быть больше даты конца периода'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			Неопределено, // ОбъектИлиСсылка
			"ItobОтчетПоДискретнымДатчикам",
			"Отчет", // ПутьКДанным
			Отказ
		);
	КонецЕсли;
		
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

