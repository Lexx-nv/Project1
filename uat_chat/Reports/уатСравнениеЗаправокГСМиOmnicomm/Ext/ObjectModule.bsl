#Если Клиент Тогда
	
Перем мУчетПоОбъектамСтроительства;
	
//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
    УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Период КАК Дата,
	|	ВложенныйЗапрос.Документ,
	|	ВложенныйЗапрос.ТС КАК ТС,
	|	ВложенныйЗапрос.НачалоПериода КАК НачалоПериода,
	|	ВложенныйЗапрос.КоличествоБД КАК КоличествоБД,
	|	ВложенныйЗапрос.КоличествоДок КАК КоличествоДок
	|{ВЫБРАТЬ
	|	Документ.*,
	|	ТС.*,
	|	НачалоПериода,
	|	КоличествоБД,
	|	КоличествоДок,
	|	Дата}
	|ИЗ
	|	(ВЫБРАТЬ
	|		""Заправка Omnicomm"" КАК Документ,
	|		НАЧАЛОПЕРИОДА(уатДополнительныеСведенияПоOmnicomm.Период, ДЕНЬ) КАК Период,
	|		НАЧАЛОПЕРИОДА(уатДополнительныеСведенияПоOmnicomm.Период, МИНУТА) КАК НачалоПериода,
	|		уатДополнительныеСведенияПоOmnicomm.ТС КАК ТС,
	|		уатДополнительныеСведенияПоOmnicomm.Значение КАК КоличествоБД,
	|		NULL КАК КоличествоДок
	|	ИЗ
	|		РегистрСведений.уатДополнительныеСведенияПоOmnicomm КАК уатДополнительныеСведенияПоOmnicomm
	|	ГДЕ
	|		уатДополнительныеСведенияПоOmnicomm.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.уатТипСобытияGPS.ЗаправкаГСМ)
	|		И уатДополнительныеСведенияПоOmnicomm.Период МЕЖДУ &ДатаНачала И &ДатаКонца
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		уатОборотыПоЗаправкамГСМОбороты.Регистратор,
	|		НАЧАЛОПЕРИОДА(уатОборотыПоЗаправкамГСМОбороты.Период, ДЕНЬ),
	|		НАЧАЛОПЕРИОДА(уатОборотыПоЗаправкамГСМОбороты.Период, МИНУТА),
	|		уатОборотыПоЗаправкамГСМОбороты.ТС,
	|		NULL,
	|		уатОборотыПоЗаправкамГСМОбороты.КоличествоОборот
	|	ИЗ
	|		РегистрНакопления.уатОборотыПоЗаправкамГСМ.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК уатОборотыПоЗаправкамГСМОбороты) КАК ВложенныйЗапрос
	|{ГДЕ
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.Документ.*,
	|	ВложенныйЗапрос.ТС.*,
	|	ВложенныйЗапрос.НачалоПериода,
	|	ВложенныйЗапрос.КоличествоБД,
	|	ВложенныйЗапрос.КоличествоДок,
	|	(ВЫБОР
	|			КОГДА ВложенныйЗапрос.ТС.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			КОГДА ВложенныйЗапрос.ТС.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ЛОЖЬ
	|		КОНЕЦ) КАК ТСВыбыло}
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачалоПериода
	|{УПОРЯДОЧИТЬ ПО
	|	Документ.*,
	|	ТС.*,
	|	Дата,
	|	НачалоПериода}
	|ИТОГИ
	|	СУММА(КоличествоБД),
	|	СУММА(КоличествоДок)
	|ПО
	|	Дата,
	|	ТС
	|{ИТОГИ ПО
	|	Документ.*,
	|	ТС.*,
	|	Дата,
	|	НачалоПериода}";
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоДок" 	    , "Количество (Документ)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоБД"		 	, "Количество (Omnicomm)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НачалоПериода"	 	, "Время");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Период"			 	, "Дата");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСВыбыло"				, "ТС выбыло");
	
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	

	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Дата");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ТС");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Документ");	
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("НачалоПериода");	
	
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоДок", "Количество (Документ)", Истина,"ЧДЦ=3",);
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоБД" , "Количество (Omnicomm)", Истина,"ЧДЦ=3",);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	УниверсальныйОтчет.ДобавитьОтбор("ТСВыбыло", Истина, ВидСравнения.Равно, Ложь);
	
	ЭлементУслОформления = УниверсальныйОтчет.ПостроительОтчета.УсловноеОформление.Добавить(""); 
	ЭлементУслОформления.Использование = Истина; 
	ЭлементОбласть = ЭлементУслОформления.Область.Добавить("Документ", "Документ", ТипОбластиОформления.Поле); 
		
	ЭлементОформления = ЭлементУслОформления.Оформление.ГоризонтальноеПоложение; 
	ЭлементОформления.Использование = Истина; 
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
		
КонецПроцедуры // УстановитьНачальныеНастройки()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
		
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);

КонецПроцедуры // СформироватьОтчет()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 
// 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = 0;


#КонецЕсли