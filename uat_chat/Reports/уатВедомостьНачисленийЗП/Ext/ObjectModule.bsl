#Если Клиент Тогда
	
//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА


// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	КонецЕсли;
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	уатОсновныеНачисления.ПериодРегистрации КАК Период,
	|	уатОсновныеНачисления.Регистратор,
	|	уатОсновныеНачисления.Организация,
	|	уатСведенияОСотрудникахСрезПоследних.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	уатСведенияОСотрудникахСрезПоследних.Сотрудник КАК Сотрудник,
	|	уатСведенияОСотрудникахСрезПоследних.ТабельныйНомер КАК ТабНомер,
	|	уатСведенияОСотрудникахСрезПоследних.Сотрудник.Наименование КАК ФИО,
	|	уатОсновныеНачисления.ВидРасчета КАК ВидНачисления,
	|	СУММА(уатОсновныеНачисления.Результат) КАК Сумма,
	|	НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, ДЕНЬ) КАК ПериодДень,
	|	НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, НЕДЕЛЯ) КАК ПериодНеделя,
	|	НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, ДЕКАДА) КАК ПериодДекада,
	|	НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, МЕСЯЦ) КАК ПериодМесяц,
	|	НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, КВАРТАЛ) КАК ПериодКвартал,
	|	НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|	НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, ГОД) КАК ПериодГод
	|{ВЫБРАТЬ
	|	уатОсновныеНачисления.ПериодРегистрации КАК Период,
	|	Регистратор.*,
	|	Организация.*,
	|	ПодразделениеОрганизации.*,
	|	Сотрудник.*,
	|	ТабНомер,
	|	ФИО,
	|	ВидНачисления.*,
	|	Сумма,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод}
	|ИЗ
	|	РегистрРасчета.уатОсновныеНачисления КАК уатОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатСведенияОСотрудниках.СрезПоследних(&ДатаКон, {(Организация).* КАК Организация}) КАК уатСведенияОСотрудникахСрезПоследних
	|		ПО уатОсновныеНачисления.Сотрудник = уатСведенияОСотрудникахСрезПоследних.Сотрудник
	|ГДЕ
	|	уатОсновныеНачисления.БазовыйПериодНачало МЕЖДУ &ДатаНачала И &ДатаКонца
	|{ГДЕ
	|	уатОсновныеНачисления.ПериодРегистрации КАК Период,
	|	уатОсновныеНачисления.Регистратор.*,
	|	уатОсновныеНачисления.Организация.*,
	|	уатСведенияОСотрудникахСрезПоследних.ПодразделениеОрганизации.*,
	|	уатСведенияОСотрудникахСрезПоследних.Сотрудник.*,
	|	уатСведенияОСотрудникахСрезПоследних.ТабельныйНомер,
	|	уатСведенияОСотрудникахСрезПоследних.Сотрудник.Наименование,
	|	уатОсновныеНачисления.ВидРасчета.* КАК ВидНачисления,
	|	уатОсновныеНачисления.Результат КАК Сумма,
	|	(НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, ДЕНЬ)) КАК ПериодДень,
	|	(НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, НЕДЕЛЯ)) КАК ПериодНеделя,
	|	(НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, ДЕКАДА)) КАК ПериодДекада,
	|	(НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, МЕСЯЦ)) КАК ПериодМесяц,
	|	(НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, КВАРТАЛ)) КАК ПериодКвартал,
	|	(НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, ПОЛУГОДИЕ)) КАК ПериодПолугодие,
	|	(НАЧАЛОПЕРИОДА(уатОсновныеНачисления.ПериодРегистрации, ГОД)) КАК ПериодГод}
	|
	|СГРУППИРОВАТЬ ПО
	|	уатСведенияОСотрудникахСрезПоследних.Сотрудник,
	|	уатСведенияОСотрудникахСрезПоследних.ТабельныйНомер,
	|	уатОсновныеНачисления.ВидРасчета,
	|	уатСведенияОСотрудникахСрезПоследних.ПодразделениеОрганизации,
	|	уатСведенияОСотрудникахСрезПоследних.Сотрудник.Наименование,
	|	уатОсновныеНачисления.Организация,
	|	уатОсновныеНачисления.Регистратор,
	|	уатОсновныеНачисления.ПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФИО
	|{УПОРЯДОЧИТЬ ПО
	|	уатОсновныеНачисления.ПериодРегистрации КАК Период,
	|	Регистратор.*,
	|	Организация.*,
	|	ПодразделениеОрганизации.*,
	|	Сотрудник.*,
	|	ТабНомер,
	|	ФИО,
	|	ВидНачисления.*,
	|	Сумма,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод}
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ,
	|	ТабНомер,
	|	Сотрудник,
	|	ФИО,
	|	ПодразделениеОрганизации,
	|	ВидНачисления
	|{ИТОГИ ПО
	|	уатОсновныеНачисления.ПериодРегистрации КАК Период,
	|	Регистратор.*,
	|	Организация.*,
	|	ПодразделениеОрганизации.*,
	|	Сотрудник.*,
	|	ТабНомер,
	|	ФИО,
	|	ВидНачисления.* КАК ВидНачисления,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод}";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , 
	//                                                  <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатДТП.Заказчик", "Заказчик", "Заказчик", 
	//                                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
	//	
	//	// Добавление свойств и категорий в исходный текст запроса.
	//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	//КонецЕсли;
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
	
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПодразделениеОрганизации", "Подразделение организации");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТабНомер"                , "Табельный номер");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВидНачисления"           , "Вид начисления");
	
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Сотрудник");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ВидНачисления");

	УниверсальныйОтчет.ДобавитьПоказатель("Сумма" , "Сумма" , Истина,"ЧДЦ=2", , );

	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	УниверсальныйОтчет.ДобавитьОтбор("Организация"  , Ложь);
	УниверсальныйОтчет.ДобавитьОтбор("Сотрудник"    , Ложь);
	УниверсальныйОтчет.ДобавитьОтбор("ВидНачисления", Ложь);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	//УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ВыполнениеЗаказовНаТС", "ЗаказНаТС");	
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ФИО"     , ТипРазмещенияРеквизитовИзмерений.Отдельно);
	//ПутьКДанным, Размещение = Неопределено, Положение = 3
	
КонецПроцедуры // УстановитьНачальныеНастройки()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
	
КонецПроцедуры // СформироватьОтчет()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 
// 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = 0;
	
#КонецЕсли
