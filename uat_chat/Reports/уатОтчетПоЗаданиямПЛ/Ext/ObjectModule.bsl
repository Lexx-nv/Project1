#Если Клиент Тогда
	
//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА


// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	КонецЕсли;
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	уатПутевойЛистЗадание.Ссылка КАК Ссылка,
	|	уатПутевойЛистЗадание.Ссылка.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, ДЕНЬ) КАК ПериодДень,
	|	НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, НЕДЕЛЯ) КАК ПериодНеделя,
	|	НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, ДЕКАДА) КАК ПериодДекада,
	|	НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, МЕСЯЦ) КАК ПериодМесяц,
	|	НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, КВАРТАЛ) КАК ПериодКвартал,
	|	НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|	НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, ГОД) КАК ПериодГод,
	|	уатПутевойЛистЗадание.Выполнено,
	|	уатПутевойЛистЗадание.АдресПрибытия,
	|	уатПутевойЛистЗадание.АдресУбытия,
	|	уатПутевойЛистЗадание.ВремяПрибытия,
	|	уатПутевойЛистЗадание.ВремяУбытия,
	|	уатПутевойЛистЗадание.КоличествоЕздок КАК КоличествоЕздок,
	|	уатПутевойЛистЗадание.КоличествоКмГруз КАК КоличествоКмГруз,
	|	уатПутевойЛистЗадание.КоличествоКмПорожний КАК КоличествоКмПорожний,
	|	уатПутевойЛистЗадание.КоличествоОпераций КАК КоличествоОпераций,
	|	уатПутевойЛистЗадание.КоличествоКмСпец КАК КоличествоКмСпец,
	|	уатПутевойЛистЗадание.КоличествоКмСпец2 КАК КоличествоКмСпец2,
	|	уатПутевойЛистЗадание.КоличествоКмСпец3 КАК КоличествоКмСпец3,
	|	уатПутевойЛистЗадание.КоличествоКмСпец4 КАК КоличествоКмСпец4,
	|	уатПутевойЛистЗадание.КоличествоКмСпец5 КАК КоличествоКмСпец5,
	|	уатПутевойЛистЗадание.КоличествоТонн КАК КоличествоТонн,
	|	уатПутевойЛистЗадание.Контрагент КАК Контрагент,
	|	уатПутевойЛистЗадание.ОбъектСтроительства КАК ОбъектСтроительства,
	|	уатПутевойЛистЗадание.Маршрут,
	|	уатПутевойЛистЗадание.Номенклатура,
	|	уатПутевойЛистЗадание.Подача,
	|	уатПутевойЛистЗадание.Подразделение,
	|	уатПутевойЛистЗадание.УсловиеРаботы,
	|	уатПутевойЛистЗадание.КоличествоЧасов КАК КоличествоЧасов,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))) - уатПутевойЛистЗадание.КоличествоЧасов > 0
	|			ТОГДА (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))) - 1
	|		ИНАЧЕ ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))
	|	КОНЕЦ * 60 + (ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))) - уатПутевойЛистЗадание.КоличествоЧасов > 0
	|				ТОГДА уатПутевойЛистЗадание.КоличествоЧасов - ((ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))) - 1)
	|			ИНАЧЕ уатПутевойЛистЗадание.КоличествоЧасов - (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0)))
	|		КОНЕЦ * 100 КАК ЧИСЛО(15, 2))) КАК КоличествоЧасовИтоги,
	|	уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство КАК ТранспортноеСредство,
	|	ВЫБОР
	|		КОГДА уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.ВидМоделиТС = ЗНАЧЕНИЕ(Перечисление.уатВидыМоделейТС.Автотранспорт)
	|			ТОГДА уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.ГосударственныйНомер
	|		ИНАЧЕ уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.Наименование
	|	КОНЕЦ КАК ТСГосНомер,
	|	ВЫБОР
	|		КОГДА уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.ВидМоделиТС = ЗНАЧЕНИЕ(Перечисление.уатВидыМоделейТС.Автотранспорт)
	|			ТОГДА уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.ГаражныйНомер
	|		ИНАЧЕ уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.Наименование
	|	КОНЕЦ КАК ТСГарНомер,
	|	уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.Колонна КАК Колонна,
	|	уатПутевойЛистЗадание.КоличествоКмГруз * уатПутевойЛистЗадание.КоличествоЕздок КАК КоличествоКмГрузВсего,
	|	уатПутевойЛистЗадание.КоличествоКмПорожний * уатПутевойЛистЗадание.КоличествоЕздок КАК КоличествоКмПорожнийВсего,
	|	уатПутевойЛистЗадание.КоличествоОпераций * уатПутевойЛистЗадание.КоличествоЕздок КАК КоличествоОперацийВсего,
	|	уатПутевойЛистЗадание.КоличествоКмСпец * уатПутевойЛистЗадание.КоличествоЕздок КАК КоличествоКмСпецВсего,
	|	уатПутевойЛистЗадание.КоличествоКмСпец2 * уатПутевойЛистЗадание.КоличествоЕздок КАК КоличествоКмСпец2Всего,
	|	уатПутевойЛистЗадание.КоличествоКмСпец3 * уатПутевойЛистЗадание.КоличествоЕздок КАК КоличествоКмСпец3Всего,
	|	уатПутевойЛистЗадание.КоличествоКмСпец4 * уатПутевойЛистЗадание.КоличествоЕздок КАК КоличествоКмСпец4Всего,
	|	уатПутевойЛистЗадание.КоличествоКмСпец5 * уатПутевойЛистЗадание.КоличествоЕздок КАК КоличествоКмСпец5Всего,
	|	уатПутевойЛистЗадание.КоличествоТонн * уатПутевойЛистЗадание.КоличествоЕздок КАК КоличествоТоннВсего,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))) - уатПутевойЛистЗадание.КоличествоЧасов > 0
	|			ТОГДА (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))) - 1
	|		ИНАЧЕ ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))
	|	КОНЕЦ * 60 * уатПутевойЛистЗадание.КоличествоЕздок + ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))) - уатПутевойЛистЗадание.КоличествоЧасов > 0
	|			ТОГДА уатПутевойЛистЗадание.КоличествоЧасов - ((ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))) - 1)
	|		ИНАЧЕ уатПутевойЛистЗадание.КоличествоЧасов - (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0)))
	|	КОНЕЦ * 100 * уатПутевойЛистЗадание.КоличествоЕздок КАК КоличествоЧасовВсего
	|{ВЫБРАТЬ
	|	Ссылка.*,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	Выполнено,
	|	АдресПрибытия.*,
	|	АдресУбытия.*,
	|	ВремяПрибытия,
	|	ВремяУбытия,
	|	КоличествоЕздок,
	|	КоличествоЧасов,
	|	КоличествоКмГруз,
	|	КоличествоКмПорожний,
	|	КоличествоОпераций,
	|	КоличествоКмСпец,
	|	КоличествоКмСпец2,
	|	КоличествоКмСпец3,
	|	КоличествоКмСпец4,
	|	КоличествоКмСпец5,
	|	КоличествоТонн,
	|	КоличествоЧасов,
	|	Контрагент.*,
	|	ОбъектСтроительства.*,
	|	Маршрут.*,
	|	Номенклатура.*,
	|	Подача,
	|	Подразделение.*,
	|	УсловиеРаботы.*,
	|	ТранспортноеСредство.*,
	|	ТСГарНомер,
	|	ТСГосНомер,
	|	Колонна.*,
	|	КоличествоКмГрузВсего,
	|	КоличествоКмПорожнийВсего,
	|	КоличествоОперацийВсего,
	|	КоличествоКмСпецВсего,
	|	КоличествоКмСпец2Всего,
	|	КоличествоКмСпец3Всего,
	|	КоличествоКмСпец4Всего,
	|	КоличествоКмСпец5Всего,
	|	КоличествоТоннВсего,
	|	КоличествоЧасовВсего}
	|ИЗ
	|	Документ.уатПутевойЛист.Задание КАК уатПутевойЛистЗадание
	|ГДЕ
	|	уатПутевойЛистЗадание.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаКонца
	|{ГДЕ
	|	уатПутевойЛистЗадание.Ссылка.Дата КАК Период,
	|	(НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, ДЕНЬ)) КАК ПериодДень,
	|	(НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, НЕДЕЛЯ)) КАК ПериодНеделя,
	|	(НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, ДЕКАДА)) КАК ПериодДекада,
	|	(НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, МЕСЯЦ)) КАК ПериодМесяц,
	|	(НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, КВАРТАЛ)) КАК ПериодКвартал,
	|	(НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, ПОЛУГОДИЕ)) КАК ПериодПолугодие,
	|	(НАЧАЛОПЕРИОДА(уатПутевойЛистЗадание.Ссылка.Дата, ГОД)) КАК ПериодГод,
	|	уатПутевойЛистЗадание.Ссылка.*,
	|	уатПутевойЛистЗадание.Выполнено,
	|	уатПутевойЛистЗадание.АдресПрибытия.*,
	|	уатПутевойЛистЗадание.АдресУбытия.*,
	|	уатПутевойЛистЗадание.ВремяПрибытия,
	|	уатПутевойЛистЗадание.ВремяУбытия,
	|	уатПутевойЛистЗадание.КоличествоЕздок,
	|	(ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов / 3600 КАК ЧИСЛО(15, 0))) - уатПутевойЛистЗадание.КоличествоЧасов / 3600 > 0
	|				ТОГДА (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов / 3600 КАК ЧИСЛО(15, 0))) - 1
	|			ИНАЧЕ ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов / 3600 КАК ЧИСЛО(15, 0))
	|		КОНЕЦ + (ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов / 3600 КАК ЧИСЛО(15, 0))) - уатПутевойЛистЗадание.КоличествоЧасов / 3600 > 0
	|					ТОГДА уатПутевойЛистЗадание.КоличествоЧасов / 3600 - ((ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов / 3600 КАК ЧИСЛО(15, 0))) - 1)
	|				ИНАЧЕ уатПутевойЛистЗадание.КоличествоЧасов / 3600 - (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов / 3600 КАК ЧИСЛО(15, 0)))
	|			КОНЕЦ * 60 / 100 КАК ЧИСЛО(15, 2)))) КАК КоличествоЧасов,
	|	уатПутевойЛистЗадание.КоличествоКмГруз,
	|	уатПутевойЛистЗадание.КоличествоКмПорожний,
	|	уатПутевойЛистЗадание.КоличествоОпераций,
	|	уатПутевойЛистЗадание.КоличествоКмСпец,
	|	уатПутевойЛистЗадание.КоличествоКмСпец2,
	|	уатПутевойЛистЗадание.КоличествоКмСпец3,
	|	уатПутевойЛистЗадание.КоличествоКмСпец4,
	|	уатПутевойЛистЗадание.КоличествоКмСпец5,
	|	уатПутевойЛистЗадание.КоличествоТонн,
	|	уатПутевойЛистЗадание.КоличествоЧасов,
	|	уатПутевойЛистЗадание.Контрагент.*,
	|	уатПутевойЛистЗадание.ОбъектСтроительства.*,
	|	уатПутевойЛистЗадание.Маршрут.*,
	|	уатПутевойЛистЗадание.Номенклатура.*,
	|	уатПутевойЛистЗадание.Подача,
	|	уатПутевойЛистЗадание.Подразделение.*,
	|	уатПутевойЛистЗадание.УсловиеРаботы.*,
	|	уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.*,
	|	(ВЫБОР
	|			КОГДА уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.ВидМоделиТС = ЗНАЧЕНИЕ(Перечисление.уатВидыМоделейТС.Автотранспорт)
	|				ТОГДА уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.ГосударственныйНомер
	|			ИНАЧЕ уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.Наименование
	|		КОНЕЦ) КАК ТСГосНомер,
	|	(ВЫБОР
	|			КОГДА уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.ВидМоделиТС = ЗНАЧЕНИЕ(Перечисление.уатВидыМоделейТС.Автотранспорт)
	|				ТОГДА уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.ГаражныйНомер
	|			ИНАЧЕ уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.Наименование
	|		КОНЕЦ) КАК ТСГарНомер,
	|	уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.Колонна.* КАК Колонна,
	|	(уатПутевойЛистЗадание.КоличествоКмГруз * уатПутевойЛистЗадание.КоличествоЕздок) КАК КоличествоКмГрузВсего,
	|	(уатПутевойЛистЗадание.КоличествоКмПорожний * уатПутевойЛистЗадание.КоличествоЕздок) КАК КоличествоКмПорожнийВсего,
	|	(уатПутевойЛистЗадание.КоличествоОпераций * уатПутевойЛистЗадание.КоличествоЕздок) КАК КоличествоОперацийВсего,
	|	(уатПутевойЛистЗадание.КоличествоКмСпец * уатПутевойЛистЗадание.КоличествоЕздок) КАК КоличествоКмСпецВсего,
	|	(уатПутевойЛистЗадание.КоличествоКмСпец2 * уатПутевойЛистЗадание.КоличествоЕздок) КАК КоличествоКмСпец2Всего,
	|	(уатПутевойЛистЗадание.КоличествоКмСпец3 * уатПутевойЛистЗадание.КоличествоЕздок) КАК КоличествоКмСпец3Всего,
	|	(уатПутевойЛистЗадание.КоличествоКмСпец4 * уатПутевойЛистЗадание.КоличествоЕздок) КАК КоличествоКмСпец4Всего,
	|	(уатПутевойЛистЗадание.КоличествоКмСпец5 * уатПутевойЛистЗадание.КоличествоЕздок) КАК КоличествоКмСпец5Всего,
	|	(уатПутевойЛистЗадание.КоличествоТонн * уатПутевойЛистЗадание.КоличествоЕздок) КАК КоличествоТоннВсего,
	|	(ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))) - уатПутевойЛистЗадание.КоличествоЧасов > 0
	|				ТОГДА (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))) - 1
	|			ИНАЧЕ ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))
	|		КОНЕЦ * 60 * уатПутевойЛистЗадание.КоличествоЕздок + ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))) - уатПутевойЛистЗадание.КоличествоЧасов > 0
	|				ТОГДА уатПутевойЛистЗадание.КоличествоЧасов - ((ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0))) - 1)
	|			ИНАЧЕ уатПутевойЛистЗадание.КоличествоЧасов - (ВЫРАЗИТЬ(уатПутевойЛистЗадание.КоличествоЧасов КАК ЧИСЛО(15, 0)))
	|		КОНЕЦ * 100 * уатПутевойЛистЗадание.КоличествоЕздок) КАК КоличествоЧасовВсего,
	|	(ВЫБОР
	|			КОГДА уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			КОГДА уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ЛОЖЬ
	|		КОНЕЦ) КАК ТСВыбыло}	
	|{УПОРЯДОЧИТЬ ПО
	|	Ссылка.*,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	Выполнено,
	|	АдресПрибытия.*,
	|	АдресУбытия.*,
	|	ВремяПрибытия,
	|	ВремяУбытия,
	|	КоличествоЕздок,
	|	КоличествоКмГруз,
	|	КоличествоКмПорожний,
	|	КоличествоОпераций,
	|	КоличествоКмСпец,
	|	КоличествоКмСпец2,
	|	КоличествоКмСпец3,
	|	КоличествоКмСпец4,
	|	КоличествоКмСпец5,
	|	КоличествоТонн,
	|	КоличествоЧасов,
	|	Контрагент.*,
	|	ОбъектСтроительства.*,
	|	Маршрут.*,
	|	Номенклатура.*,
	|	Подача,
	|	Подразделение.*,
	|	УсловиеРаботы.*,
	|	ТранспортноеСредство.*,
	|	ТСГарНомер,
	|	ТСГосНомер,
	|	Колонна.*,
	|	КоличествоКмГрузВсего,
	|	КоличествоКмПорожнийВсего,
	|	КоличествоОперацийВсего,
	|	КоличествоКмСпецВсего,
	|	КоличествоКмСпец2Всего,
	|	КоличествоКмСпец3Всего,
	|	КоличествоКмСпец4Всего,
	|	КоличествоКмСпец5Всего,
	|	КоличествоТоннВсего,
	|	КоличествоЧасовВсего}
	|ИТОГИ
	|	СУММА(КоличествоЕздок),
	|	СУММА(КоличествоКмГруз),
	|	СУММА(КоличествоКмПорожний),
	|	СУММА(КоличествоОпераций),
	|	СУММА(КоличествоКмСпец),
	|	СУММА(КоличествоКмСпец2),
	|	СУММА(КоличествоКмСпец3),
	|	СУММА(КоличествоКмСпец4),
	|	СУММА(КоличествоКмСпец5),
	|	СУММА(КоличествоТонн),
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(СУММА(КоличествоЧасовИтоги) / 60 КАК ЧИСЛО(15, 0))) - СУММА(КоличествоЧасовИтоги) / 60 > 0
	|				ТОГДА (ВЫРАЗИТЬ(СУММА(КоличествоЧасовИтоги) / 60 КАК ЧИСЛО(15, 0))) - 1
	|			ИНАЧЕ ВЫРАЗИТЬ(СУММА(КоличествоЧасовИтоги) / 60 КАК ЧИСЛО(15, 0))
	|		КОНЕЦ + ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(СУММА(КоличествоЧасовИтоги) / 60 КАК ЧИСЛО(15, 0))) - СУММА(КоличествоЧасовИтоги) / 60 > 0
	|				ТОГДА СУММА(КоличествоЧасовИтоги) / 60 - ((ВЫРАЗИТЬ(СУММА(КоличествоЧасовИтоги) / 60 КАК ЧИСЛО(15, 0))) - 1)
	|			ИНАЧЕ СУММА(КоличествоЧасовИтоги) / 60 - (ВЫРАЗИТЬ(СУММА(КоличествоЧасовИтоги) / 60 КАК ЧИСЛО(15, 0)))
	|		КОНЕЦ * 60 / 100 КАК ЧИСЛО(15, 2)) КАК КоличествоЧасов,
	|	СУММА(КоличествоКмГрузВсего),
	|	СУММА(КоличествоКмПорожнийВсего),
	|	СУММА(КоличествоОперацийВсего),
	|	СУММА(КоличествоКмСпецВсего),
	|	СУММА(КоличествоКмСпец2Всего),
	|	СУММА(КоличествоКмСпец3Всего),
	|	СУММА(КоличествоКмСпец4Всего),
	|	СУММА(КоличествоКмСпец5Всего),
	|	СУММА(КоличествоТоннВсего),
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(СУММА(КоличествоЧасовВсего) / 60 КАК ЧИСЛО(15, 0))) - СУММА(КоличествоЧасовВсего) / 60 > 0
	|				ТОГДА (ВЫРАЗИТЬ(СУММА(КоличествоЧасовВсего) / 60 КАК ЧИСЛО(15, 0))) - 1
	|			ИНАЧЕ ВЫРАЗИТЬ(СУММА(КоличествоЧасовВсего) / 60 КАК ЧИСЛО(15, 0))
	|		КОНЕЦ + ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(СУММА(КоличествоЧасовВсего) / 60 КАК ЧИСЛО(15, 0))) - СУММА(КоличествоЧасовВсего) / 60 > 0
	|				ТОГДА СУММА(КоличествоЧасовВсего) / 60 - ((ВЫРАЗИТЬ(СУММА(КоличествоЧасовВсего) / 60 КАК ЧИСЛО(15, 0))) - 1)
	|			ИНАЧЕ СУММА(КоличествоЧасовВсего) / 60 - (ВЫРАЗИТЬ(СУММА(КоличествоЧасовВсего) / 60 КАК ЧИСЛО(15, 0)))
	|		КОНЕЦ * 60 / 100 КАК ЧИСЛО(15, 2)) КАК КоличествоЧасовВсего
	|ПО
	|	ТранспортноеСредство,
	|	Ссылка
	|{ИТОГИ ПО
	|	Ссылка.*,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	Выполнено,
	|	АдресПрибытия.*,
	|	АдресУбытия.*,
	|	ВремяПрибытия,
	|	ВремяУбытия,
	|	Контрагент.*,
	|	ОбъектСтроительства.*,
	|	Маршрут.*,
	|	Номенклатура.*,
	|	Подача,
	|	Подразделение.*,
	|	УсловиеРаботы.*,
	|	ТранспортноеСредство.*,
	|	ТСГарНомер,
	|	ТСГосНомер,
	|	Колонна.*}";
    
	// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , 
	//                                                  <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатДТП.Заказчик", "Заказчик", "Заказчик", 
	//                                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
	//	
	//	// Добавление свойств и категорий в исходный текст запроса.
	//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	//КонецЕсли;
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
	
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Ссылка"           	    , "Путевой лист");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Контрагент"       	    , "Контрагент");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОбъектСтроительства", "Объект строительства");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("АдресПрибытия"    	    , "Адрес прибытия");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("АдресУбытия"      	    , "Адрес убытия");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВремяПрибытия"    	    , "Время прибытия");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВремяУбытия"		        , "Время убытия");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("УсловиеРаботы"    	    , "Условие работы");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Номенклатура"    		    , "Груз");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТранспортноеСредство"     , "ТС (все поля)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГарНомер"       	    , "ТС (гар. номер)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГосНомер"       	    , "ТС (гос. номер)");	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоТонн"           , "Вес груза");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоЧасов"          , "Время работы");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоЕздок"          , "Количество ездок");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмГруз"         , "Пробег с грузом");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмПорожний"     , "Пробег порожний");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоОпераций"       , "Количество операций");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмСпец"         , "Пробег специальной работы 1");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмСпец2"        , "Пробег специальной работы 2");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмСпец3"        , "Пробег специальной работы 3");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмСпец4"        , "Пробег специальной работы 4");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмСпец5"        , "Пробег специальной работы 5");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоТоннВсего"      , "Вес груза (всего)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоЧасовВсего"     , "Время работы (всего)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмГрузВсего"    , "Пробег с грузом (всего)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмПорожнийВсего", "Пробег порожний (всего)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоОперацийВсего"  , "Количество операций (всего)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмСпецВсего"    , "Пробег специальной работы 1 (всего)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмСпец2Всего"   , "Пробег специальной работы 2 (всего)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмСпец3Всего"   , "Пробег специальной работы 3 (всего)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмСпец4Всего"   , "Пробег специальной работы 4 (всего)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКмСпец5Всего"   , "Пробег специальной работы 5 (всего)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСВыбыло"					, "ТС выбыло");

	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ТранспортноеСредство");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Ссылка");
	
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоТонн"			 , "Вес груза, т (за ездку)"				   , Истина,"ЧДЦ=3", "ЗаЕздку", "За ездку" );
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЧасов"			 , "Время работы, ч:мин (за ездку)"            , Истина,"ЧЦ=15; ЧДЦ=2; ЧРД=:", "ЗаЕздку", "За ездку");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмГруз"		 , "Пробег с грузом, км (за ездку)"			   , Истина,"ЧДЦ=3", "ЗаЕздку", "За ездку");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмПорожний"	 , "Пробег порожний, км (за ездку)"			   , Истина,"ЧДЦ=3", "ЗаЕздку", "За ездку");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоОпераций"  	 , "Количество операций (за ездку)"			   , Ложь  ,       , "ЗаЕздку", "За ездку");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмСпец"		 , "Пробег специальной работы 1, км (за ездку)", Ложь  ,"ЧДЦ=3", "ЗаЕздку", "За ездку");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмСпец2"		 , "Пробег специальной работы 2, км (за ездку)", Ложь  ,"ЧДЦ=3", "ЗаЕздку", "За ездку");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмСпец3"		 , "Пробег специальной работы 3, км (за ездку)", Ложь  ,"ЧДЦ=3", "ЗаЕздку", "За ездку");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмСпец4"   	 , "Пробег специальной работы 4, км (за ездку)", Ложь  ,"ЧДЦ=3", "ЗаЕздку", "За ездку");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмСпец5"   	 , "Пробег специальной работы 5, км (за ездку)", Ложь  ,"ЧДЦ=3", "ЗаЕздку", "За ездку");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоТоннВсего"		 , "Вес груза, т (всего)"				   	   , Истина,"ЧДЦ=3", "Всего"  , "Всего" );
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЧасовВсего"     , "Время работы, ч:мин (всего)"			   , Истина,"ЧЦ=15; ЧДЦ=2; ЧРД=:", "Всего");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕздок"			 , "Количество ездок"						   , Истина,       , 		  ,			);	
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмГрузВсего"	 , "Пробег с грузом, км (всего)"			   , Истина,"ЧДЦ=3", "Всего"  , "Всего");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмПорожнийВсего", "Пробег порожний, км (всего)"			   , Истина,"ЧДЦ=3", "Всего"  , "Всего");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоОперацийВсего"  , "Количество операций (всего)"			   , Ложь  ,       , "Всего"  , "Всего");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмСпецВсего"	 , "Пробег специальной работы 1, км (всего)"   , Ложь  ,"ЧДЦ=3", "Всего"  , "Всего");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмСпец2Всего"	 , "Пробег специальной работы 2, км (всего)"   , Ложь  ,"ЧДЦ=3", "Всего"  , "Всего");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмСпец3Всего"	 , "Пробег специальной работы 3, км (всего)"   , Ложь  ,"ЧДЦ=3", "Всего"  , "Всего");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмСпец4Всего"   , "Пробег специальной работы 4, км (всего)"   , Ложь  ,"ЧДЦ=3", "Всего"  , "Всего");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКмСпец5Всего"   , "Пробег специальной работы 5, км (всего)"   , Ложь  ,"ЧДЦ=3", "Всего"  , "Всего");

	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	УниверсальныйОтчет.ДобавитьОтбор("Выполнено" , Истина, ВидСравнения.Равно, Истина);
	УниверсальныйОтчет.ДобавитьОтбор("Ссылка");
	УниверсальныйОтчет.ДобавитьОтбор("ТСГосНомер", Ложь  , ВидСравнения.Содержит);
	УниверсальныйОтчет.ДобавитьОтбор("Колонна");
	УниверсальныйОтчет.ДобавитьОтбор("ТСВыбыло"  , Истина, ВидСравнения.Равно, Ложь);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	//УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ТСГосНомер", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
	//ПутьКДанным, Размещение = Неопределено, Положение = 3
	
КонецПроцедуры // УстановитьНачальныеНастройки()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
	
КонецПроцедуры // СформироватьОтчет()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 
// 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = 0;
	
#КонецЕсли
