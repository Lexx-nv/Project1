#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт

	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	КонецЕсли;
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Описание исходного текста запроса.
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	уатЗаказыНаТСОстаткиИОбороты.Заказчик,
	|	уатЗаказыНаТСОстаткиИОбороты.ЗаказНаТС,
	|	уатЗаказыНаТСОстаткиИОбороты.Номенклатура,
	|	уатЗаказыНаТСОстаткиИОбороты.ЕдиницаИзмерения,
	|	уатЗаказыНаТСОстаткиИОбороты.ДатаВыполнения,
	|	уатЗаказыНаТСОстаткиИОбороты.Заказано КАК Заказано,
	|	уатЗаказыНаТСОстаткиИОбороты.Выполнено КАК Выполнено,
	|	уатЗаказыНаТСОстаткиИОбороты.Отменено КАК Отменено
	|{ВЫБРАТЬ
	|	Заказчик.*,
	|	ЗаказНаТС.*,
	|	Номенклатура.*,
	|	ЕдиницаИзмерения.*,
	|	ДатаВыполнения,
	|	Заказано,
	|	Выполнено,
	|	Отменено}
	|ИЗ
	|	(ВЫБРАТЬ
	|		уатЗаказыНаТСОстаткиИОборотыДоп.Заказчик КАК Заказчик,
	|		уатЗаказыНаТСОстаткиИОборотыДоп.ЗаказНаТС КАК ЗаказНаТС,
	|		уатЗаказыНаТСОстаткиИОборотыДоп.Номенклатура КАК Номенклатура,
	|		уатЗаказыНаТСОстаткиИОборотыДоп.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		уатЗаказыНаТСОстаткиИОборотыДоп.ДатаВыполнения КАК ДатаВыполнения,
	|		СУММА(уатЗаказыНаТСОстаткиИОборотыДоп.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
	|		СУММА(уатЗаказыНаТСОстаткиИОборотыДоп.КоличествоПриход) КАК Заказано,
	|		СУММА(ВЫБОР
	|				КОГДА уатЗаказыНаТСОстаткиИОборотыДоп.Регистратор ССЫЛКА Документ.уатОтклонениеГруза
	|					ТОГДА уатЗаказыНаТСОстаткиИОборотыДоп.КоличествоРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Отменено,
	|		СУММА(ВЫБОР
	|				КОГДА уатЗаказыНаТСОстаткиИОборотыДоп.Регистратор ССЫЛКА Документ.уатМаршрутныйЛист
	|					ТОГДА уатЗаказыНаТСОстаткиИОборотыДоп.КоличествоРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Выполнено
	|	ИЗ
	|		РегистрНакопления.уатЗаказыНаТС.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор, , ) КАК уатЗаказыНаТСОстаткиИОборотыДоп
	|	
	|	СГРУППИРОВАТЬ ПО
	|		уатЗаказыНаТСОстаткиИОборотыДоп.Заказчик,
	|		уатЗаказыНаТСОстаткиИОборотыДоп.ЗаказНаТС,
	|		уатЗаказыНаТСОстаткиИОборотыДоп.Номенклатура,
	|		уатЗаказыНаТСОстаткиИОборотыДоп.ЕдиницаИзмерения,
	|		уатЗаказыНаТСОстаткиИОборотыДоп.ДатаВыполнения) КАК уатЗаказыНаТСОстаткиИОбороты
	|{ГДЕ
	|	(ВЫБОР
	|			КОГДА уатЗаказыНаТСОстаткиИОбороты.Заказано = уатЗаказыНаТСОстаткиИОбороты.Выполнено
	|				ТОГДА ""Выполнено""
	|			КОГДА уатЗаказыНаТСОстаткиИОбороты.Заказано > 0
	|					И уатЗаказыНаТСОстаткиИОбороты.Выполнено = 0
	|				ТОГДА ""НеВыполнено""
	|			ИНАЧЕ ""ВыполненоЧастично""
	|		КОНЕЦ) КАК ВыполнениеЗаказовНаТС,
	|	уатЗаказыНаТСОстаткиИОбороты.Заказчик.*,
	|	уатЗаказыНаТСОстаткиИОбороты.ЗаказНаТС.*,
	|	уатЗаказыНаТСОстаткиИОбороты.Номенклатура.*,
	|	уатЗаказыНаТСОстаткиИОбороты.ЕдиницаИзмерения.*,
	|	уатЗаказыНаТСОстаткиИОбороты.ДатаВыполнения}
	|ИТОГИ
	|	СУММА(Заказано),
	|	СУММА(Выполнено),
	|	СУММА(Отменено)
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	Заказчик.*,
	|	ЗаказНаТС.*,
	|	Номенклатура.*,
	|	ЕдиницаИзмерения.*,
	|	ДатаВыполнения}";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатЗаказыНаТСОстаткиИОбороты.Заказчик", "Заказчик", "Заказчик", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатЗаказыНаТСОстаткиИОбороты.Номенклатура", "Номенклатура", "Номенклатура", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Заказчик", "Заказчик");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЗаказНаТС", "Заказ на ТС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Номенклатура", "Номенклатура");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЕдиницаИзмерения", "Единица измерения");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДатаВыполнения", "Дата выполнения");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Приоритет", "Приоритет");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументДвижения", "Регистратор");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВыполнениеЗаказовНаТС", "Статус заказов на ТС");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Заказано", "Заказано");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Выполнено", "Выполнено");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Отменено", "Отменено");
	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	УниверсальныйОтчет.ДобавитьПоказатель("Заказано", "Заказано", Истина,, "Количество", "Количество");
	УниверсальныйОтчет.ДобавитьПоказатель("Отменено", "Отменено", Истина,, "Количество", "Количество");
	УниверсальныйОтчет.ДобавитьПоказатель("Выполнено", "Выполнено", Истина,, "Количество", "Количество");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ЗаказНаТС");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Номенклатура");
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("ЗаказНаТС");
	УниверсальныйОтчет.ДобавитьОтбор("Номенклатура");
	УниверсальныйОтчет.ДобавитьОтбор("Заказчик");
	
	УниверсальныйОтчет.ПостроительОтчета.ДоступныеПоля.ВыполнениеЗаказовНаТС.Отбор = Ложь;
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	//УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ВыполнениеЗаказовНаТС", "ЗаказНаТС");	
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);

КонецПроцедуры // УстановитьНачальныеНастройки()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	УниверсальныйОтчет.ПостроительОтчета.ДоступныеПоля.ВыполнениеЗаказовНаТС.Отбор = Истина;
	
	ОтборВыполнениеЗаказовНаТС = Новый СписокЗначений;
	Если Выполнено = Истина Тогда
		ОтборВыполнениеЗаказовНаТС.Добавить("Выполнено");
	КонецЕсли;
	Если ВыполненоЧастично = Истина Тогда
		ОтборВыполнениеЗаказовНаТС.Добавить("ВыполненоЧастично", "Выполнено частично");
	КонецЕсли;
	Если НеВыполнено = Истина Тогда
		ОтборВыполнениеЗаказовНаТС.Добавить("НеВыполнено", "Не выполнено");
	КонецЕсли;
	
	УниверсальныйОтчет.ДобавитьОтбор("ВыполнениеЗаказовНаТС", СостояниеВыполненияЗаказов, ВидСравнения.ВСписке, ОтборВыполнениеЗаказовНаТС);
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
	
	УниверсальныйОтчет.ПостроительОтчета.Отбор.Удалить(УниверсальныйОтчет.ПостроительОтчета.Отбор.Индекс(УниверсальныйОтчет.ПостроительОтчета.Отбор["ВыполнениеЗаказовНаТС"]));
	УниверсальныйОтчет.ПостроительОтчета.ДоступныеПоля.ВыполнениеЗаказовНаТС.Отбор = Ложь;

КонецПроцедуры // СформироватьОтчет()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал,
//	6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;


////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

#КонецЕсли
