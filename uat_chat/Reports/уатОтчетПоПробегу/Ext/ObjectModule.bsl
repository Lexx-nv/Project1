#Если Клиент Тогда
	
//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА


// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	КонецЕсли;
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ТС КАК ТС,
	|	ВложенныйЗапрос.Подразделение КАК Подразделение,
	|	ВложенныйЗапрос.Контрагент КАК Контрагент,
	|	ВложенныйЗапрос.ВыработкаЗаПериод КАК ПробегЗаПериод,
	|	ВложенныйЗапрос.ВыработкаВсего + ВложенныйЗапрос.НачальныйПробег КАК ПробегВсего,
	|	ВложенныйЗапрос.ТС.ГосударственныйНомер КАК ТСГосНомер,
	|	ВложенныйЗапрос.ТС.ГаражныйНомер КАК ТСГарНомер,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, ДЕНЬ) КАК ПериодДень,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, ДЕКАДА) КАК ПериодДекада,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, МЕСЯЦ) КАК ПериодМесяц,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, КВАРТАЛ) КАК ПериодКвартал,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, ГОД) КАК ПериодГод,
	|	ВложенныйЗапрос.ОбъектСтроительства КАК ОбъектСтроительства
	|{ВЫБРАТЬ
	|	Организация.*,
	|	ТС.*,
	|	Подразделение.*,
	|	Контрагент.*,
	|	ПробегЗаПериод,
	|	ПробегВсего,
	|	ТСГосНомер,
	|	ТСГарНомер,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	ОбъектСтроительства.*}
	|ИЗ
	|	(ВЫБРАТЬ
	|		уатВыработкаТСОбороты.Организация КАК Организация,
	|		уатВыработкаТСОбороты.ТС КАК ТС,
	|		уатВыработкаТСОбороты.Подразделение КАК Подразделение,
	|		уатВыработкаТСОбороты.Контрагент КАК Контрагент,
	|		уатВыработкаТСОбороты.КоличествоОборот КАК ВыработкаВсего,
	|		0 КАК ВыработкаЗаПериод,
	|		0 КАК НачальныйПробег,
	|		уатВыработкаТСОбороты.Период КАК Период,
	|		уатВыработкаТСОбороты.ОбъектСтроительства
	|	ИЗ
	|		РегистрНакопления.уатВыработкаТС.Обороты(, &ДатаКон, Регистратор, ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ПробегОбщий)) КАК уатВыработкаТСОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		уатВыработкаТСОбороты2.Организация,
	|		уатВыработкаТСОбороты2.ТС,
	|		уатВыработкаТСОбороты2.Подразделение,
	|		уатВыработкаТСОбороты2.Контрагент,
	|		0,
	|		уатВыработкаТСОбороты2.КоличествоОборот,
	|		0,
	|		уатВыработкаТСОбороты2.Период,
	|		уатВыработкаТСОбороты2.ОбъектСтроительства
	|	ИЗ
	|		РегистрНакопления.уатВыработкаТС.Обороты(&ДатаНач, &ДатаКон, Регистратор, ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ПробегОбщий)) КАК уатВыработкаТСОбороты2
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СправочникуатТС.Организация,
	|		СправочникуатТС.Ссылка,
	|		СправочникуатТС.Подразделение,
	|		NULL,
	|		0,
	|		0,
	|		СправочникуатТС.НачальныйПробег,
	|		ДАТАВРЕМЯ(1, 1, 1),
	|		NULL
	|	ИЗ
	|		Справочник.уатТС КАК СправочникуатТС
	|	ГДЕ
	|		СправочникуатТС.НачальныйПробег > 0
	|		И СправочникуатТС.ВидМоделиТС <> ЗНАЧЕНИЕ(Перечисление.уатВидыМоделейТС.Оборудование)) КАК ВложенныйЗапрос
	|{ГДЕ
	|	ВложенныйЗапрос.Организация.*,
	|	ВложенныйЗапрос.ТС.*,
	|	ВложенныйЗапрос.Подразделение.*,
	|	ВложенныйЗапрос.Контрагент.*,
	|	ВложенныйЗапрос.ТС.ГосударственныйНомер КАК ТСГосНомер,
	|	ВложенныйЗапрос.ТС.ГаражныйНомер КАК ТСГарНомер,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, ДЕНЬ) КАК ПериодДень,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, ДЕКАДА) КАК ПериодДекада,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, МЕСЯЦ) КАК ПериодМесяц,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, КВАРТАЛ) КАК ПериодКвартал,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, ГОД) КАК ПериодГод,
	|	(ВЫБОР
	|			КОГДА ВложенныйЗапрос.ТС.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			КОГДА ВложенныйЗапрос.ТС.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ЛОЖЬ
	|		КОНЕЦ) КАК ТСВыбыло,
	|	ВложенныйЗапрос.ОбъектСтроительства.*}
	|{УПОРЯДОЧИТЬ ПО
	|	Организация.*,
	|	ТС.*,
	|	Подразделение.*,
	|	Контрагент.*,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	ВложенныйЗапрос.ВыработкаВсего КАК ПробегВсего,
	|	ВложенныйЗапрос.ВыработкаЗаПериод КАК ПробегЗаПериод,
	|	ОбъектСтроительства.*}
	|ИТОГИ
	|	СУММА(ПробегЗаПериод),
	|	СУММА(ПробегВсего)
	|ПО
	|	Организация,
	|	ТС,
	|	Подразделение,
	|	Контрагент,
	|	ОбъектСтроительства
	|{ИТОГИ ПО
	|	Организация.*,
	|	ТС.*,
	|	Подразделение.*,
	|	Контрагент.*,
	|	ТСГосНомер,
	|	ТСГарНомер,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	ОбъектСтроительства.*}";
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ПустаяДата",Дата('00010101'));
	// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , 
	//                                                  <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатДТП.Заказчик", "Заказчик", "Заказчик", 
	//                                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
	//	
	//	// Добавление свойств и категорий в исходный текст запроса.
	//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	//КонецЕсли;
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
	
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТС"                 , "ТС / оборудование (все поля)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГарНомер"         , "ТС (гар. номер)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГосНомер"         , "ТС (гос. номер)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Организация"        , "Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Подразделение"      , "Подразделение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПробегЗаПериод"     , "Пробег за период (км)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПробегВсего"        , "Пробег с начала экспл. (км)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСВыбыло"			  , "ТС выбыло");	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОбъектСтроительства", "Объект cтроительства");	
	
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ТС");
	
	УниверсальныйОтчет.ДобавитьПоказатель("ПробегЗаПериод" , "Пробег за период" , Истина,"ЧДЦ=3", , );
	УниверсальныйОтчет.ДобавитьПоказатель("ПробегВсего"    , "Пробег с начала экспл.", Истина,"ЧДЦ=3", , );

	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("ТСВыбыло", Истина, ВидСравнения.Равно, Ложь);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	//УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ВыполнениеЗаказовНаТС", "ЗаказНаТС");	
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ТСГосНомер");
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ТС.Модель");
	
КонецПроцедуры // УстановитьНачальныеНастройки()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
	
КонецПроцедуры // СформироватьОтчет()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 
// 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = 0;

#КонецЕсли
