#Если Клиент Тогда
	
//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА


// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	КонецЕсли;
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.ПЛРазнарядка КАК ПЛРазнарядка,
	|	ВложенныйЗапрос.ТипОбъекта КАК ТипОбъекта,
	|	ВложенныйЗапрос.Объект КАК Объект,
	|	ВложенныйЗапрос.ПредставлениеДокумента,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.ОсталосьДней КАК ОсталосьДней,
	|	ВложенныйЗапрос.ДействуетДо КАК ДействуетДо
	|{ВЫБРАТЬ
	|	Ссылка.*,
	|	ПЛРазнарядка.*,
	|	ТипОбъекта.*,
	|	Объект.*,
	|	ПредставлениеДокумента,
	|	Количество,
	|	ОсталосьДней,
	|	ДействуетДо}
	|ИЗ
	|	(ВЫБРАТЬ
	|		уатПутевойЛист.Ссылка КАК Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаПЛРазнарядка.ПЛ) КАК ПЛРазнарядка,
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаТипВладельцаДокумента.ОсновнойВодитель) КАК ТипОбъекта,
	|		уатПутевойЛист.Водитель1 КАК Объект,
	|		уатДокументыВодителей.ВидДокумента.Наименование + "", Серия "" + уатДокументыВодителей.Серия + "", №"" + уатДокументыВодителей.Номер КАК ПредставлениеДокумента,
	|		1 КАК Количество,
	|		ВЫБОР
	|			КОГДА уатДокументыВодителей.ДатаОкончания = &ПустаяДата
	|				ТОГДА 0
	|			ИНАЧЕ РАЗНОСТЬДАТ(&ДатаКонца, уатДокументыВодителей.ДатаОкончания, ДЕНЬ)
	|		КОНЕЦ КАК ОсталосьДней,
	|		уатДокументыВодителей.ДатаОкончания КАК ДействуетДо
	|	ИЗ
	|		Документ.уатПутевойЛист КАК уатПутевойЛист
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатДокументыВодителей КАК уатДокументыВодителей
	|			ПО уатПутевойЛист.Водитель1 = уатДокументыВодителей.Сотрудник
	|				И ((НЕ уатДокументыВодителей.Архив))
	|	ГДЕ
	|		уатПутевойЛист.ДатаВозвращения МЕЖДУ &ДатаНачала И &ДатаКонца
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		уатПутевойЛист.Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаПЛРазнарядка.ПЛ),
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаТипВладельцаДокумента.ВторойВодитель),
	|		уатПутевойЛист.Водитель2,
	|		уатДокументыВодителей.ВидДокумента.Наименование + "", Серия "" + уатДокументыВодителей.Серия + "", №"" + уатДокументыВодителей.Номер,
	|		1,
	|		ВЫБОР
	|			КОГДА уатДокументыВодителей.ДатаОкончания = &ПустаяДата
	|				ТОГДА 0
	|			ИНАЧЕ РАЗНОСТЬДАТ(&ДатаКонца, уатДокументыВодителей.ДатаОкончания, ДЕНЬ)
	|		КОНЕЦ,
	|		уатДокументыВодителей.ДатаОкончания
	|	ИЗ
	|		Документ.уатПутевойЛист КАК уатПутевойЛист
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатДокументыВодителей КАК уатДокументыВодителей
	|			ПО уатПутевойЛист.Водитель2 = уатДокументыВодителей.Сотрудник
	|				И ((НЕ уатДокументыВодителей.Архив))
	|	ГДЕ
	|		уатПутевойЛист.ДатаВозвращения МЕЖДУ &ДатаНачала И &ДатаКонца
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		уатПутевойЛист.Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаПЛРазнарядка.ПЛ),
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаТипВладельцаДокумента.ОсновноеСопроводительноеЛицо),
	|		уатПутевойЛист.Сотрудник1,
	|		уатДокументыВодителей.ВидДокумента.Наименование + "", Серия "" + уатДокументыВодителей.Серия + "", №"" + уатДокументыВодителей.Номер,
	|		1,
	|		ВЫБОР
	|			КОГДА уатДокументыВодителей.ДатаОкончания = &ПустаяДата
	|				ТОГДА 0
	|			ИНАЧЕ РАЗНОСТЬДАТ(&ДатаКонца, уатДокументыВодителей.ДатаОкончания, ДЕНЬ)
	|		КОНЕЦ,
	|		уатДокументыВодителей.ДатаОкончания
	|	ИЗ
	|		Документ.уатПутевойЛист КАК уатПутевойЛист
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатДокументыВодителей КАК уатДокументыВодителей
	|			ПО уатПутевойЛист.Сотрудник1 = уатДокументыВодителей.Сотрудник
	|				И ((НЕ уатДокументыВодителей.Архив))
	|	ГДЕ
	|		уатПутевойЛист.ДатаВозвращения МЕЖДУ &ДатаНачала И &ДатаКонца
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		уатПутевойЛист.Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаПЛРазнарядка.ПЛ),
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаТипВладельцаДокумента.ВтороеСопроводительноеЛицо),
	|		уатПутевойЛист.Сотрудник2,
	|		уатДокументыВодителей.ВидДокумента.Наименование + "", Серия "" + уатДокументыВодителей.Серия + "", №"" + уатДокументыВодителей.Номер,
	|		1,
	|		ВЫБОР
	|			КОГДА уатДокументыВодителей.ДатаОкончания = &ПустаяДата
	|				ТОГДА 0
	|			ИНАЧЕ РАЗНОСТЬДАТ(&ДатаКонца, уатДокументыВодителей.ДатаОкончания, ДЕНЬ)
	|		КОНЕЦ,
	|		уатДокументыВодителей.ДатаОкончания
	|	ИЗ
	|		Документ.уатПутевойЛист КАК уатПутевойЛист
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатДокументыВодителей КАК уатДокументыВодителей
	|			ПО уатПутевойЛист.Сотрудник2 = уатДокументыВодителей.Сотрудник
	|				И ((НЕ уатДокументыВодителей.Архив))
	|	ГДЕ
	|		уатПутевойЛист.ДатаВозвращения МЕЖДУ &ДатаНачала И &ДатаКонца
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		уатПутевойЛист.Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаПЛРазнарядка.ПЛ),
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаТипВладельцаДокумента.ТС),
	|		уатПутевойЛист.ТранспортноеСредство,
	|		уатДокументыТС.ВидДокумента.Наименование + "", Серия "" + уатДокументыТС.Серия + "", №"" + уатДокументыТС.Номер,
	|		1,
	|		ВЫБОР
	|			КОГДА уатДокументыТС.ДатаОкончания = &ПустаяДата
	|				ТОГДА 0
	|			ИНАЧЕ РАЗНОСТЬДАТ(&ДатаКонца, уатДокументыТС.ДатаОкончания, ДЕНЬ)
	|		КОНЕЦ,
	|		уатДокументыТС.ДатаОкончания
	|	ИЗ
	|		Документ.уатПутевойЛист КАК уатПутевойЛист
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатДокументыТС КАК уатДокументыТС
	|			ПО уатПутевойЛист.ТранспортноеСредство = уатДокументыТС.ТС
	|				И ((НЕ уатДокументыТС.Архив))
	|	ГДЕ
	|		уатПутевойЛист.ДатаВозвращения МЕЖДУ &ДатаНачала И &ДатаКонца
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		уатРазнарядкаРазнарядка.Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаПЛРазнарядка.Разнарядка),
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаТипВладельцаДокумента.ОсновнойВодитель),
	|		уатРазнарядкаРазнарядка.Водитель,
	|		уатДокументыВодителей.ВидДокумента.Наименование + "", Серия "" + уатДокументыВодителей.Серия + "", №"" + уатДокументыВодителей.Номер,
	|		1,
	|		ВЫБОР
	|			КОГДА уатДокументыВодителей.ДатаОкончания = &ПустаяДата
	|				ТОГДА 0
	|			ИНАЧЕ РАЗНОСТЬДАТ(&ДатаКонца, уатДокументыВодителей.ДатаОкончания, ДЕНЬ)
	|		КОНЕЦ,
	|		уатДокументыВодителей.ДатаОкончания
	|	ИЗ
	|		Документ.уатРазнарядка.Разнарядка КАК уатРазнарядкаРазнарядка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатДокументыВодителей КАК уатДокументыВодителей
	|			ПО уатРазнарядкаРазнарядка.Водитель = уатДокументыВодителей.Сотрудник
	|				И ((НЕ уатДокументыВодителей.Архив))
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА &ДатаКонца = &ПустаяДата
	|					ТОГДА уатРазнарядкаРазнарядка.ДатаВозвращения МЕЖДУ &ДатаНачала И &ДатаНачала
	|				ИНАЧЕ уатРазнарядкаРазнарядка.ДатаВозвращения МЕЖДУ &ДатаНачала И &ДатаКонца
	|			КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		уатРазнарядкаРазнарядка.Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаПЛРазнарядка.Разнарядка),
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаТипВладельцаДокумента.ВторойВодитель),
	|		уатРазнарядкаРазнарядка.Водитель2,
	|		уатДокументыВодителей.ВидДокумента.Наименование + "", Серия "" + уатДокументыВодителей.Серия + "", №"" + уатДокументыВодителей.Номер,
	|		1,
	|		ВЫБОР
	|			КОГДА уатДокументыВодителей.ДатаОкончания = &ПустаяДата
	|				ТОГДА 0
	|			ИНАЧЕ РАЗНОСТЬДАТ(&ДатаКонца, уатДокументыВодителей.ДатаОкончания, ДЕНЬ)
	|		КОНЕЦ,
	|		уатДокументыВодителей.ДатаОкончания
	|	ИЗ
	|		Документ.уатРазнарядка.Разнарядка КАК уатРазнарядкаРазнарядка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатДокументыВодителей КАК уатДокументыВодителей
	|			ПО уатРазнарядкаРазнарядка.Водитель2 = уатДокументыВодителей.Сотрудник
	|				И ((НЕ уатДокументыВодителей.Архив))
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА &ДатаКонца = &ПустаяДата
	|					ТОГДА уатРазнарядкаРазнарядка.ДатаВозвращения МЕЖДУ &ДатаНачала И &ДатаНачала
	|				ИНАЧЕ уатРазнарядкаРазнарядка.ДатаВозвращения МЕЖДУ &ДатаНачала И &ДатаКонца
	|			КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		уатРазнарядкаРазнарядка.Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаПЛРазнарядка.Разнарядка),
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаТипВладельцаДокумента.ТС),
	|		уатРазнарядкаРазнарядка.ТС,
	|		уатДокументыТС.ВидДокумента.Наименование + "", Серия "" + уатДокументыТС.Серия + "", №"" + уатДокументыТС.Номер,
	|		1,
	|		ВЫБОР
	|			КОГДА уатДокументыТС.ДатаОкончания = &ПустаяДата
	|				ТОГДА 0
	|			ИНАЧЕ РАЗНОСТЬДАТ(&ДатаКонца, уатДокументыТС.ДатаОкончания, ДЕНЬ)
	|		КОНЕЦ,
	|		уатДокументыТС.ДатаОкончания
	|	ИЗ
	|		Документ.уатРазнарядка.Разнарядка КАК уатРазнарядкаРазнарядка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатДокументыТС КАК уатДокументыТС
	|			ПО уатРазнарядкаРазнарядка.ТС = уатДокументыТС.ТС
	|				И ((НЕ уатДокументыТС.Архив))
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА &ДатаКонца = &ПустаяДата
	|					ТОГДА уатРазнарядкаРазнарядка.ДатаВозвращения МЕЖДУ &ДатаНачала И &ДатаНачала
	|				ИНАЧЕ уатРазнарядкаРазнарядка.ДатаВозвращения МЕЖДУ &ДатаНачала И &ДатаКонца
	|			КОНЕЦ) КАК ВложенныйЗапрос
	|{ГДЕ
	|	ВложенныйЗапрос.Ссылка.*,
	|	ВложенныйЗапрос.ПЛРазнарядка,
	|	ВложенныйЗапрос.ТипОбъекта,
	|	ВложенныйЗапрос.Объект.*,
	|	ВложенныйЗапрос.ПредставлениеДокумента,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.ОсталосьДней,
	|	ВложенныйЗапрос.ДействуетДо}
	|{УПОРЯДОЧИТЬ ПО
	|	Ссылка.*,
	|	ПЛРазнарядка,
	|	ТипОбъекта,
	|	Объект,
	|	ПредставлениеДокумента,
	|	Количество,
	|	ОсталосьДней,
	|	ДействуетДо}
	|ИТОГИ
	|	СУММА(Количество),
	|	МИНИМУМ(ОсталосьДней),
	|	МИНИМУМ(ДействуетДо)
	|ПО
	|	Ссылка,
	|	ТипОбъекта,
	|	Объект
	|{ИТОГИ ПО
	|	Ссылка.*,
	|	ПЛРазнарядка,
	|	ТипОбъекта,
	|	Объект.*,
	|	ПредставлениеДокумента}";
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ПустаяДата",Дата('00010101'));
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , 
	//                                                  <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатДТП.Заказчик", "Заказчик", "Заказчик", 
	//                                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
	//	
	//	// Добавление свойств и категорий в исходный текст запроса.
	//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	//КонецЕсли;
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
		
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Ссылка"		       	   , "Документ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПЛРазнарядка"            , "ПЛ / Разнарядка");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТипОбъекта"              , "Тип объекта(ТС, Основной водитель...)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Объект"              	   , "ТС / Сотрудник");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПредставлениеДокумента"  , "Представление документа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОсталосьДней"       	   , "Осталось дней");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДействуетДо"       	   , "Действует до");
	
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Ссылка");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ТипОбъекта");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Объект");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ПредставлениеДокумента");

	УниверсальныйОтчет.ДобавитьПоказатель("Количество"  , "Количество"    , Истина,, );
	УниверсальныйОтчет.ДобавитьПоказатель("ОсталосьДней", "Осталось дней" , Истина,, );
	УниверсальныйОтчет.ДобавитьПоказатель("ДействуетДо" , "Действует до"  , Ложь,,);

	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	УниверсальныйОтчет.ДобавитьОтбор("ПЛРазнарядка",Ложь,ВидСравнения.Равно,Перечисления.уатПолеОтчетаПЛРазнарядка.ПЛ);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	//УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ВыполнениеЗаказовНаТС", "ЗаказНаТС");	
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	
	ЭлементУслОформления = УниверсальныйОтчет.ПостроительОтчета.УсловноеОформление.Добавить(""); 
	ЭлементУслОформления.Использование = Истина; 
	ЭлементОбласть = ЭлементУслОформления.Область.Добавить("ДействуетДо", "ДействуетДо", ТипОбластиОформления.Поле); 
		
	ЭлементОформления = ЭлементУслОформления.Оформление.Формат; 
	ЭлементОформления.Использование = Истина; 
	ЭлементОформления.Значение = "ДФ=dd.MM.yyyy";
	
КонецПроцедуры // УстановитьНачальныеНастройки()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
	
КонецПроцедуры // СформироватьОтчет()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 
// 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = 0;
	
#КонецЕсли
