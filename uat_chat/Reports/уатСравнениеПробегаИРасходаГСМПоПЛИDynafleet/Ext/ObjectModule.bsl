#Если Клиент Тогда
	
Перем мУчетПоОбъектамСтроительства;
	
//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

Функция ПолучитьтекстОсновногоЗапроса()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ПЛ,
	|	ВложенныйЗапрос.ТранспортноеСредство КАК ТранспортноеСредство,
	|	ВложенныйЗапрос.РасходПоФакту КАК РасходПоФакту,
	|	ВложенныйЗапрос.РасходПоНорме КАК РасходПоНорме,
	|	ВложенныйЗапрос.РазницаРасходаФакт КАК РазницаРасходаФакт,
	|	ВложенныйЗапрос.РазницаРасходаНорма КАК РазницаРасходаНорма,
	|	ВложенныйЗапрос.РасходГПС КАК РасходГПС,
	|	ВложенныйЗапрос.ЭкономияПроцент КАК ЭкономияПроцент,
	|	ВложенныйЗапрос.ПережогПроцент КАК ПережогПроцент,
	|	ВложенныйЗапрос.ПробегПЛ КАК ПробегПЛ,
	|	ВложенныйЗапрос.ПробегГПС КАК ПробегГПС,
	|	ВложенныйЗапрос.РазницаПробег КАК РазницаПробег
	|{ВЫБРАТЬ
	|	ТранспортноеСредство.* КАК ТранспортноеСредство,
	|	ПЛ.*,
	|	РасходПоНорме,
	|	РасходПоФакту,
	|	РасходГПС,
	|	ПробегПЛ,
	|	ПробегГПС,
	|	РазницаРасходаФакт,
	|	РазницаРасходаНорма,
	|	РазницаПробег,
	|	ЭкономияПроцент,
	|	ПережогПроцент}
	|ИЗ
	|	(ВЫБРАТЬ
	|		уатПутевойЛистРасходГСМ.Ссылка.Ссылка КАК ПЛ,
	|		уатПутевойЛистРасходГСМ.Ссылка.ТранспортноеСредство КАК ТранспортноеСредство,
	|		СУММА(уатПутевойЛистРасходГСМ.РасходПоФакту) КАК РасходПоФакту,
	|		СУММА(уатПутевойЛистРасходГСМ.РасходПоНорме) КАК РасходПоНорме,
	|		СУММА(уатПутевойЛистРасходГСМ.РасходПоФакту - 0) КАК РазницаРасходаФакт,
	|		СУММА(уатПутевойЛистРасходГСМ.РасходПоНорме - 0) КАК РазницаРасходаНорма,
	|		СУММА(0) КАК РасходГПС,
	|		СУММА(ВЫБОР
	|				КОГДА уатПутевойЛистРасходГСМ.РасходПоНорме <> 0
	|						И уатПутевойЛистРасходГСМ.РасходПоНорме > уатПутевойЛистРасходГСМ.РасходПоФакту
	|					ТОГДА ВЫРАЗИТЬ((уатПутевойЛистРасходГСМ.РасходПоНорме - уатПутевойЛистРасходГСМ.РасходПоФакту) / уатПутевойЛистРасходГСМ.РасходПоНорме * 100 КАК ЧИСЛО(8, 1))
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЭкономияПроцент,
	|		СУММА(ВЫБОР
	|				КОГДА уатПутевойЛистРасходГСМ.РасходПоНорме <> 0
	|						И уатПутевойЛистРасходГСМ.РасходПоНорме < уатПутевойЛистРасходГСМ.РасходПоФакту
	|					ТОГДА ВЫРАЗИТЬ((уатПутевойЛистРасходГСМ.РасходПоФакту - уатПутевойЛистРасходГСМ.РасходПоНорме) / уатПутевойЛистРасходГСМ.РасходПоНорме * 100 КАК ЧИСЛО(8, 1))
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ПережогПроцент,
	|		СУММА(уатПутевойЛистРасходГСМ.Ссылка.СпидометрВозвращения - уатПутевойЛистРасходГСМ.Ссылка.СпидометрВыезда) КАК ПробегПЛ,
	|		СУММА(0) КАК ПробегГПС,
	|		СУММА(уатПутевойЛистРасходГСМ.Ссылка.СпидометрВозвращения - уатПутевойЛистРасходГСМ.Ссылка.СпидометрВыезда - 0) КАК РазницаПробег
	|	ИЗ
	|		Документ.уатПутевойЛист.РасходГСМ КАК уатПутевойЛистРасходГСМ
	|//СТРОКАСОЕДИНЕНИЯ	
	|	ГДЕ
	|		уатПутевойЛистРасходГСМ.Ссылка.ТранспортноеСредство.ИДвСистемеНавигации <> """"
	|		И уатПутевойЛистРасходГСМ.Ссылка.Проведен
	|		И уатПутевойЛистРасходГСМ.Ссылка.Рассчитан
	|		И уатПутевойЛистРасходГСМ.ТС = уатПутевойЛистРасходГСМ.Ссылка.ТранспортноеСредство
	|	
	|	СГРУППИРОВАТЬ ПО
	|		уатПутевойЛистРасходГСМ.Ссылка.Ссылка,
	|		уатПутевойЛистРасходГСМ.Ссылка.ТранспортноеСредство) КАК ВложенныйЗапрос
	|{ГДЕ
	|	ВложенныйЗапрос.ПЛ.ТранспортноеСредство.* КАК ТранспортноеСредство,
	|	ВложенныйЗапрос.ПЛ.Ссылка.* КАК ПЛ,
	|		(ВЫБОР
	|				КОГДА ВложенныйЗапрос.ПЛ.ТранспортноеСредство.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ИСТИНА
	|				КОГДА ВложенныйЗапрос.ПЛ.ТранспортноеСредство.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ЛОЖЬ
	|			КОНЕЦ) КАК ТСВыбыло}	
	|{УПОРЯДОЧИТЬ ПО
	|	ТранспортноеСредство.*,
	|	ПЛ.*,
	|	РасходПоНорме,
	|	РасходПоФакту,
	|	РасходГПС,
	|	ПробегПЛ,
	|	ПробегГПС}
	|ИТОГИ
	|	СУММА(РасходПоФакту),
	|	СУММА(РасходПоНорме),
	|	СУММА(РазницаРасходаФакт),
	|	СУММА(РазницаРасходаНорма),
	|	СУММА(РасходГПС),
	|	ВЫБОР
	|		КОГДА СУММА(РасходПоНорме) <> 0
	|				И СУММА(РасходПоНорме) > СУММА(РасходПоФакту)
	|			ТОГДА ВЫРАЗИТЬ((СУММА(РасходПоНорме) - СУММА(РасходПоФакту)) / СУММА(РасходПоНорме) * 100 КАК ЧИСЛО(8, 1))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЭкономияПроцент,
	|	ВЫБОР
	|		КОГДА СУММА(РасходПоНорме) <> 0
	|				И СУММА(РасходПоНорме) < СУММА(РасходПоФакту)
	|			ТОГДА ВЫРАЗИТЬ((СУММА(РасходПоФакту) - СУММА(РасходПоНорме)) / СУММА(РасходПоНорме) * 100 КАК ЧИСЛО(8, 1))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПережогПроцент,
	|	СУММА(ПробегПЛ),
	|	СУММА(ПробегГПС),
	|	СУММА(РазницаПробег)
	|ПО
	|	ТранспортноеСредство КАК ТранспортноеСредство
	|{ИТОГИ ПО
	|	ТранспортноеСредство.* КАК ТранспортноеСредство,
	|	ПЛ.*}";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
 	ТекстЗапроса = ПолучитьтекстОсновногоЗапроса();
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
	
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТранспортноеСредство" , "Транспортное средство");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПЛ"                   , "Путевой лист");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСВыбыло"				, "ТС выбыло");
	
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ТранспортноеСредство");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ПЛ");
	
	УниверсальныйОтчет.ДобавитьПоказатель("РасходПоФакту"	   , "Расход (ПЛ факт)"		, Истина, "ЧДЦ=3", "ГСМ", "ГСМ" );
	УниверсальныйОтчет.ДобавитьПоказатель("РасходПоНорме"	   , "Расход (ПЛ норма)"	, Истина, "ЧДЦ=3", "ГСМ", "ГСМ" );
	УниверсальныйОтчет.ДобавитьПоказатель("РасходГПС"		   , "Расход (GPS)"			, Истина, "ЧДЦ=3", "ГСМ", "ГСМ" );
	УниверсальныйОтчет.ДобавитьПоказатель("РазницаРасходаФакт" , "Разница факт. расхода", Ложь	, "ЧДЦ=3", "ГСМ", "ГСМ" );
	УниверсальныйОтчет.ДобавитьПоказатель("РазницаРасходаНорма", "Разница норм. расхода", Ложь	, "ЧДЦ=3", "ГСМ", "ГСМ" );
    УниверсальныйОтчет.ДобавитьПоказатель("ЭкономияПроцент"    , "Экономия, %"			, Ложь	, "ЧДЦ=2", "ГСМ", "ГСМ" );
	УниверсальныйОтчет.ДобавитьПоказатель("ПережогПроцент"	   , "Пережог, %"			, Ложь	, "ЧДЦ=2", "ГСМ", "ГСМ" );
	
	УниверсальныйОтчет.ДобавитьПоказатель("ПробегПЛ"     , "Пробег (ПЛ)"    , Истина,"ЧДЦ=3","Пробег", "Пробег" );
	УниверсальныйОтчет.ДобавитьПоказатель("ПробегГПС"    , "Пробег (GPS)"   , Истина,"ЧДЦ=3","Пробег", "Пробег" );
	УниверсальныйОтчет.ДобавитьПоказатель("РазницаПробег", "Разница пробега", Ложь  ,"ЧДЦ=3","Пробег", "Пробег" );
		
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	УниверсальныйОтчет.ДобавитьОтбор("ТранспортноеСредство", Ложь  , ВидСравнения.Равно);
	УниверсальныйОтчет.ДобавитьОтбор("ТСВыбыло"			   , Истина, ВидСравнения.Равно, Ложь);
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
		
КонецПроцедуры // УстановитьНачальныеНастройки()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	мНовыйЗапрос = Новый ПостроительЗапроса;
	мНовыйЗапрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	уатПутевойЛист.Ссылка КАК ПЛ,
	|	уатПутевойЛист.ТранспортноеСредство КАК ТранспортноеСредство
	|ИЗ
	|	Документ.уатПутевойЛист КАК уатПутевойЛист
	|ГДЕ
	|	уатПутевойЛист.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|{ГДЕ
	|	уатПутевойЛист.Ссылка.* КАК ПЛ,
	|	уатПутевойЛист.ТранспортноеСредство.* КАК ТранспортноеСредство,
	|	(ВЫБОР
	|			КОГДА уатПутевойЛист.ТранспортноеСредство.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			КОГДА уатПутевойЛист.ТранспортноеСредство.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ЛОЖЬ
	|		КОНЕЦ) КАК ТСВыбыло}";
	
	Для Каждого ТекСтрокаОтбора ИЗ УниверсальныйОтчет.ПостроительОтчета.Отбор Цикл
		Если НЕ ТекСтрокаОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		ЭлОтбора = мНовыйЗапрос.Отбор.Добавить(ТекСтрокаОтбора.ПутьКДанным);
		ЭлОтбора.ВидСравнения = ТекСтрокаОтбора.ВидСравнения;
		ЭлОтбора.Значение = ТекСтрокаОтбора.Значение;
		ЭлОтбора.ЗначениеС = ТекСтрокаОтбора.ЗначениеС;
		ЭлОтбора.ЗначениеПо = ТекСтрокаОтбора.ЗначениеПо;
		ЭлОтбора.Использование = Истина;
	КонецЦикла;
	
	мНовыйЗапрос.Параметры.Вставить("ДатаНач", ?(УниверсальныйОтчет.ДатаНач = '00010101', УниверсальныйОтчет.ДатаНач, НачалоДня(УниверсальныйОтчет.ДатаНач)));
	мНовыйЗапрос.Параметры.Вставить("ДатаКон", ?(УниверсальныйОтчет.ДатаКон = '00010101', '39991231', КонецДня(УниверсальныйОтчет.ДатаКон)));
	мНовыйЗапрос.Выполнить();
	ТабПЛ = мНовыйЗапрос.Результат.Выгрузить();
	
	ТекстЗапросаГПС = "";
	Если табПЛ.Количество() тогда
		Для Каждого ТабПЛСтрока ИЗ табПЛ Цикл
			Если ЗначениеЗаполнено(ТекстЗапросаГПС) Тогда
				ТекстЗапросаГПС = ТекстЗапросаГПС +
				"
				|ОБЪЕДИНИТЬ ВСЕ
				|" ;
			КонецЕсли;
			
			ТекстЗапросаГПСПЛ = "ВЫБРАТЬ
												     |	&ПЛНОМЕРСТРОКИ КАК ПЛ,
												     |	КонЗначение.ЗначениеДатчика1 - НачЗначение.ЗначениеДатчика1 КАК ПробегГПС,
												     |	(КонЗначение.ЗначениеДатчика3 - НачЗначение.ЗначениеДатчика3) / 100 КАК РасходГПС";
			Если НЕ ЗначениеЗаполнено(ТекстЗапросаГПС) Тогда 
				ТекстЗапросаГПСПЛ = ТекстЗапросаГПСПЛ + "
												     |ПОМЕСТИТЬ ТАБПОКАЗАНИЙПОПЛ";
			КонецЕсли;		
			ТекстЗапросаГПСПЛ = ТекстЗапросаГПСПЛ +	"
													 |ИЗ
												     |	РегистрСведений.уатМестоположениеGPS.СрезПоследних(&ДатаНачНОМЕРСТРОКИ, ТС = &ТСНОМЕРСТРОКИ) КАК НачЗначение,
												     |	РегистрСведений.уатМестоположениеGPS.СрезПоследних(&ДатаКонНОМЕРСТРОКИ, ТС = &ТСНОМЕРСТРОКИ) КАК КонЗначение";
			
			ТекстЗапросаГПСПЛ = СтрЗаменить(ТекстЗапросаГПСПЛ,"НОМЕРСТРОКИ",ТабПЛ.Индекс(ТабПЛСтрока));
			
			//параметры
			УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНач" + ТабПЛ.Индекс(ТабПЛСтрока), ТабПЛСтрока.ПЛ.ДатаВыезда);
			УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаКон" + ТабПЛ.Индекс(ТабПЛСтрока), ТабПЛСтрока.ПЛ.ДатаВозвращения);
			УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ПЛ" + ТабПЛ.Индекс(ТабПЛСтрока), ТабПЛСтрока.ПЛ);
			УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ТС" + ТабПЛ.Индекс(ТабПЛСтрока), ТабПЛСтрока.ТранспортноеСредство);
												
			ТекстЗапросаГПС = ТекстЗапросаГПС + ТекстЗапросаГПСПЛ;
			
		КОнецЦикла;
	Иначе
		ТекстЗапросаГПС = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	NULL КАК ПЛ,
		|	0 КАК ПробегГПС,
		|	0 КАК РасходГПС
		|ПОМЕСТИТЬ ТАБПОКАЗАНИЙПОПЛ
		|ИЗ 
		|	РегистрСведений.уатМестоположениеGPS.СрезПоследних()";
	КонецЕсли;
	
	мТекстЗапросаПостроителя = УниверсальныйОтчет.ПостроительОтчета.Текст;
	мТекстЗапросаПостроителя = СтрЗаменить(мТекстЗапросаПостроителя, "СУММА(0) КАК РасходГПС","СУММА(ЕстьNULL(ТАБПОКАЗАНИЙПОПЛ.РасходГПС,0)) КАК РасходГПС");
	мТекстЗапросаПостроителя = СтрЗаменить(мТекстЗапросаПостроителя, "СУММА(0) КАК ПробегГПС","СУММА(ЕстьNULL(ТАБПОКАЗАНИЙПОПЛ.ПробегГПС,0)) КАК ПробегГПС");
	мТекстЗапросаПостроителя = СтрЗаменить(мТекстЗапросаПостроителя, "//СТРОКАСОЕДИНЕНИЯ","ЛЕВОЕ СОЕДИНЕНИЕ ТАБПОКАЗАНИЙПОПЛ КАК ТАБПОКАЗАНИЙПОПЛ ПО уатПутевойЛистРасходГСМ.Ссылка = ТАБПОКАЗАНИЙПОПЛ.ПЛ");
	
	мТекстЗапросаПостроителя = СтрЗаменить(мТекстЗапросаПостроителя, "0) КАК РазницаРасходаФакт"  ,"ЕстьNULL(ТАБПОКАЗАНИЙПОПЛ.РасходГПС,0)) КАК РазницаРасходаФакт");
	мТекстЗапросаПостроителя = СтрЗаменить(мТекстЗапросаПостроителя, "0) КАК РазницаРасходаНорма" ,"ЕстьNULL(ТАБПОКАЗАНИЙПОПЛ.РасходГПС,0)) КАК РазницаРасходаНорма");
	мТекстЗапросаПостроителя = СтрЗаменить(мТекстЗапросаПостроителя, "0) КАК РазницаПробег"       ,"ЕстьNULL(ТАБПОКАЗАНИЙПОПЛ.ПробегГПС,0)) КАК РазницаПробег");
	//мТекстЗапросаПостроителя = СтрЗаменить(мТекстЗапросаПостроителя, "СУММА(РазницаРасходаФакт)" ,"СУММА(РазницаРасходаФакт) - СУММА(ЕстьNULL(РасходГПС,0)) КАК РазницаРасходаФакт");
	//мТекстЗапросаПостроителя = СтрЗаменить(мТекстЗапросаПостроителя, "СУММА(РазницаРасходаНорма)","СУММА(РазницаРасходаНорма) - СУММА(ЕстьNULL(РасходГПС,0)) КАК РазницаРасходаНорма");
	//мТекстЗапросаПостроителя = СтрЗаменить(мТекстЗапросаПостроителя, "СУММА(РазницаПробег)"      ,"СУММА(ПробегПЛ) - СУММА(ЕстьNULL(ПробегГПС,0)) КАК РазницаПробег");
	
	
	НастройкиПостроителя = УниверсальныйОтчет.ПостроительОтчета.ПолучитьНастройки();
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапросаГПС + "
	| ;
	|///////////////////////////////////////// 
	|" + мТекстЗапросаПостроителя;
	
	УниверсальныйОтчет.ПостроительОтчета.УстановитьНастройки(НастройкиПостроителя);
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);

	УниверсальныйОтчет.ПостроительОтчета.Текст = ПолучитьтекстОсновногоЗапроса();
	УниверсальныйОтчет.ПостроительОтчета.УстановитьНастройки(НастройкиПостроителя);
КонецПроцедуры // СформироватьОтчет()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 
// 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = 0;

мУчетПоОбъектамСтроительства = уатОбщегоНазначенияТиповые.уатЕстьИзмерениеРегистра("ОбъектСтроительства", РегистрыНакопления.уатЗатратыТС.СоздатьНаборЗаписей());

#КонецЕсли