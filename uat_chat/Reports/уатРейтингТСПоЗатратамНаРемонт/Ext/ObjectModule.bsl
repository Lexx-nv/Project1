#Если Клиент Тогда

	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	КонецЕсли;
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Описание исходного текста запроса.
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ТС КАК ТС,
	|	ВложенныйЗапрос.ПериодДень,
	|	ВложенныйЗапрос.ПериодНеделя,
	|	ВложенныйЗапрос.ПериодДекада,
	|	ВложенныйЗапрос.ПериодМесяц,
	|	ВложенныйЗапрос.ПериодКвартал,
	|	ВложенныйЗапрос.ПериодПолугодие,
	|	ВложенныйЗапрос.ПериодГод,
	|	ВложенныйЗапрос.СтоимостьРемонт КАК СтоимостьРемонт,
	|	ВложенныйЗапрос.СтоимостьНоменклатура КАК СтоимостьНоменклатура,
	|	ВложенныйЗапрос.СтоимостьУпрРемонт КАК СтоимостьУпрРемонт,
	|	ВложенныйЗапрос.СтоимостьУпрНоменклатура КАК СтоимостьУпрНоменклатура,
	|	ВложенныйЗапрос.ПРобег КАК ПРобег,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ПРобег ЕСТЬ NULL 
	|				ИЛИ ВложенныйЗапрос.ПРобег = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВложенныйЗапрос.СтоимостьОборот / ВложенныйЗапрос.ПРобег
	|	КОНЕЦ КАК СтоимостьКМПробега,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ПРобег ЕСТЬ NULL 
	|				ИЛИ ВложенныйЗапрос.ПРобег = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВложенныйЗапрос.СтоимостьУпрОборот / ВложенныйЗапрос.ПРобег
	|	КОНЕЦ КАК СтоимостьУпрКМПробега,
	|	ВложенныйЗапрос.ТС.ГосударственныйНомер КАК ТСГосНомер,
	|	ВложенныйЗапрос.ТС.ГаражныйНомер КАК ТСГарНомер,
	|	ВложенныйЗапрос.ТС.Организация КАК Организация,
	|	ВложенныйЗапрос.ТС.Колонна КАК Колонна,
	|	ВложенныйЗапрос.СтоимостьУпрОборот КАК СтоимостьУпрОборот,
	|	ВложенныйЗапрос.СтоимостьОборот КАК СтоимостьОборот
	|{ВЫБРАТЬ
	|	ТС.*,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	СтоимостьРемонт,
	|	СтоимостьНоменклатура,
	|	СтоимостьУпрРемонт,
	|	СтоимостьУпрНоменклатура,
	|	ПРобег,
	|	СтоимостьКМПробега,
	|	СтоимостьУпрКМПробега,
	|	ТСГосНомер,
	|	ТСГарНомер,
	|	Организация.*,
	|	Колонна.*,
	|	СтоимостьУпрОборот,
	|	СтоимостьОборот}
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.ТС КАК ТС,
	|		ВложенныйЗапрос.ПериодДень КАК ПериодДень,
	|		ВложенныйЗапрос.ПериодНеделя КАК ПериодНеделя,
	|		ВложенныйЗапрос.ПериодДекада КАК ПериодДекада,
	|		ВложенныйЗапрос.ПериодМесяц КАК ПериодМесяц,
	|		ВложенныйЗапрос.ПериодКвартал КАК ПериодКвартал,
	|		ВложенныйЗапрос.ПериодПолугодие КАК ПериодПолугодие,
	|		ВложенныйЗапрос.ПериодГод КАК ПериодГод,
	|		СУММА(ВложенныйЗапрос.СтоимостьРемонт) КАК СтоимостьРемонт,
	|		СУММА(ВложенныйЗапрос.СтоимостьНоменклатура) КАК СтоимостьНоменклатура,
	|		СУММА(ВложенныйЗапрос.СтоимостьУпрРемонт) КАК СтоимостьУпрРемонт,
	|		СУММА(ВложенныйЗапрос.СтоимостьУпрНоменклатура) КАК СтоимостьУпрНоменклатура,
	|		СУММА(ВложенныйЗапрос.ПРобег) КАК ПРобег,
	|		СУММА(ВложенныйЗапрос.СтоимостьУпрОборот) КАК СтоимостьУпрОборот,
	|		СУММА(ВложенныйЗапрос.СтоимостьОборот) КАК СтоимостьОборот
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВЫРАЗИТЬ(уатНоменклатураТСОбороты.ТС КАК Справочник.уатТС) КАК ТС,
	|			НАЧАЛОПЕРИОДА(уатНоменклатураТСОбороты.Период, ДЕНЬ) КАК ПериодДень,
	|			НАЧАЛОПЕРИОДА(уатНоменклатураТСОбороты.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	|			НАЧАЛОПЕРИОДА(уатНоменклатураТСОбороты.Период, ДЕКАДА) КАК ПериодДекада,
	|			НАЧАЛОПЕРИОДА(уатНоменклатураТСОбороты.Период, МЕСЯЦ) КАК ПериодМесяц,
	|			НАЧАЛОПЕРИОДА(уатНоменклатураТСОбороты.Период, КВАРТАЛ) КАК ПериодКвартал,
	|			НАЧАЛОПЕРИОДА(уатНоменклатураТСОбороты.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|			НАЧАЛОПЕРИОДА(уатНоменклатураТСОбороты.Период, ГОД) КАК ПериодГод,
	|			ВЫБОР
	|				КОГДА уатНоменклатураТСОбороты.Номенклатура ССЫЛКА Справочник.уатРаботыПоРемонту
	|					ТОГДА уатНоменклатураТСОбороты.СтоимостьОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СтоимостьРемонт,
	|			ВЫБОР
	|				КОГДА уатНоменклатураТСОбороты.Номенклатура ССЫЛКА Справочник.Номенклатура
	|					ТОГДА уатНоменклатураТСОбороты.СтоимостьОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СтоимостьНоменклатура,
	|			ВЫБОР
	|				КОГДА уатНоменклатураТСОбороты.Номенклатура ССЫЛКА Справочник.уатРаботыПоРемонту
	|					ТОГДА уатНоменклатураТСОбороты.СтоимостьУпрОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СтоимостьУпрРемонт,
	|			ВЫБОР
	|				КОГДА уатНоменклатураТСОбороты.Номенклатура ССЫЛКА Справочник.Номенклатура
	|					ТОГДА уатНоменклатураТСОбороты.СтоимостьУпрОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СтоимостьУпрНоменклатура,
	|			уатНоменклатураТСОбороты.СтоимостьУпрОборот КАК СтоимостьУпрОборот,
	|			уатНоменклатураТСОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|			0 КАК ПРобег
	|		ИЗ
	|			РегистрНакопления.уатНоменклатураТС.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК уатНоменклатураТСОбороты
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ВЫРАЗИТЬ(уатВыработкаТС.ТС КАК Справочник.уатТС),
	|			НАЧАЛОПЕРИОДА(уатВыработкаТС.Период, ДЕНЬ),
	|			НАЧАЛОПЕРИОДА(уатВыработкаТС.Период, НЕДЕЛЯ),
	|			НАЧАЛОПЕРИОДА(уатВыработкаТС.Период, ДЕКАДА),
	|			НАЧАЛОПЕРИОДА(уатВыработкаТС.Период, МЕСЯЦ),
	|			НАЧАЛОПЕРИОДА(уатВыработкаТС.Период, КВАРТАЛ),
	|			НАЧАЛОПЕРИОДА(уатВыработкаТС.Период, ПОЛУГОДИЕ),
	|			НАЧАЛОПЕРИОДА(уатВыработкаТС.Период, ГОД),
	|			0,
	|			0,
	|			0,
	|			0,
	|			0,
	|			0,
	|			уатВыработкаТС.КоличествоОборот
	|		ИЗ
	|			РегистрНакопления.уатВыработкаТС.Обороты(
	|					&ДатаНач,
	|					&ДатаКон,
	|					Регистратор,
	|					ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ПробегОбщий)
	|						И ТС ССЫЛКА Справочник.уатТС) КАК уатВыработкаТС) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.ТС,
	|		ВложенныйЗапрос.ПериодДень,
	|		ВложенныйЗапрос.ПериодНеделя,
	|		ВложенныйЗапрос.ПериодДекада,
	|		ВложенныйЗапрос.ПериодМесяц,
	|		ВложенныйЗапрос.ПериодКвартал,
	|		ВложенныйЗапрос.ПериодПолугодие,
	|		ВложенныйЗапрос.ПериодГод) КАК ВложенныйЗапрос
	|{ГДЕ
	|	ВложенныйЗапрос.ТС.*,
	|	ВложенныйЗапрос.ПериодДень,
	|	ВложенныйЗапрос.ПериодНеделя,
	|	ВложенныйЗапрос.ПериодДекада,
	|	ВложенныйЗапрос.ПериодМесяц,
	|	ВложенныйЗапрос.ПериодКвартал,
	|	ВложенныйЗапрос.ПериодПолугодие,
	|	ВложенныйЗапрос.ПериодГод,
	|	ВложенныйЗапрос.СтоимостьРемонт,
	|	ВложенныйЗапрос.СтоимостьНоменклатура,
	|	ВложенныйЗапрос.СтоимостьУпрРемонт,
	|	ВложенныйЗапрос.СтоимостьУпрНоменклатура,
	|	ВложенныйЗапрос.ПРобег,
	|	ВложенныйЗапрос.ТС.ГосударственныйНомер,
	|	ВложенныйЗапрос.ТС.ГаражныйНомер,
	|	ВложенныйЗапрос.ТС.Организация.*,
	|	ВложенныйЗапрос.ТС.Колонна.*,
	|	ВложенныйЗапрос.СтоимостьУпрОборот,
	|	ВложенныйЗапрос.СтоимостьОборот,
	|	(ВЫБОР
	|			КОГДА ВложенныйЗапрос.ТС.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			КОГДА ВложенныйЗапрос.ТС.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ЛОЖЬ
	|		КОНЕЦ) КАК ТСВыбыло}	
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтоимостьКМПробега,
	|	СтоимостьРемонт
	|{УПОРЯДОЧИТЬ ПО
	|	ТС.*,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	СтоимостьРемонт,
	|	СтоимостьНоменклатура,
	|	СтоимостьУпрРемонт,
	|	СтоимостьУпрНоменклатура,
	|	ПРобег,
	|	СтоимостьКМПробега,
	|	СтоимостьУпрКМПробега,
	|	ТСГосНомер,
	|	ТСГарНомер,
	|	Организация.*,
	|	Колонна.*,
	|	СтоимостьУпрОборот,
	|	СтоимостьОборот}
	|ИТОГИ
	|	СУММА(СтоимостьРемонт),
	|	СУММА(СтоимостьНоменклатура),
	|	СУММА(СтоимостьУпрРемонт),
	|	СУММА(СтоимостьУпрНоменклатура),
	|	СУММА(ПРобег),
	|	СУММА(СтоимостьКМПробега),
	|	СУММА(СтоимостьУпрКМПробега),
	|	СУММА(СтоимостьУпрОборот),
	|	СУММА(СтоимостьОборот),
	|	ВЫБОР
	|		КОГДА СУММА(ПРобег) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(СтоимостьОборот) / СУММА(ПРобег)
	|	КОНЕЦ КАК СтоимостьКМПробега,
	|	ВЫБОР
	|		КОГДА СУММА(ПРобег) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(СтоимостьУпрОборот) / СУММА(ПРобег)
	|	КОНЕЦ КАК СтоимостьУпрКМПробега
	|ПО
	|	ТС
	|{ИТОГИ ПО
	|	ТС.*,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	ТСГосНомер,
	|	ТСГарНомер,
	|	Организация.*,
	|	Колонна.*}";
	
	
	//// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>,
	//	//	<Представление>, <Назначение>);
	//	// Добавление свойств и категорий в исходный текст запроса.
	//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	//КонецЕсли;
	//
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТС"        , "ТС (все поля)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГарНомер", "ТС (гар. номер)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГосНомер", "ТС (гос. номер)"); 
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСВыбыло"  , "ТС выбыло");
	
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);

	УниверсальныйОтчет.ДобавитьПоказатель("Пробег"                  , "Пробег"	  , Истина,"ЧДЦ=3");
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьОборот"         , "общая" 	  , Истина,"ЧДЦ=2","СтоимостьРегл","Стоимость (регл)");
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьРемонт"         , "рем. работ", Истина,"ЧДЦ=2", "СтоимостьРегл","Стоимость (регл)");
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьНоменклатура"   , "з/ч "      , Истина,"ЧДЦ=2","СтоимостьРегл","Стоимость (регл)");
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьКМПробега"      , "Стоимость 1 км пробега (регл)", Истина, "ЧДЦ=2");
	Если уатРаботаСМетаданными.уатЕстьКонстанта("ВалютаУправленческогоУчета") тогда
		УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьУпрОборот"      , "Стоимость (Упр)"			  , Истина,"ЧДЦ=2","СтоимостьУпр","Стоимость (упр)");
		УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьУпрРемонт"      , "Стоимость рем. работ (Упр)", Истина,"ЧДЦ=2","СтоимостьУпр","Стоимость (упр)");
		УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьУпрНоменклатура", "Стоимость з/ч (Упр)"		  , Истина,"ЧДЦ=2","СтоимостьУпр","Стоимость (упр)");
		УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьУпрКМПробега", "Стоимость 1 км пробега (Упр)" , Истина,"ЧДЦ=2");
	КонецЕсли;
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ТС");
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("ТСГосНомер",Ложь,ВидСравнения.Содержит);
	УниверсальныйОтчет.ДобавитьОтбор("Колонна");
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("ТСВыбыло", Истина, ВидСравнения.Равно, Ложь);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	//УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("Пробег", "ТС");
	//УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СтоимостьКМПробега", "ТС");
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	//УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ТСГосНомер");

	
КонецПроцедуры // УстановитьНачальныеНастройки()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ПараметрВыработки_Пробег", Справочники.уатПараметрыВыработки.ПробегОбщий);
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
	
КонецПроцедуры // СформироватьОтчет()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал,
//	6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

#КонецЕсли
