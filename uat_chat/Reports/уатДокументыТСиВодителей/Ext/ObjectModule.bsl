#Если Клиент Тогда
	
//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА


// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	КонецЕсли;
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Объект КАК Объект,
	|	ВложенныйЗапрос.ВидДокумента КАК ВидДокумента,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	ВложенныйЗапрос.Номер КАК Номер,
	|	ВложенныйЗапрос.ДатаВыдачи,
	|	ВложенныйЗапрос.ДатаОкончания,
	|	ВложенныйЗапрос.Архив,
	|	ВложенныйЗапрос.КемВыдан,
	|	ВложенныйЗапрос.Категория,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.ОсталосьДней КАК ОсталосьДней,
	|	ВложенныйЗапрос.ПринадлежностьДокумента,
	//|   ВЫБОР КОГДА ВложенныйЗапрос.Объект.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица ТОГДА 0 ИНАЧЕ ВложенныйЗапрос.Объект.Подразделение КОНЕЦ КАК Подразделение
	|   ВложенныйЗапрос.Подразделение
	|{ВЫБРАТЬ
	|	Объект.*,
	|	ВидДокумента.*,
	|	Серия,
	|	Номер,
	|	ДатаВыдачи,
	|	ДатаОкончания,
	|	Архив,
	|	КемВыдан,
	|	Категория,
	|	Количество,
	|	ОсталосьДней,
	|	ПринадлежностьДокумента.*,
	|   Подразделение}
	|ИЗ
	|	(ВЫБРАТЬ
	|		уатДокументыВодителей.Сотрудник КАК Объект,
	|		уатДокументыВодителей.ВидДокумента КАК ВидДокумента,
	|		уатДокументыВодителей.Серия КАК Серия,
	|		уатДокументыВодителей.Номер КАК Номер,
	|		уатДокументыВодителей.ДатаВыдачи КАК ДатаВыдачи,
	|		уатДокументыВодителей.ДатаОкончания КАК ДатаОкончания,
	|		уатДокументыВодителей.Архив КАК Архив,
	|		уатДокументыВодителей.КемВыдан КАК КемВыдан,
	|		уатДокументыВодителей.Категория КАК Категория,
	|		1 КАК Количество,
	|		ВЫБОР
	|			КОГДА РАЗНОСТЬДАТ(&ДатаКонца, уатДокументыВодителей.ДатаОкончания, ДЕНЬ) = 0
	|				ТОГДА 0
	|			КОГДА уатДокументыВодителей.ДатаОкончания = &ПустаяДата
	|				ТОГДА 0
	|			ИНАЧЕ РАЗНОСТЬДАТ(&ДатаКонца, уатДокументыВодителей.ДатаОкончания, ДЕНЬ)
	|		КОНЕЦ КАК ОсталосьДней,
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаВидДокументаСотрудникТС.ДокументВодителя) КАК ПринадлежностьДокумента,
	|       уатСведенияОСотрудникахСрезПоследних.ПодразделениеОрганизации КАК Подразделение
	|	ИЗ
	|		РегистрСведений.уатДокументыВодителей КАК уатДокументыВодителей
	|   ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатСведенияОСотрудниках.СрезПоследних(&ДатаКонца) КАК уатСведенияОСотрудникахСрезПоследних
	|   ПО уатСведенияОСотрудникахСрезПоследних.Сотрудник=уатДокументыВодителей.Сотрудник
	|
	|
	|	ГДЕ
	|		(уатДокументыВодителей.Сотрудник.ДатаУвольнения = &ПустаяДата
	|				ИЛИ уатДокументыВодителей.Сотрудник.ДатаУвольнения > &ДатаКонца) И (уатДокументыВодителей.ДатаВыдачи МЕЖДУ &ДатаНачала И &ДатаКонца)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		уатДокументыТС.ТС,
	|		уатДокументыТС.ВидДокумента,
	|		уатДокументыТС.Серия,
	|		уатДокументыТС.Номер,
	|		уатДокументыТС.ДатаВыдачи,
	|		уатДокументыТС.ДатаОкончания,
	|		уатДокументыТС.Архив,
	|		уатДокументыТС.КемВыдан,
	|		уатДокументыТС.Категория,
	|		1,
	|		ВЫБОР
	|			КОГДА РАЗНОСТЬДАТ(&ДатаКонца, уатДокументыТС.ДатаОкончания, ДЕНЬ) = 0
	|				ТОГДА 0
	|			КОГДА уатДокументыТС.ДатаОкончания = &ПустаяДата
	|				ТОГДА 0
	|			ИНАЧЕ РАЗНОСТЬДАТ(&ДатаКонца, уатДокументыТС.ДатаОкончания, ДЕНЬ)
	|		КОНЕЦ,
	|		ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаВидДокументаСотрудникТС.ДокументТС),
	|       уатДокументыТС.ТС.Подразделение КАК Подразделение
	|	ИЗ
	|		РегистрСведений.уатДокументыТС КАК уатДокументыТС
	|	ГДЕ
	|		(уатДокументыТС.ТС.ДатаВыбытия = &ПустаяДата
	|				ИЛИ уатДокументыТС.ТС.ДатаВыбытия > &ДатаКонца) И (уатДокументыТС.ДатаВыдачи МЕЖДУ &ДатаНачала И &ДатаКонца)) КАК ВложенныйЗапрос
	|{ГДЕ
	|	ВложенныйЗапрос.Объект.*,
	|	ВложенныйЗапрос.ВидДокумента.*,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.Номер,
	|	ВложенныйЗапрос.ДатаВыдачи,
	|	ВложенныйЗапрос.ДатаОкончания,
	|	ВложенныйЗапрос.Архив,
	|	ВложенныйЗапрос.КемВыдан,
	|	ВложенныйЗапрос.Категория,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.ОсталосьДней,
	|	ВложенныйЗапрос.ПринадлежностьДокумента,
	|   ВложенныйЗапрос.Подразделение}
	|{УПОРЯДОЧИТЬ ПО   
	|   Объект.*,
	|	ВидДокумента.*,
	|	Серия,
	|	Номер,
	|	ДатаВыдачи,
	|	ДатаОкончания,
	|	Архив,
	|	КемВыдан,
	|	Категория,
	|	Количество,
	|	ОсталосьДней,
	|	ПринадлежностьДокумента,
	|   Подразделение}
	|ИТОГИ
	|	СУММА(Количество),
	|	МИНИМУМ(ОсталосьДней)
	|ПО
	|	ВидДокумента,
	|	Объект,
	|	Серия,
	|	Номер
	|{ИТОГИ ПО
	|	Объект.*,
	|	ВидДокумента.*,
	|	Серия,
	|	Номер,
	|	ДатаВыдачи,
	|	ДатаОкончания,
	|	Архив,
	|	КемВыдан,
	|	Категория,
	|	ПринадлежностьДокумента,
	|	Подразделение}";
	
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ПустаяДата",Дата('00010101'));
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНачала",УниверсальныйОтчет.ДатаНач);

	// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , 
	//                                                  <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатДТП.Заказчик", "Заказчик", "Заказчик", 
	//                                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
	//	
	//	// Добавление свойств и категорий в исходный текст запроса.
	//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	//КонецЕсли;
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
	
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Объект"			       , "Водитель / ТС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВидДокумента"			   , "Вид документа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Серия"        		   , "Серия");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Номер"        		   , "Номер");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДатаВыдачи"   		   , "Дата выдачи");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДатаОкончания"		   , "Дата окончания");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КемВыдан"     		   , "Кем выдан");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Архив"		           , "Находится в архиве");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОсталосьДней" 		   , "Осталось дней");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПринадлежностьДокумента" , "Принадлежность документа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Подразделение"	       , "Подразделение");
	
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	ПолеДата = УниверсальныйОтчет.ПостроительОтчета.ДоступныеПоля.Найти("ДатаВыдачи");
	ПолеДата.ТипЗначения = Новый ОписаниеТипов("Дата",,Новый КвалификаторыДаты(ЧастиДаты.Дата));
	ПолеДата = УниверсальныйОтчет.ПостроительОтчета.ДоступныеПоля.Найти("ДатаОкончания");
	ПолеДата.ТипЗначения = Новый ОписаниеТипов("Дата",,Новый КвалификаторыДаты(ЧастиДаты.Дата));

	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	УниверсальныйОтчет.ДобавитьПоказатель("Количество"  , "Количество"    , Истина,, );
	УниверсальныйОтчет.ДобавитьПоказатель("ОсталосьДней", "Осталось дней" , Истина,, );
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ВидДокумента");
	///УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Объект");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Архив" 	   			  ,Истина,ВидСравнения.Равно ,Ложь);
	УниверсальныйОтчет.ДобавитьОтбор("ОсталосьДней"			  ,Ложь  ,ВидСравнения.Меньше,0);
	УниверсальныйОтчет.ДобавитьОтбор("ПринадлежностьДокумента",Ложь  ,ВидСравнения.Равно ,Перечисления.уатПолеОтчетаВидДокументаСотрудникТС.ДокументВодителя);
    УниверсальныйОтчет.ДобавитьОтбор("Подразделение" 	   	  ,Ложь  ,ВидСравнения.Равно);	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
    // Установка сортировки
	УниверсальныйОтчет.ДобавитьПорядок("Подразделение");
    УниверсальныйОтчет.ДобавитьПорядок("ВидДокумента");	
	
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	//УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ВыполнениеЗаказовНаТС", "ЗаказНаТС");	
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ВидДокумента");
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Серия");
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Номер");
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаВыдачи");
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаОкончания");
    УниверсальныйОтчет.ДобавитьДополнительноеПоле("Объект");
	
	ЭлементУслОформления = УниверсальныйОтчет.ПостроительОтчета.УсловноеОформление.Добавить(""); 
	ЭлементУслОформления.Использование = Истина; 
	ЭлементОбласть = ЭлементУслОформления.Область.Добавить("ДатаВыдачи", "ДатаВыдачи", ТипОбластиОформления.Поле); 
	ЭлементОбласть = ЭлементУслОформления.Область.Добавить("ДатаОкончания", "ДатаОкончания", ТипОбластиОформления.Поле); 
		
	ЭлементОформления = ЭлементУслОформления.Оформление.Формат; 
	ЭлементОформления.Использование = Истина; 
	ЭлементОформления.Значение = "ДФ=dd.MM.yyyy";
	
КонецПроцедуры // УстановитьНачальныеНастройки()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	Если НЕ ЗначениеЗаполнено(УниверсальныйОтчет.ДатаКон) Тогда 
		УниверсальныйОтчет.ДатаКон = ТекущаяДата();
	КонецЕсли;
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
	
КонецПроцедуры // СформироватьОтчет()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 
// 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = 1;
	
#КонецЕсли
