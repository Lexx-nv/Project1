#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета по метаданным регистра накопления
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт

	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Истина;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	уатДвижениеДСОбороты.Период КАК Период,
	|	уатДвижениеДСОбороты.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	уатДвижениеДСОбороты.ВидДенежныхСредств КАК ВидДенежныхСредств,
	|	уатДвижениеДСОбороты.ПриходРасход КАК ПриходРасход,
	|	уатДвижениеДСОбороты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	уатДвижениеДСОбороты.ДокументДвижения КАК ДокументДвижения,
	|	уатДвижениеДСОбороты.Контрагент КАК Контрагент,
	|	уатДвижениеДСОбороты.Сделка КАК Сделка,
	|	уатДвижениеДСОбороты.Организация КАК Организация,
	|	уатДвижениеДСОбороты.СуммаОборот КАК СуммаОборот,
	|	уатДвижениеДСОбороты.СуммаУпрОборот КАК СуммаУпрОборот,
	|	НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, ДЕНЬ) КАК ПериодДень,
	|	НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	|	НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, ДЕКАДА) КАК ПериодДекада,
	|	НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, МЕСЯЦ) КАК ПериодМесяц,
	|	НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, КВАРТАЛ) КАК ПериодКвартал,
	|	НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|	НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, ГОД) КАК ПериодГод,
	|	уатДвижениеДСОбороты.БанковскийСчетКасса.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|{ВЫБРАТЬ
	|	Период,
	|	БанковскийСчетКасса.*,
	|	ВидДенежныхСредств.*,
	|	ПриходРасход,
	|	СтатьяДвиженияДенежныхСредств.*,
	|	ДокументДвижения.*,
	|	Контрагент.*,
	|	Сделка.*,
	|	Организация.*,
	|	СуммаОборот,
	|	СуммаУпрОборот,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	ВалютаДенежныхСредств.*}
	|ИЗ
	|	РегистрНакопления.уатДвижениеДС.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК уатДвижениеДСОбороты
	|{ГДЕ
	|	уатДвижениеДСОбороты.Период,
	|	уатДвижениеДСОбороты.БанковскийСчетКасса.*,
	|	уатДвижениеДСОбороты.ВидДенежныхСредств.*,
	|	уатДвижениеДСОбороты.ПриходРасход,
	|	уатДвижениеДСОбороты.СтатьяДвиженияДенежныхСредств.*,
	|	уатДвижениеДСОбороты.ДокументДвижения.*,
	|	уатДвижениеДСОбороты.Контрагент.*,
	|	уатДвижениеДСОбороты.Сделка.*,
	|	уатДвижениеДСОбороты.Организация.*,
	|	уатДвижениеДСОбороты.СуммаОборот,
	|	уатДвижениеДСОбороты.СуммаУпрОборот,
	|	(НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, ДЕНЬ)) КАК ПериодДень,
	|	(НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
	|	(НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, ДЕКАДА)) КАК ПериодДекада,
	|	(НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, МЕСЯЦ)) КАК ПериодМесяц,
	|	(НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, КВАРТАЛ)) КАК ПериодКвартал,
	|	(НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, ПОЛУГОДИЕ)) КАК ПериодПолугодие,
	|	(НАЧАЛОПЕРИОДА(уатДвижениеДСОбороты.Период, ГОД)) КАК ПериодГод,
	|	уатДвижениеДСОбороты.БанковскийСчетКасса.ВалютаДенежныхСредств.* КАК ВалютаДенежныхСредств}
	|{УПОРЯДОЧИТЬ ПО
	|	Период,
	|	БанковскийСчетКасса.*,
	|	ВидДенежныхСредств.*,
	|	ПриходРасход,
	|	СтатьяДвиженияДенежныхСредств.*,
	|	ДокументДвижения.*,
	|	Контрагент.*,
	|	Сделка.*,
	|	Организация.*,
	|	СуммаОборот,
	|	СуммаУпрОборот,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	ВалютаДенежныхСредств.*}
	|ИТОГИ
	|	СУММА(СуммаОборот),
	|	СУММА(СуммаУпрОборот)
	|ПО
	|	БанковскийСчетКасса,
	|	ВидДенежныхСредств,
	|	Контрагент,
	|	ДокументДвижения,
	|	СтатьяДвиженияДенежныхСредств,
	|	Сделка,
	|	ПриходРасход,
	|	Организация,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	ВалютаДенежныхСредств
	|{ИТОГИ ПО
	|	Период,
	|	БанковскийСчетКасса.*,
	|	ВидДенежныхСредств.*,
	|	ПриходРасход,
	|	СтатьяДвиженияДенежныхСредств.*,
	|	ДокументДвижения.*,
	|	Контрагент.*,
	|	Сделка.*,
	|	Организация.*,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	ВалютаДенежныхСредств.*}";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , 
	//                                                  <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатДТП.Заказчик", "Заказчик", "Заказчик", 
	//                                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
	//	
	//	// Добавление свойств и категорий в исходный текст запроса.
	//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	//КонецЕсли;
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
	КонецЦикла;

	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Организация"                  , "Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВидДенежныхСредств"           , "Вид денежных средств (наличные, безналичные)");
	//УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Подразделение"     , "Подразделение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Контрагент"                   , "Контрагент");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДоговорКонтрагента"           , "Договор контрагента");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Сделка"                       , "Сделка");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументДвижения"             , "Документ движения");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтатьяДвиженияДенежныхСредств", "Статья движения денежных средств");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("БанковскийСчетКасса"          , "Банковский счет/касса");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Валюта             "          , "Валюта движения");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПриходРасход"                 , "Приход / расход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВалютаДенежныхСредств"        , "Валюты счета (кассы)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаОборот"                  , "Сумма");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаУпрОборот"               , "Сумма (упр)");

	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаОборот"   , "Сумма"      , Истина, "ЧЦ = 15 ; ЧДЦ = 2", );
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаУпрОборот", "Сумма (упр)", Истина, "ЧЦ = 15 ; ЧДЦ = 2", );

	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ВалютаДенежныхСредств");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ПриходРасход");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("БанковскийСчетКасса");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СтатьяДвиженияДенежныхСредств");
	
	УниверсальныйОтчет.ДобавитьИзмерениеКолонки("ВидДенежныхСредств");
	
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаОборот"   , "Сумма"      , Истина,, , );
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаУпрОборот", "Сумма (упр)", Истина,, , );

	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	 УниверсальныйОтчет.ДобавитьОтбор("БанковскийСчетКасса");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал,
//		6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли