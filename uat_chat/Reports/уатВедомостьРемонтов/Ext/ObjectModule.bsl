#Если Клиент Тогда
	
//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА


// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	КонецЕсли;
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	ТекстЗапроса = 
 	"ВЫБРАТЬ
 	|	уатРемонтныйЛист.Ссылка КАК Ссылка,
 	|	уатРемонтныйЛист.Дата КАК Период,
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, ДЕНЬ) КАК ПериодДень,
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, НЕДЕЛЯ) КАК ПериодНеделя,
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, ДЕКАДА) КАК ПериодДекада,
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, МЕСЯЦ) КАК ПериодМесяц,
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, КВАРТАЛ) КАК ПериодКвартал,
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, ПОЛУГОДИЕ) КАК ПериодПолугодие,
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, ГОД) КАК ПериодГод,
 	|	уатРемонтныйЛист.ТС,
 	|	уатРемонтныйЛист.ТС.ГосударственныйНомер КАК ТСГосНомер,
 	|	уатРемонтныйЛист.ТС.ГаражныйНомер КАК ТСГарНомер,
 	|	уатРемонтныйЛист.Контрагент,
 	|	уатРемонтныйЛист.ДатаНачала КАК ДатаНачала,
 	|	уатРемонтныйЛист.ДатаОкончания КАК ДатаОкончания,
 	|	уатРемонтныйЛист.Выполнен,
 	|	ВЫРАЗИТЬ(уатРемонтныйЛист.ПричинаОбращения КАК СТРОКА(1000)) КАК ПричинаОбращения,
 	|	уатРемонтныйЛист.Организация,
 	|	уатРемонтныйЛист.ВидОбслуживания,
 	|	уатРемонтныйЛист.ВидОбслуживания2,
 	|	уатРемонтныйЛист.ВидОбслуживания3,
 	|	СУММА(Стоимости.СтоимостьМатериалов) КАК СтоимостьМатериалов,
 	|	СУММА(Стоимости.СтоимостьРабот) КАК СтоимостьРабот,
 	|	СУММА(Стоимости.СтоимостьУпрМатериалов) КАК СтоимостьУпрМатериалов,
 	|	СУММА(Стоимости.СтоимостьУпрРабот) КАК СтоимостьУпрРабот,
 	|	уатРемонтныйЛист.СтрокаИсполнителейДляОтчета КАК УчастникиРемонта
 	|{ВЫБРАТЬ
 	|	Ссылка.* КАК Регистратор,
 	|	Период,
 	|	ТС.*,
 	|	Контрагент.*,
 	|	уатРемонтныйЛист.ДатаНачала,
 	|	уатРемонтныйЛист.ДатаОкончания,
 	|	уатРемонтныйЛист.Выполнен,
 	|	ПричинаОбращения,
 	|	Организация.*,
 	|	ВидОбслуживания.*,
 	|	ВидОбслуживания2.*,
 	|	ВидОбслуживания3.*,
 	|	СтоимостьМатериалов,
 	|	СтоимостьРабот,
 	|	СтоимостьУпрМатериалов,
 	|	СтоимостьУпрРабот,
 	|	ТСГосНомер,
 	|	ТСГарНомер,
 	|	ПериодДень,
 	|	ПериодНеделя,
 	|	ПериодДекада,
 	|	ПериодМесяц,
 	|	ПериодКвартал,
 	|	ПериодПолугодие,
 	|	ПериодГод,
 	|	УчастникиРемонта}
 	|ИЗ
 	|	Документ.уатРемонтныйЛист КАК уатРемонтныйЛист
 	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
 	|			уатНоменклатураТСОбороты.Период КАК Период,
 	|			уатНоменклатураТСОбороты.Регистратор КАК Регистратор,
 	|			СУММА(ВЫБОР
 	|					КОГДА уатНоменклатураТСОбороты.Номенклатура ССЫЛКА Справочник.Номенклатура
 	|						ТОГДА уатНоменклатураТСОбороты.СтоимостьОборот
 	|					ИНАЧЕ 0
 	|				КОНЕЦ) КАК СтоимостьМатериалов,
 	|			СУММА(ВЫБОР
 	|					КОГДА уатНоменклатураТСОбороты.Номенклатура ССЫЛКА Справочник.уатРаботыПоРемонту
 	|						ТОГДА уатНоменклатураТСОбороты.СтоимостьОборот
 	|					ИНАЧЕ 0
 	|				КОНЕЦ) КАК СтоимостьРабот,
 	|			СУММА(ВЫБОР
 	|					КОГДА уатНоменклатураТСОбороты.Номенклатура ССЫЛКА Справочник.Номенклатура
 	|						ТОГДА уатНоменклатураТСОбороты.СтоимостьУпрОборот
 	|					ИНАЧЕ 0
 	|				КОНЕЦ) КАК СтоимостьУпрМатериалов,
 	|			СУММА(ВЫБОР
 	|					КОГДА уатНоменклатураТСОбороты.Номенклатура ССЫЛКА Справочник.уатРаботыПоРемонту
 	|						ТОГДА уатНоменклатураТСОбороты.СтоимостьУпрОборот
 	|					ИНАЧЕ 0
 	|				КОНЕЦ) КАК СтоимостьУпрРабот
 	|		ИЗ
 	|			РегистрНакопления.уатНоменклатураТС.Обороты(&ДатаНачала, &ДатаКонца, Регистратор, ) КАК уатНоменклатураТСОбороты
 	|		ГДЕ
 	|			уатНоменклатураТСОбороты.Регистратор ССЫЛКА Документ.уатРемонтныйЛист
 	|		СГРУППИРОВАТЬ ПО
 	|			уатНоменклатураТСОбороты.Период,
 	|			уатНоменклатураТСОбороты.Регистратор) КАК Стоимости
 	|		ПО уатРемонтныйЛист.Ссылка = Стоимости.Регистратор
	|ГДЕ
	|	уатРемонтныйЛист.Проведен
	|	И (уатРемонтныйЛист.ДатаОкончания МЕЖДУ &ДатаНачала И &ДатаКонца
	|			ИЛИ уатРемонтныйЛист.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|				И уатРемонтныйЛист.ДатаНачала < &ДатаКонца)
 	|{ГДЕ
 	|	уатРемонтныйЛист.Ссылка.* КАК Регистратор,
 	|	уатРемонтныйЛист.Дата,
 	|	уатРемонтныйЛист.ТС.*,
 	|	уатРемонтныйЛист.ТС.ГосударственныйНомер КАК ТСГосНомер,
 	|	уатРемонтныйЛист.ТС.ГаражныйНомер КАК ТСГарНомер,
 	|	уатРемонтныйЛист.Контрагент.* КАК АвтосервисРемЗона,
 	|	уатРемонтныйЛист.ДатаНачала,
 	|	уатРемонтныйЛист.ДатаОкончания,
 	|	уатРемонтныйЛист.Выполнен,
 	|	уатРемонтныйЛист.ПричинаОбращения,
 	|	уатРемонтныйЛист.Организация.*,
 	|	уатРемонтныйЛист.ВидОбслуживания.*,
 	|	уатРемонтныйЛист.ВидОбслуживания2.*,
 	|	уатРемонтныйЛист.ВидОбслуживания3.*,
 	|	Стоимости.СтоимостьМатериалов,
 	|	Стоимости.СтоимостьРабот,
 	|	Стоимости.СтоимостьУпрМатериалов,
 	|	Стоимости.СтоимостьУпрРабот,
 	|	(НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, ДЕНЬ)) КАК ПериодДень,
 	|	(НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, НЕДЕЛЯ)) КАК ПериодНеделя,
 	|	(НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, ДЕКАДА)) КАК ПериодДекада,
 	|	(НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, МЕСЯЦ)) КАК ПериодМесяц,
 	|	(НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, КВАРТАЛ)) КАК ПериодКвартал,
 	|	(НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, ПОЛУГОДИЕ)) КАК ПериодПолугодие,
 	|	(НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, ГОД)) КАК ПериодГод,
 	|	уатРемонтныйЛист.СтрокаИсполнителейДляОтчета,
	|		(ВЫБОР
	|				КОГДА уатРемонтныйЛист.ТС.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ИСТИНА
	|				КОГДА уатРемонтныйЛист.ТС.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ЛОЖЬ
	|			КОНЕЦ) КАК ТСВыбыло}
 	|
 	|СГРУППИРОВАТЬ ПО
 	|	уатРемонтныйЛист.Ссылка,
 	|	ВЫРАЗИТЬ(уатРемонтныйЛист.ПричинаОбращения КАК СТРОКА(1000)),
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, ГОД),
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, ДЕКАДА),
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, ДЕНЬ),
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, КВАРТАЛ),
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, МЕСЯЦ),
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, НЕДЕЛЯ),
 	|	НАЧАЛОПЕРИОДА(уатРемонтныйЛист.Дата, ПОЛУГОДИЕ),
 	|	уатРемонтныйЛист.ВидОбслуживания,
 	|	уатРемонтныйЛист.ВидОбслуживания2,
 	|	уатРемонтныйЛист.ВидОбслуживания3,
 	|	уатРемонтныйЛист.Выполнен,
 	|	уатРемонтныйЛист.Дата,
 	|	уатРемонтныйЛист.ДатаНачала,
 	|	уатРемонтныйЛист.ДатаОкончания,
 	|	уатРемонтныйЛист.Контрагент,
 	|	уатРемонтныйЛист.Организация,
 	|	уатРемонтныйЛист.СтрокаИсполнителейДляОтчета,
 	|	уатРемонтныйЛист.ТС,
 	|	уатРемонтныйЛист.ТС.ГаражныйНомер,
 	|	уатРемонтныйЛист.ТС.ГосударственныйНомер
 	|
 	|УПОРЯДОЧИТЬ ПО
 	|	ДатаНачала
 	|{УПОРЯДОЧИТЬ ПО
 	|	Ссылка.*,
 	|	Период,
 	|	ТС.*,
 	|	Контрагент.*,
 	|	уатРемонтныйЛист.ДатаНачала,
 	|	уатРемонтныйЛист.ДатаОкончания,
 	|	ПричинаОбращения,
 	|	Организация.*,
 	|	ВидОбслуживания.*,
 	|	ВидОбслуживания2.*,
 	|	ВидОбслуживания3.*,
 	|	СтоимостьМатериалов,
 	|	СтоимостьРабот,
 	|	СтоимостьУпрМатериалов,
 	|	СтоимостьУпрРабот,
 	|	ПериодДень,
 	|	ПериодНеделя,
 	|	ПериодДекада,
 	|	ПериодМесяц,
 	|	ПериодКвартал,
 	|	ПериодПолугодие,
 	|	ПериодГод,
 	|	ТСГосНомер,
 	|	ТСГарНомер,
 	|	УчастникиРемонта}
 	|ИТОГИ
 	|	СУММА(СтоимостьМатериалов),
 	|	СУММА(СтоимостьРабот),
 	|	СУММА(СтоимостьУпрМатериалов),
 	|	СУММА(СтоимостьУпрРабот)
 	|ПО
 	|	Ссылка
 	|{ИТОГИ ПО
 	|	Ссылка.*,
 	|	Период,
 	|	ТС.*,
 	|	Контрагент.*,
 	|	уатРемонтныйЛист.ДатаНачала,
 	|	уатРемонтныйЛист.ДатаОкончания,
 	|	ПричинаОбращения,
 	|	Организация.*,
 	|	ВидОбслуживания.*,
 	|	ВидОбслуживания2.*,
 	|	ВидОбслуживания3.*,
 	|	ТСГосНомер,
 	|	ТСГарНомер,
 	|	ПериодДень,
 	|	ПериодНеделя,
 	|	ПериодДекада,
 	|	ПериодМесяц,
 	|	ПериодКвартал,
 	|	ПериодПолугодие,
 	|	ПериодГод}";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , 
	//                                                  <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатДТП.Заказчик", "Заказчик", "Заказчик", 
	//                                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
	//	
	//	// Добавление свойств и категорий в исходный текст запроса.
	//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	//КонецЕсли;
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТС"			   , "ТС / оборудование (все поля)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГарНомер"	   , "ТС (гар. номер)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГосНомер"	   , "ТС (гос. номер)"); 
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДатаНачала"	   , "Дата начала"); 
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДатаОкончания"   , "Дата окончания"); 
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПричинаОбращения", "Причина обращения"); 
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВидОбслуживания" , "Вид обслуживания (основной)");
 	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВидОбслуживания2", "Вид обслуживания 2");
 	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВидОбслуживания3", "Вид обслуживания 3");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Контрагент"      , "Контрагент / склад");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("УчастникиРемонта", "Участники ремонта");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСВыбыло"		   , "ТС выбыло");	

	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ТС");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ВидОбслуживания");

	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьМатериалов", "Стоимость материалов", Истина,"ЧДЦ=2", ,);
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьРабот"     , "Стоимость работ"     , Истина,"ЧДЦ=2", ,);
	Если уатРаботаСМетаданными.уатЕстьКонстанта("ВалютаУправленческогоУчета") тогда
		УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьУпрМатериалов", "Стоимость материалов (упр.)", Истина,"ЧДЦ=2", ,);
		УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьУпрРабот"     , "Стоимость работ  (упр.)"    , Истина,"ЧДЦ=2", ,);
	КонецЕсли;

	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	УниверсальныйОтчет.ДобавитьОтбор("ТСГосНомер"	   , Ложь  , ВидСравнения.Содержит);
	УниверсальныйОтчет.ДобавитьОтбор("ВидОбслуживания");
	УниверсальныйОтчет.ДобавитьОтбор("Выполнен"		   , Истина, ВидСравнения.Равно , Истина);
	УниверсальныйОтчет.ДобавитьОтбор("Регистратор.Дата", Ложь  , ВидСравнения.ИнтервалВключаяГраницы,,,,Ложь);
	УниверсальныйОтчет.ДобавитьОтбор("ТСВыбыло"		   , Истина, ВидСравнения.Равно , Ложь);	
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	//УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ВыполнениеЗаказовНаТС", "ЗаказНаТС");	
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ТСГосНомер");
   	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ВидРемонта2",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ВидРемонта3",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Контрагент",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаНачала",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаОкончания",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ПричинаОбращения",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("УчастникиРемонта",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
	УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;

	ЭлементУслОформления = УниверсальныйОтчет.ПостроительОтчета.УсловноеОформление.Добавить(""); 
	ЭлементУслОформления.Использование = Истина; 
	ЭлементОбласть = ЭлементУслОформления.Область.Добавить("ДатаНачала", "ДатаНачала", ТипОбластиОформления.Поле); 
	ЭлементОбласть = ЭлементУслОформления.Область.Добавить("ДатаОкончания", "ДатаОкончания", ТипОбластиОформления.Поле); 
		
	ЭлементОформления = ЭлементУслОформления.Оформление.Формат; 
	ЭлементОформления.Использование = Истина; 
	ЭлементОформления.Значение = "ДФ='dd.MM.yyyy ЧЧ:ММ'";
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.

КонецПроцедуры // УстановитьНачальныеНастройки()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
	
КонецПроцедуры // СформироватьОтчет()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 
// 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = 0;
	
#КонецЕсли
