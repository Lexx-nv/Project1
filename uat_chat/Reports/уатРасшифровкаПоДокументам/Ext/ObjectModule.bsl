#Если Клиент Тогда

// Параметры для выбора организации
Перем НПП;
Перем НП Экспорт; // Настройка периода


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура ЗаполнитьНачальныеНастройки(Текст, _СтруктураПараметровЗапроса) Экспорт

	ПостроительОтчета.Текст = Текст;
	
	ПостроительОтчета.ЗаполнитьНастройки();
	//
	//ПостроительОтчета.Параметры.Вставить("ДатаНач", ДатаНач);
	//Попытка
	//	ПостроительОтчета.Параметры.Вставить("Организация", Организация);
	//	
	//Исключение
	//КонецПопытки;
	//
	//
	//Если ДатаКон <> '00010101000000' Тогда
	//	ПостроительОтчета.Параметры.Вставить("ДатаКон", КонецДня(ДатаКон));
	//Иначе
	//	ПостроительОтчета.Параметры.Вставить("ДатаКон", ДатаКон);
	//КонецЕсли;
	Для Каждого ЭлементСтруктуры Из  _СтруктураПараметровЗапроса Цикл
	//	ПостроительОтчета.Параметры.Вставить( ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
		Попытка
			ПостроительОтчета.Отбор.Добавить(ЭлементСтруктуры.Ключ).Использование = Ложь;
		Исключение
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//  ДокументРезультат - табличный документ, формируемый отчетом
//
Процедура СформироватьОтчет(ДокументРезультат,  ПоказыватьЗаголовок = Истина, ВысотаЗаголовка = 0) Экспорт
	НПП = 1;
	
	Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
		Предупреждение("Дата начала периода не может быть больше даты конца периода");
		Возврат;
	КонецЕсли;
	
	ДокументРезультат.Очистить();
	
	Макет       = ПолучитьМакет("Макет");
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	
	// Вывод заголовка отчета
	ОбластьЗаголовка = СформироватьЗаголовок();
	ВысотаЗаголовка  = ОбластьЗаголовка.ВысотаТаблицы;
	
	ДокументРезультат.Вывести(ОбластьЗаголовка, 1);
	
	ПостроительОтчета.Параметры.Вставить("ДатаНач", ДатаНач);
	Попытка
		ПостроительОтчета.Параметры.Вставить("Организация", Организация);
		
	Исключение
	КонецПопытки;
	
	
	Если ДатаКон <> '00010101000000' Тогда
		ПостроительОтчета.Параметры.Вставить("ДатаКон", КонецДня(ДатаКон));
	Иначе
		ПостроительОтчета.Параметры.Вставить("ДатаКон", ДатаКон);
	КонецЕсли;
	Для Каждого ЭлементСтруктуры Из  СтруктураПараметровЗапроса Цикл
		ПостроительОтчета.Параметры.Вставить( ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;
  	
	ПостроительОтчета.Выполнить();
	
	РезультатЗапроса = ПостроительОтчета.Результат;
	
	ЗаголовокОтчета = Макет.ПолучитьОбласть("ЗаголовокОтчета");
	
	ДокументРезультат.Вывести(ЗаголовокОтчета, 1);
	
	// Сдвиг уровня выводимой группировки отчета относительно группировки запроса
	СдвигУровня = 0;
	
	// Флаг сброса сдвига уровня при выводе группировки по счету
	СброситьСдвигУровня = Истина;
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ОбластьСтрока",ОбластьСтрока);
	СтруктураПараметров.Вставить("ДокументРезультат", ДокументРезультат);
	
	ДокументРезультат.НачатьАвтогруппировкуСтрок();
	
	//Если МассивГруппировок.Количество() > 0 Тогда
	//	
	//	ВывестиГруппировку(РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, МассивГруппировок[0]), 
	//	0, МассивГруппировок, 
	//	СдвигУровня, СброситьСдвигУровня, 
	//	СтруктураПараметров);
	//Иначе						
	ВывестиСтроки(РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, ""),СтруктураПараметров);
	//КонецЕсли;
	
	ДокументРезультат.ЗакончитьАвтогруппировкуСтрок();
	
	//// Выведем общие итоги
	//Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
	//Выборка.Следующий();
	//ВывестиПоказатели(Выборка,СтруктураПараметров);
	
	// Зафиксируем заголовок отчета
	ДокументРезультат.ФиксацияСверху = ВысотаЗаголовка + 2;
	
	// Первую колонку не печатаем
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
	
	// Ориентация страницы
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ПолеСлева = 0;
	ДокументРезультат.ПолеСправа = 0;
	
	// Присвоим имя для сохранения параметров печати табличного документа
	ДокументРезультат.ИмяПараметровПечати = "РасшифровкаПоДокументам";
	ДокументРезультат.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);

КонецПроцедуры // СформироватьОтчет()

// Заполняет параметры расшифровки
//
// Параметры:
//	Нет.
//
// Выводит заголовок отчета
//
// Параметры:
//	Нет.
//
Функция СформироватьЗаголовок() Экспорт
	
	// Вывод заголовка, описателя периода и фильтров и заголовка
	Если ДатаНач = '00010101000000' И ДатаКон = '00010101000000' Тогда
		
		ОписаниеПериода     = "Период: без ограничения.";
		
	Иначе
		
		Если ДатаНач = '00010101000000' ИЛИ ДатаКон = '00010101000000' Тогда
			ОписаниеПериода = "Период: " + Формат(ДатаНач, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения""") 
			+ " - "      + Формат(ДатаКон, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения""");
		Иначе
			Если ДатаНач <= ДатаКон Тогда
				ОписаниеПериода = "Период: " + ПредставлениеПериода(НачалоДня(ДатаНач), КонецДня(ДатаКон), "ФП = Истина");
			Иначе
				ОписаниеПериода = "Неправильно задан период!"
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Макет = ПолучитьМакет("Макет");
	
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	
	
	ЗаголовокОтчета.Параметры.ОписаниеПериода = ОписаниеПериода;
	
	ТекстПроИтоги = "";
	
	ТекстПроИтоги = ТекстПроИтоги + УправлениеОтчетами.СформироватьСтрокуИзмерений(ПостроительОтчета.ИзмеренияСтроки);
	
	Если Не ПустаяСтрока(ТекстПроИтоги) Тогда
		ЗаголовокОтчета.Параметры.ТекстПроИтоги = "Группировки по " + ТекстПроИтоги;
	КонецЕсли;
	
	ЗаголовокОтчета.Параметры.Заголовок = ЗаголовокОтчета();
	
	// Вывод списка фильтров:
	СтрОтбор = УправлениеОтчетами.СформироватьСтрокуОтборов(ПостроительОтчета.Отбор);
	
	Если Не ПустаяСтрока(СтрОтбор) Тогда
		ОбластьОтбор = Макет.ПолучитьОбласть("СтрокаОтбор");
		ОбластьОтбор.Параметры.ТекстПроОтбор = "Отбор: " + СтрОтбор;
		ЗаголовокОтчета.Вывести(ОбластьОтбор);
	КонецЕсли;
	
	Возврат(ЗаголовокОтчета);
	
КонецФункции // СформироватьЗаголовок()

// Выводит показатели группировки
//
// Параметры:
//	Выборка - выборка
//	ЭтоПерваяСтрока - признак вывода отступов перед субконто
//
Процедура ВывестиПоказатели(Выборка, СтруктураПараметров)
	
	
	
	ДокументРезультат = СтруктураПараметров.ДокументРезультат;
	Область = СтруктураПараметров.ОбластьСтрока;
	Область.Параметры.Документ = Выборка.Документ;	
	Область.Параметры.Расшифровка = Выборка.Документ ;
	Область.Параметры.НПП = НПП ;
	НПП=НПП+1;
	
	ДокументРезультат.Вывести(Область, Выборка.Уровень());
	
КонецПроцедуры // ВывестиПоказатели()

// Выводит строки
//
// Параметры:
//	Выборка - выборка
//
Процедура ВывестиСтроки(Выборка, СтруктураПараметров)
	
	ДокументРезультат = СтруктураПараметров.ДокументРезультат;
	Область = СтруктураПараметров.ОбластьСтрока;
	Пока Выборка.Следующий() Цикл
		
		ВывестиПоказатели(Выборка,СтруктураПараметров); 
		
	КонецЦикла;
	
КонецПроцедуры // ВывестиПоказатели()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Настраивает отчет по заданным параметрам (например, для расшифровки)
Процедура Настроить(СтруктураПараметров) Экспорт
	
	Параметры = Новый Соответствие;
	
	Для каждого Элемент Из СтруктураПараметров Цикл
		Параметры.Вставить(Элемент.Ключ, Элемент.Значение);
	КонецЦикла; 
	
	ДатаНач = Параметры["ДатаНач"];
	ДатаКон = Параметры["ДатаКон"];
	Попытка
		Организация = Параметры["Организация"];
		
	Исключение
	КонецПопытки;

	ТекстЗапроса = Параметры["ТекстЗапроса"];
	СтруктураПараметровЗапроса= Параметры["СтруктураПараметровЗапроса"];
	ЗаполнитьНачальныеНастройки(ТекстЗапроса,СтруктураПараметровЗапроса);
		
	//ЗаполнитьНачальныеНастройки();
	
	
	СтрокиОтбора = Параметры["Отбор"];
	
	Если ТипЗнч(СтрокиОтбора) = Тип("Соответствие")
		ИЛИ ТипЗнч(СтрокиОтбора) = Тип("Структура") Тогда
		
		Для каждого Строка Из СтрокиОтбора Цикл
			
			ЭлементОтбора = Неопределено;
			
			// Установим существующие элементы, добавим новые
			Для Инд = 0 По ПостроительОтчета.Отбор.Количество()-1 Цикл
				
				Если Строка.Ключ = ПостроительОтчета.Отбор[Инд].ПутьКДанным Тогда
					ЭлементОтбора = ПостроительОтчета.Отбор[Инд];
				КонецЕсли;
				
			КонецЦикла; 
			
			Если ЭлементОтбора = Неопределено Тогда
				
				ЭлементОтбора = ПостроительОтчета.Отбор.Добавить(Строка.Ключ);
				
			КонецЕсли; 
			ЭлементОтбора.Установить(Строка.Значение);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Функция ЗаголовокОтчета() Экспорт
	Возврат "Расшифровка по документам";	
КонецФункции // ЗаголовокОтчета()


////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

НП = Новый НастройкаПериода;

#КонецЕсли