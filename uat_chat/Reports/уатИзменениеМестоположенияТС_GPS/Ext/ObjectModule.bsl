#Если Клиент Тогда
	
//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА


// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	КонецЕсли;
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	ТекстЗапроса = 
    "ВЫБРАТЬ
    |	уатМестоположениеGPSСрезПоследних.Период КАК Период,
    |	уатМестоположениеGPSСрезПоследних.ТС КАК ТС,
    |	уатМестоположениеGPSСрезПоследних.Лат КАК Лат,
    |	уатМестоположениеGPSСрезПоследних.Лон КАК Лон,
    |	уатМестоположениеGPSСрезПоследних.Скорость КАК Скорость,
    |	уатМестоположениеGPSСрезПоследних.Пункт КАК Пункт,
    |	уатМестоположениеGPSСрезПоследних.ЗначениеДатчика1 КАК ЗначениеДатчика1,
    |	уатМестоположениеGPSСрезПоследних.ЗначениеДатчика2 КАК ЗначениеДатчика2,
    |	уатМестоположениеGPSСрезПоследних.ЗначениеДатчика3 КАК ЗначениеДатчика3,
    |	уатМестоположениеGPSСрезПоследних.ЗначениеДатчика4 КАК ЗначениеДатчика4,
    |	уатМестоположениеGPSСрезПоследних.ЗначениеДатчика5 КАК ЗначениеДатчика5,
    |	уатМестоположениеGPSСрезПоследних.ТС.ГосударственныйНомер КАК ТСГосНомер,
    |	уатМестоположениеGPSСрезПоследних.ТС.ГаражныйНомер КАК ТСГарНомер,
    |	НАЧАЛОПЕРИОДА(уатМестоположениеGPSСрезПоследних.Период, ДЕНЬ) КАК ПериодДень,
    |	НАЧАЛОПЕРИОДА(уатМестоположениеGPSСрезПоследних.Период, НЕДЕЛЯ) КАК ПериодНеделя,
    |	НАЧАЛОПЕРИОДА(уатМестоположениеGPSСрезПоследних.Период, ДЕКАДА) КАК ПериодДекада,
    |	НАЧАЛОПЕРИОДА(уатМестоположениеGPSСрезПоследних.Период, МЕСЯЦ) КАК ПериодМесяц,
    |	НАЧАЛОПЕРИОДА(уатМестоположениеGPSСрезПоследних.Период, КВАРТАЛ) КАК ПериодКвартал,
    |	НАЧАЛОПЕРИОДА(уатМестоположениеGPSСрезПоследних.Период, ГОД) КАК ПериодГод
    |{ВЫБРАТЬ
    |	Период,
    |	ТС.*,
    |	Лат,
    |	Лон,
    |	Скорость,
    |	Пункт,
    |	ЗначениеДатчика1,
    |	ЗначениеДатчика2,
    |	ЗначениеДатчика3,
    |	ЗначениеДатчика4,
    |	ЗначениеДатчика5,
    |	ТСГосНомер,
    |	ТСГарНомер,
    |	ПериодДень,
    |	ПериодНеделя,
    |	ПериодДекада,
    |	ПериодМесяц,
    |	ПериодКвартал,
    |	ПериодГод}
    |ИЗ
    |	РегистрСведений.уатМестоположениеGPS КАК уатМестоположениеGPSСрезПоследних
    |ГДЕ
    |	уатМестоположениеGPSСрезПоследних.Период МЕЖДУ &ДатаНачала И &ДатаКонца
    |{ГДЕ
    |	уатМестоположениеGPSСрезПоследних.Период,
    |	уатМестоположениеGPSСрезПоследних.ТС.*,
    |	уатМестоположениеGPSСрезПоследних.Лат,
    |	уатМестоположениеGPSСрезПоследних.Лон,
    |	уатМестоположениеGPSСрезПоследних.Скорость,
    |	уатМестоположениеGPSСрезПоследних.Пункт,
    |	уатМестоположениеGPSСрезПоследних.ЗначениеДатчика1,
    |	уатМестоположениеGPSСрезПоследних.ЗначениеДатчика2,
    |	уатМестоположениеGPSСрезПоследних.ЗначениеДатчика3,
    |	уатМестоположениеGPSСрезПоследних.ЗначениеДатчика4,
    |	уатМестоположениеGPSСрезПоследних.ЗначениеДатчика5,
    |	уатМестоположениеGPSСрезПоследних.ТС.ГосударственныйНомер КАК ТСГосНомер,
    |	уатМестоположениеGPSСрезПоследних.ТС.ГаражныйНомер КАК ТСГарНомер,
    |	(ВЫБОР
    |			КОГДА уатМестоположениеGPSСрезПоследних.ТС.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
    |				ТОГДА ИСТИНА
    |			КОГДА уатМестоположениеGPSСрезПоследних.ТС.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)
    |				ТОГДА ЛОЖЬ
    |		КОНЕЦ) КАК ТСВыбыло}
    |
    |УПОРЯДОЧИТЬ ПО
    |	Период
    |{УПОРЯДОЧИТЬ ПО
    |	ТС.*,
    |	Лат,
    |	Лон,
    |	Скорость,
    |	Пункт,
    |	ЗначениеДатчика1,
    |	ЗначениеДатчика2,
    |	ЗначениеДатчика3,
    |	ЗначениеДатчика4,
    |	ЗначениеДатчика5,
    |	ПериодДень,
    |	ПериодНеделя,
    |	ПериодДекада,
    |	ПериодКвартал,
    |	ПериодГод}
    |ИТОГИ
    |	ВЫБОР
    |		КОГДА ТС ЕСТЬ NULL 
    |			ТОГДА 0
    |		ИНАЧЕ МАКСИМУМ(Лат)
    |	КОНЕЦ КАК Лат,
    |	ВЫБОР
    |		КОГДА ТС ЕСТЬ NULL 
    |			ТОГДА 0
    |		ИНАЧЕ МАКСИМУМ(Лон)
    |	КОНЕЦ КАК Лон,
    |	ВЫБОР
    |		КОГДА ТС ЕСТЬ NULL 
    |			ТОГДА 0
    |		ИНАЧЕ МАКСИМУМ(Скорость)
    |	КОНЕЦ КАК Скорость,
    |	ВЫБОР
    |		КОГДА ТС ЕСТЬ NULL 
    |			ТОГДА 0
    |		ИНАЧЕ МАКСИМУМ(Пункт)
    |	КОНЕЦ КАК Пункт,
    |	ВЫБОР
    |		КОГДА ТС ЕСТЬ NULL 
    |			ТОГДА 0
    |		ИНАЧЕ МАКСИМУМ(ЗначениеДатчика1)
    |	КОНЕЦ КАК ЗначениеДатчика1,
    |	ВЫБОР
    |		КОГДА ТС ЕСТЬ NULL 
    |			ТОГДА 0
    |		ИНАЧЕ МАКСИМУМ(ЗначениеДатчика2)
    |	КОНЕЦ КАК ЗначениеДатчика2,
    |	ВЫБОР
    |		КОГДА ТС ЕСТЬ NULL 
    |			ТОГДА 0
    |		ИНАЧЕ МАКСИМУМ(ЗначениеДатчика3)
    |	КОНЕЦ КАК ЗначениеДатчика3,
    |	ВЫБОР
    |		КОГДА ТС ЕСТЬ NULL 
    |			ТОГДА 0
    |		ИНАЧЕ МАКСИМУМ(ЗначениеДатчика4)
    |	КОНЕЦ КАК ЗначениеДатчика4,
    |	ВЫБОР
    |		КОГДА ТС ЕСТЬ NULL 
    |			ТОГДА 0
    |		ИНАЧЕ МАКСИМУМ(ЗначениеДатчика5)
    |	КОНЕЦ КАК ЗначениеДатчика5
    |ПО
    |	Период,
    |	ТС,
    |	ПериодДень,
    |	ПериодНеделя,
    |	ПериодДекада,
    |	ПериодМесяц,
    |	ПериодКвартал,
    |	ПериодГод
    |{ИТОГИ ПО
    |	Период,
    |	ТС.*,
    |	ТСГосНомер,
    |	ТСГарНомер,
    |	Пункт,
    |	ПериодДень,
    |	ПериодНеделя,
    |	ПериодДекада,
    |	ПериодМесяц,
    |	ПериодКвартал,
    |	ПериодГод}";
	

	// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , 
	//                                                  <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатДТП.Заказчик", "Заказчик", "Заказчик", 
	//                                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
	//	
	//	// Добавление свойств и категорий в исходный текст запроса.
	//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	//КонецЕсли;
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
	
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТС"        , "ТС (все поля)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГарНомер", "ТС (гар. номер)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГосНомер", "ТС (гос. номер)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Лат"       , "Широта");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Лон"       , "Долгота");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСВыбыло"  , "ТС выбыло");
                                                                      
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ТС.Организация");
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	УниверсальныйОтчет.ДобавитьОтбор("ТСГосНомер", Ложь  , ВидСравнения.Содержит);
	УниверсальныйОтчет.ДобавитьОтбор("ТСВыбыло"  , Истина, ВидСравнения.Равно, Ложь);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	УниверсальныйОтчет.ДобавитьПоказатель("Лат"     , "Широта"  , Истина,, );
	УниверсальныйОтчет.ДобавитьПоказатель("Лон"     , "Долгота" , Истина,, );
	УниверсальныйОтчет.ДобавитьПоказатель("Скорость", "Скорость", Истина,, );
	УниверсальныйОтчет.ДобавитьПоказатель("Пункт"   , "Пункт"   , Ложь,, );
	УниверсальныйОтчет.ДобавитьПоказатель("ЗначениеДатчика1", "Значение датчика 1", Ложь,, );
	УниверсальныйОтчет.ДобавитьПоказатель("ЗначениеДатчика2", "Значение датчика 2", Ложь,, );
	УниверсальныйОтчет.ДобавитьПоказатель("ЗначениеДатчика3", "Значение датчика 3", Ложь,, );
	УниверсальныйОтчет.ДобавитьПоказатель("ЗначениеДатчика4", "Значение датчика 4", Ложь,, );
	УниверсальныйОтчет.ДобавитьПоказатель("ЗначениеДатчика5", "Значение датчика 5", Ложь,, );
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	//УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ВыполнениеЗаказовНаТС", "ЗаказНаТС");	
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	//УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Период"    , ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ТСГосНомер", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
	//УниверсальныйОтчет.ДобавитьДополнительноеПоле("Лат"           , ТипРазмещенияРеквизитовИзмерений.Отдельно);
	//УниверсальныйОтчет.ДобавитьДополнительноеПоле("Лон"           , ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
	//ПутьКДанным, Размещение = Неопределено, Положение = 3
	
	УниверсальныйОтчет.ВыводитьДетальныеЗаписи = истина;
	
КонецПроцедуры // УстановитьНачальныеНастройки()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
	
КонецПроцедуры // СформироватьОтчет()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 
// 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = 0;
	
#КонецЕсли
