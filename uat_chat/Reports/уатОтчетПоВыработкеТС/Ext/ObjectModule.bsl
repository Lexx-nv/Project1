#Если Клиент Тогда
	
	//=================================================================================
	// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА
	
	
	// Процедура установки начальных настроек отчета с использованием текста запроса
	//
	Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
		
		// Содержит название отчета, которое будет выводиться в шапке.
		// Тип: Строка.
		// Пример:
		// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
		УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
		
		Если ДополнительныеПараметры <> Неопределено Тогда
			
			//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
			
		КонецЕсли;
		
		УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
		УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	уатВыработкаОбороты.Период КАК Период,
		|	НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, ДЕНЬ) КАК ПериодДень,
		|	НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, НЕДЕЛЯ) КАК ПериодНеделя,
		|	НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, ДЕКАДА) КАК ПериодДекада,
		|	НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, МЕСЯЦ) КАК ПериодМесяц,
		|	НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, КВАРТАЛ) КАК ПериодКвартал,
		|	НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
		|	НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, ГОД) КАК ПериодГод,
		|	уатВыработкаОбороты.Регистратор КАК Регистратор,
		|	уатВыработкаОбороты.Организация КАК Организация,
		|	уатВыработкаОбороты.ТС КАК ТС,
		|	уатВыработкаОбороты.ПараметрВыработки КАК ПараметрВыработки,
		|	уатВыработкаОбороты.Подразделение КАК Подразделение,
		|	уатВыработкаОбороты.Контрагент КАК Контрагент,
		|	уатВыработкаОбороты.ОбъектСтроительства КАК ОбъектСтроительства,
		|	уатВыработкаОбороты.Маршрут КАК Маршрут,
		|	ВЫБОР
		|		КОГДА уатВыработкаОбороты.ПараметрВыработки.Временный
		|				И &ВыводитьВремяВФорматеЧЧММ
		|			ТОГДА ВЫБОР
		|					КОГДА (ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - уатВыработкаОбороты.КоличествоОборот / 3600 > 0
		|						ТОГДА (ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - 1
		|					ИНАЧЕ ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))
		|				КОНЕЦ * 60 + ВЫБОР
		|					КОГДА (ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - уатВыработкаОбороты.КоличествоОборот / 3600 > 0
		|						ТОГДА уатВыработкаОбороты.КоличествоОборот / 3600 - ((ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - 1)
		|					ИНАЧЕ уатВыработкаОбороты.КоличествоОборот / 3600 - (ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0)))
		|				КОНЕЦ * 60
		|		КОГДА уатВыработкаОбороты.ПараметрВыработки.Временный
		|				И НЕ &ВыводитьВремяВФорматеЧЧММ
		|			ТОГДА ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ уатВыработкаОбороты.КоличествоОборот
		|	КОНЕЦ КАК КоличествоОборот,
		|	ВЫБОР
		|		КОГДА уатВыработкаОбороты.ТС.ВидМоделиТС = ЗНАЧЕНИЕ(Перечисление.уатВидыМоделейТС.Автотранспорт)
		|			ТОГДА уатВыработкаОбороты.ТС.ГосударственныйНомер
		|		ИНАЧЕ уатВыработкаОбороты.ТС.Наименование
		|	КОНЕЦ КАК ТСГосНомер,
		|	ВЫБОР
		|		КОГДА уатВыработкаОбороты.ТС.ВидМоделиТС = ЗНАЧЕНИЕ(Перечисление.уатВидыМоделейТС.Автотранспорт)
		|			ТОГДА уатВыработкаОбороты.ТС.ГаражныйНомер
		|		ИНАЧЕ уатВыработкаОбороты.ТС.Наименование
		|	КОНЕЦ КАК ТСГарНомер,
		|	уатВыработкаОбороты.ТС.Колонна КАК Колонна,
		|	ВЫБОР
		|		КОГДА уатВыработкаОбороты.ТС.ВидМоделиТС = ЗНАЧЕНИЕ(Перечисление.уатВидыМоделейТС.Автотранспорт)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаТСОборудование.ТС)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаТСОборудование.Оборудование)
		|	КОНЕЦ КАК ТСОборудование,
		|	уатВыработкаОбороты.ПараметрВыработки.Временный КАК ПараметрВыработкиВременный1,
		|	ВЫБОР
		|		КОГДА уатВыработкаОбороты.ПараметрВыработки.Временный
		|				И &ВыводитьВремяВФорматеЧЧММ
		|			ТОГДА ВЫБОР
		|					КОГДА (ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - уатВыработкаОбороты.КоличествоОборот / 3600 > 0
		|						ТОГДА (ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - 1
		|					ИНАЧЕ ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))
		|				КОНЕЦ + (ВЫРАЗИТЬ(ВЫБОР
		|						КОГДА (ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - уатВыработкаОбороты.КоличествоОборот / 3600 > 0
		|							ТОГДА уатВыработкаОбороты.КоличествоОборот / 3600 - ((ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - 1)
		|						ИНАЧЕ уатВыработкаОбороты.КоличествоОборот / 3600 - (ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0)))
		|					КОНЕЦ * 60 / 100 КАК ЧИСЛО(15, 2)))
		|		КОГДА уатВыработкаОбороты.ПараметрВыработки.Временный
		|				И НЕ &ВыводитьВремяВФорматеЧЧММ
		|			ТОГДА ВЫРАЗИТЬ(уатВыработкаОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ уатВыработкаОбороты.КоличествоОборот
		|	КОНЕЦ КАК ИзРегистра
		|{ВЫБРАТЬ
		|	Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод,
		|	Регистратор.*,
		|	Организация.*,
		|	ТС.*,
		|	ПараметрВыработки.*,
		|	Подразделение.*,
		|	Контрагент.*,
		|	ОбъектСтроительства.*,
		|	Маршрут.*,
		|	КоличествоОборот,
		|	ТСГарНомер,
		|	ТСГосНомер,
		|	Колонна.*,
		|	ТСОборудование,
		|	ИзРегистра}
		|ИЗ
		|	РегистрНакопления.уатВыработкаТС.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК уатВыработкаОбороты
		|{ГДЕ
		|	уатВыработкаОбороты.Период,
		|	(НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, ДЕНЬ)) КАК ПериодДень,
		|	(НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
		|	(НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, ДЕКАДА)) КАК ПериодДекада,
		|	(НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, МЕСЯЦ)) КАК ПериодМесяц,
		|	(НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, КВАРТАЛ)) КАК ПериодКвартал,
		|	(НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, ПОЛУГОДИЕ)) КАК ПериодПолугодие,
		|	(НАЧАЛОПЕРИОДА(уатВыработкаОбороты.Период, ГОД)) КАК ПериодГод,
		|	уатВыработкаОбороты.Регистратор.*,
		|	уатВыработкаОбороты.Организация.*,
		|	уатВыработкаОбороты.ТС.*,
		|	уатВыработкаОбороты.ПараметрВыработки.*,
		|	уатВыработкаОбороты.Подразделение.*,
		|	уатВыработкаОбороты.Контрагент.*,
		|	уатВыработкаОбороты.ОбъектСтроительства.*,
		|	уатВыработкаОбороты.Маршрут.*,
		|	уатВыработкаОбороты.КоличествоОборот,
		|	(ВЫБОР
		|			КОГДА уатВыработкаОбороты.ТС.ВидМоделиТС = ЗНАЧЕНИЕ(Перечисление.уатВидыМоделейТС.Автотранспорт)
		|				ТОГДА уатВыработкаОбороты.ТС.ГосударственныйНомер
		|			ИНАЧЕ уатВыработкаОбороты.ТС.Наименование
		|		КОНЕЦ) КАК ТСГосНомер,
		|	(ВЫБОР
		|			КОГДА уатВыработкаОбороты.ТС.ВидМоделиТС = ЗНАЧЕНИЕ(Перечисление.уатВидыМоделейТС.Автотранспорт)
		|				ТОГДА уатВыработкаОбороты.ТС.ГаражныйНомер
		|			ИНАЧЕ уатВыработкаОбороты.ТС.Наименование
		|		КОНЕЦ) КАК ТСГарНомер,
		|	уатВыработкаОбороты.ТС.Колонна.* КАК Колонна,
		|	(ВЫБОР
		|			КОГДА уатВыработкаОбороты.ТС ССЫЛКА Справочник.уатТС
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаТСОборудование.ТС)
		|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.уатПолеОтчетаТСОборудование.Оборудование)
		|		КОНЕЦ) КАК ТСОборудование,
		|	(ВЫБОР
		|			КОГДА уатВыработкаОбороты.ТС.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ИСТИНА
		|			КОГДА уатВыработкаОбороты.ТС.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ЛОЖЬ
		|		КОНЕЦ) КАК ТСВыбыло}
		|{УПОРЯДОЧИТЬ ПО
		|	Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод,
		|	Регистратор.*,
		|	Организация.*,
		|	ТС.*,
		|	ПараметрВыработки.*,
		|	Подразделение.*,
		|	Контрагент.*,
		|	ОбъектСтроительства.*,
		|	Маршрут.*,
		|	КоличествоОборот,
		|	ТСГарНомер,
		|	ТСГосНомер,
		|	Колонна.*,
		|	ТСОборудование}
		|ИТОГИ
		|	СУММА(ИзРегистра) КАК КоличествоОборот,
		|	ВЫБОР
		|		КОГДА ПараметрВыработки ЕСТЬ NULL 
		|			ТОГДА 0
		|		КОГДА уатВыработкаОбороты.ПараметрВыработки.Временный
		|				И &ВыводитьВремяВФорматеЧЧММ
		|			ТОГДА ВЫРАЗИТЬ(ВЫБОР
		|						КОГДА (ВЫРАЗИТЬ(СУММА(КоличествоОборот) / 60 КАК ЧИСЛО(15, 0))) - СУММА(КоличествоОборот) / 60 > 0
		|							ТОГДА (ВЫРАЗИТЬ(СУММА(КоличествоОборот) / 60 КАК ЧИСЛО(15, 0))) - 1
		|						ИНАЧЕ ВЫРАЗИТЬ(СУММА(КоличествоОборот) / 60 КАК ЧИСЛО(15, 0))
		|					КОНЕЦ + ВЫБОР
		|						КОГДА (ВЫРАЗИТЬ(СУММА(КоличествоОборот) / 60 КАК ЧИСЛО(15, 0))) - СУММА(КоличествоОборот) / 60 > 0
		|							ТОГДА СУММА(КоличествоОборот) / 60 - ((ВЫРАЗИТЬ(СУММА(КоличествоОборот) / 60 КАК ЧИСЛО(15, 0))) - 1)
		|						ИНАЧЕ СУММА(КоличествоОборот) / 60 - (ВЫРАЗИТЬ(СУММА(КоличествоОборот) / 60 КАК ЧИСЛО(15, 0)))
		|					КОНЕЦ * 60 / 100 КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ СУММА(КоличествоОборот)
		|	КОНЕЦ КАК ИзРегистра
		|ПО
		|	Контрагент,
		|	Подразделение,
		|	Период,
		|	Организация,
		|	Регистратор,
		|	ТС,
		|	ПараметрВыработки,
		|	ТСГарНомер,
		|	ТСГосНомер,
		|	Колонна,
		|	ОбъектСтроительства
		|{ИТОГИ ПО
		|	Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод,
		|	Регистратор.*,
		|	Организация.*,
		|	ТС.*,
		|	ПараметрВыработки.*,
		|	Подразделение.*,
		|	Контрагент.*,
		|	ОбъектСтроительства.*,
		|	Маршрут.*,
		|	ТСГарНомер,
		|	ТСГосНомер,
		|	Колонна.*,
		|	ТСОборудование}";
		
		ВыводитьВремяВФорматеЧЧММ = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(глЗначениеПеременной("глТекущийПользователь"), ПланыВидовХарактеристик.уатПраваИНастройки.ФорматироватьВремяВОтчетах);
		УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ВыводитьВремяВФорматеЧЧММ", ?(ВыводитьВремяВФорматеЧЧММ, ИСТИНА, ЛОЖЬ));
		
		// В универсальном отчете включен флаг использования свойств и категорий.
		//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		//	
		//	// Добавление свойств и категорий поля запроса в таблицу полей.
		//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		//	
		//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , 
		//                                                  <ПсевдонимПоля>, <Представление>, <Назначение>);
		//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатДТП.Заказчик", "Заказчик", "Заказчик", 
		//                                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
		//	
		//	// Добавление свойств и категорий в исходный текст запроса.
		//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		//	
		//КонецЕсли;
		
		// Инициализация текста запроса построителя отчета
		УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
		
		Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
			
			УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
			
		КонецЦикла;
		
		
		// Представления полей отчета.
		// Необходимо вызывать для каждого поля запроса.
		// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
		
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТС"                 , "ТС (все поля)");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГарНомер"         , "ТС (гар. номер)");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГосНомер"         , "ТС (гос. номер)");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПараметрВыработки"  , "Параметр выработки");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоОборот"   , "Количество");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСОборудование"     , "Тип объекта отчета (ТС или оборудование)");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОбъектСтроительства", "Объект строительства");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСВыбыло"			  , "ТС выбыло");
		
		УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
		
		//// Заполнение начальных настроек универсального отчета
		//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
		
		// Добавление предопределенных группировок строк отчета.
		// Необходимо вызывать для каждой добавляемой группировки строки.
		// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
		
		УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ТС");
		УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ПараметрВыработки");
		
		УниверсальныйОтчет.ДобавитьПоказатель("ИзРегистра", "Количество", Истина,, );
		
		// Добавление предопределенных отборов отчета.
		// Необходимо вызывать для каждого добавляемого отбора.
		УниверсальныйОтчет.ДобавитьОтбор("ТСГосНомер",Ложь,ВидСравнения.Содержит);
		УниверсальныйОтчет.ДобавитьОтбор("Колонна");
		УниверсальныйОтчет.ДобавитьОтбор("ТСОборудование");
		УниверсальныйОтчет.ДобавитьОтбор("ТСВыбыло", Истина, ВидСравнения.Равно, Ложь);
		
		// Установка связи подчиненных и родительских полей
		// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
		
		// Установка связи полей и измерений
		// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
		//УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ВыполнениеЗаказовНаТС", "ЗаказНаТС");	
		
		// Заполнение начальных настроек универсального отчета
		УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
		
		// Добавление дополнительных полей
		// Необходимо вызывать для каждого добавляемого дополнительного поля.
		//УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
		УниверсальныйОтчет.ДобавитьДополнительноеПоле("ТСГосНомер"      , ТипРазмещенияРеквизитовИзмерений.Отдельно);
		
		ЭлементУслОформления = УниверсальныйОтчет.ПостроительОтчета.УсловноеОформление.Добавить(""); 
		ЭлементУслОформления.Использование = Истина; 
		ЭлементОбласть = ЭлементУслОформления.Область.Добавить("ИзРегистра", "ИзРегистра", ТипОбластиОформления.Поле); 
		ЭлементОтбор = ЭлементУслОформления.Отбор.Добавить("ПараметрВыработки.Временный","ПараметрВыработки_Временной","Параметр выработки.Временной"); 
		ЭлементОтбор.Значение = Истина;
		ЭлементОтбор.Использование = Истина; 
		ЭлементОтбор.ВидСравнения = ВидСравнения.Равно; 
		
		ЭлементОформления = ЭлементУслОформления.Оформление.Формат; 
		ЭлементОформления.Использование = Истина; 
		Если ВыводитьВремяВФорматеЧЧММ Тогда
			ЭлементОформления.Значение = "ЧДЦ=2; ЧРД=:";
		Иначе
			ЭлементОформления.Значение = "ЧДЦ=3; ЧРД=,";
		КонецЕсли;
		
		//ПутьКДанным, Размещение = Неопределено, Положение = 3
		
	КонецПроцедуры // УстановитьНачальныеНастройки()
	
	//=================================================================================
	// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
	// Процедура формирования отчета
	//
	Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
		
		УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
		ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
		
	КонецПроцедуры // СформироватьОтчет()
	
	//=================================================================================
	// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
	
	// Процедура обработки расшифровки
	//
	Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
		
		// Дополнительные параметры в расшифровывающий отчет можно передать
		// посредством инициализации переменной "ДополнительныеПараметры".
		
		ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
		УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
		
	КонецПроцедуры // ОбработкаРасшифровки()
	
	// Формирует структуру для сохранения настроек отчета
	//
	Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
		
		УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
		уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
		
	КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()
	
	// Заполняет настройки отчета из структуры сохраненных настроек
	//
	Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
		
		уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
		Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
		
	КонецФункции // ВосстановитьНастройкиИзСтруктуры()
	
	// Содержит значение используемого режима ввода периода.
	// Тип: Число.
	// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 
	// 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
	// Значение по умолчанию: 0
	// Пример:
	УниверсальныйОтчет.мРежимВводаПериода = 0;
	
	
#КонецЕсли