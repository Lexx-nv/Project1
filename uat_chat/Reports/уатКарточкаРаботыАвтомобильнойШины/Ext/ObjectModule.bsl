#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	Текст =	
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ПробегЗаМесяц.ПробегОборот, 0) КАК ПробегЗаМесяц,
	|	ЕСТЬNULL(ОбщийПробег.ПробегОборот, 0) КАК ПробегОбщий,
	|	УстановленныеШины.РегистраторПричинаОбращения,
	|	УстановленныеШины.МодельТС,
	|	УстановленныеШины.ДатаУстановкиШиныНаТС,
	|	УстановленныеШины.ДатаСнятияШиныСТС,
	|	УстановленныеШины.ИнвНомерТС,
	|	УстановленныеШины.ГосударственныйНомер
	|ИЗ
	|	(ВЫБРАТЬ
	|		УстановленоНаТС.Период КАК ДатаУстановкиШиныНаТС,
	|		УстановленоНаТС.СерияНоменклатуры КАК Шины,
	|		СнятоСТС.Период КАК ДатаСнятияШиныСТС,
	|		УстановленоНаТС.ТС КАК ТС,
	|		УстановленоНаТС.ТС.Модель КАК МодельТС,
	|		УстановленоНаТС.ТС.ГаражныйНомер КАК ИнвНомерТС,
	|		УстановленоНаТС.ТС.ГосударственныйНомер КАК ГосударственныйНомер,
	|		СнятоСТС.Регистратор.ПричинаОбращения КАК РегистраторПричинаОбращения
	|	ИЗ
	|		РегистрСведений.уатАгрегатыТС КАК УстановленоНаТС
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатАгрегатыТС.СрезПоследних(&ДатаКон, ) КАК СнятоСТС
	|			ПО УстановленоНаТС.СерияНоменклатуры = СнятоСТС.СерияНоменклатуры
	|				И УстановленоНаТС.ТС = СнятоСТС.ТС
	|				И (СнятоСТС.СостояниеАгрегата = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.Снято))
	|	ГДЕ
	|		УстановленоНаТС.СерияНоменклатуры = &Шина
	|		И УстановленоНаТС.СостояниеАгрегата = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе)) КАК УстановленныеШины
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			уатИзносПробегШинОбороты.ТС КАК ТС,
	|			уатИзносПробегШинОбороты.СерияНоменклатуры КАК СерияНоменклатуры,
	|			уатИзносПробегШинОбороты.Организация КАК Организация,
	|			СУММА(уатИзносПробегШинОбороты.ПробегОборот) КАК ПробегОборот
	|		ИЗ
	|			РегистрНакопления.уатИзносПробегШин.Обороты(НАЧАЛОПЕРИОДА(&ДатаКон, МЕСЯЦ), &ДатаКон, Регистратор, СерияНоменклатуры = &Шина) КАК уатИзносПробегШинОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			уатИзносПробегШинОбороты.ТС,
	|			уатИзносПробегШинОбороты.Организация,
	|			уатИзносПробегШинОбороты.СерияНоменклатуры) КАК ПробегЗаМесяц
	|		ПО УстановленныеШины.Шины = ПробегЗаМесяц.СерияНоменклатуры
	|			И УстановленныеШины.ТС = ПробегЗаМесяц.ТС
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			уатИзносПробегШинОбороты.ТС КАК ТС,
	|			уатИзносПробегШинОбороты.СерияНоменклатуры КАК СерияНоменклатуры,
	|			уатИзносПробегШинОбороты.Организация КАК Организация,
	|			СУММА(уатИзносПробегШинОбороты.ПробегОборот) КАК ПробегОборот
	|		ИЗ
	|			РегистрНакопления.уатИзносПробегШин.Обороты(
	|					,
	|					&ДатаКон,
	|					Регистратор,
	|					СерияНоменклатуры = &Шина) КАК уатИзносПробегШинОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			уатИзносПробегШинОбороты.ТС,
	|			уатИзносПробегШинОбороты.Организация,
	|			уатИзносПробегШинОбороты.СерияНоменклатуры) КАК ОбщийПробег
	|		ПО УстановленныеШины.Шины = ОбщийПробег.СерияНоменклатуры
	|			И УстановленныеШины.ТС = ОбщийПробег.ТС";
	
	ПостроительОтчета.Текст = Текст;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//  ДокументРезультат - табличный документ, формируемый отчетом
//
Процедура СформироватьОтчет(ДокументРезультат,  ПоказыватьЗаголовок = Истина, ВысотаЗаголовка = 0) Экспорт
	
	ДокументРезультат.Очистить();
	
	Макет       = ПолучитьМакет("Макет");
	Шапка=  Макет.ПолучитьОбласть("Заголовок");

	Шапка.Параметры.НазваниеОрганизации	= ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ДатаКон), "ПолноеНаименование, ЮридическийАдрес, Телефоны"); 
  	Шапка.Параметры.МодельШины			= Шина.Модель;
	Шапка.Параметры.СерийныйномерШины	= Шина.СерийныйНомер;
	Шапка.Параметры.ОбозначениеШины		= Шина.Наименование;
	ЗапроспоШине= новый запрос;
	ЗапросПоШине.Текст = 
	"ВЫБРАТЬ
	|	уатМестонахождениеТССрезПоследних.Подразделение КАК Подразделение
	|ИЗ
	|	РегистрСведений.уатАгрегатыТС.СрезПоследних(&Дата, ) КАК уатАгрегатыТССрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатМестонахождениеТС.СрезПоследних(&Дата, ) КАК уатМестонахождениеТССрезПоследних
	|		ПО уатАгрегатыТССрезПоследних.ТС = уатМестонахождениеТССрезПоследних.ТС
	|ГДЕ
	|	уатАгрегатыТССрезПоследних.СерияНоменклатуры = &СерияНоменклатуры";
	ЗапроспоШине.УстановитьПараметр("СерияНоменклатуры", Шина);
	ЗапроспоШине.УстановитьПараметр("Дата"             , ДатаКон);
	ВыборкаПоШине=ЗапроспоШине.Выполнить().Выбрать();
	Если ВЫборкапоШине.Следующий() Тогда
		Шапка.Параметры.НомерКолонны    = выборкапошине.Подразделение;
	КонецЕсли;	
	Если ЗначениеЗаполнено(Шина)Тогда
		Шапка.Параметры.ДатаПоступления	= Шина.НачалоЭксплуатации;
		Шапка.Параметры.Изготовитель	= Шина.Модель.Производитель;
	КонецЕсли;
	ДокументРезультат.Вывести(Шапка);
	
	Если ДатаКон <> '00010101000000' Тогда
		ПостроительОтчета.Параметры.Вставить("ДатаКон", КонецМесяца(ДатаКон));
	Иначе
		ПостроительОтчета.Параметры.Вставить("ДатаКон", КонецМесяца(ТекущаяДата()));
	КонецЕсли;
	
	ПостроительОтчета.Параметры.Вставить("Шина"       , Шина);
	ПостроительОтчета.Выполнить();
	
	РезультатЗапроса = ПостроительОтчета.Результат;
	
	ЗаголовокОтчета = Макет.ПолучитьОбласть("ЗаголовокОтчета");
	
	ДокументРезультат.Вывести(ЗаголовокОтчета);

    Выборка=РезультатЗапроса.Выбрать();
	
	Строка = Макет.ПолучитьОбласть("Строка");
	
	Пока Выборка.Следующий() Цикл
		Строка.Параметры.Заполнить(Выборка);
		Строка.Параметры.ПредставлениеТС=Выборка.ГосударственныйНомер+", "+Выборка.МодельТС+", "+Выборка.ИнвНомерТС;
		Строка.Параметры.ПредставлениеПериода	= Строка(Формат(ДатаКон, "ДФ=MM.yyyy")) + "г.";
		Строка.Параметры.ЗаМесяц=Выборка.ПробегЗаМесяц/1000;
		Строка.Параметры.ПробегОбщий=Выборка.ПробегОбщий/1000;
		ДокументРезультат.Вывести(Строка);
	КонецЦикла;	
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
	ДокументРезультат.Вывести(Подвал);

	
	// Ориентация страницы
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ПолеСлева = 0;
	ДокументРезультат.ПолеСправа = 0;
	
	// Присвоим имя для сохранения параметров печати табличного документа
	ДокументРезультат.ИмяПараметровПечати = "Карточка работы шины";
	ДокументРезультат.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);

	
КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Настраивает отчет по заданным параметрам (например, для расшифровки)
Процедура Настроить(СтруктураПараметров) Экспорт
	
	Параметры = Новый Соответствие;
	
	Для каждого Элемент Из СтруктураПараметров Цикл
		Параметры.Вставить(Элемент.Ключ, Элемент.Значение);
	КонецЦикла; 
	
	ДатаКон = Параметры["ДатаКон"];
	
	ЗаполнитьНачальныеНастройки();
	
	СтрокиОтбора = Параметры["Отбор"];
	
	Если ТипЗнч(СтрокиОтбора) = Тип("Соответствие")
		ИЛИ ТипЗнч(СтрокиОтбора) = Тип("Структура") Тогда
		
		Для каждого Строка Из СтрокиОтбора Цикл
			
			ЭлементОтбора = Неопределено;
			
			// Установим существующие элементы, добавим новые
			Для Инд = 0 По ПостроительОтчета.Отбор.Количество()-1 Цикл
				
				Если Строка.Ключ = ПостроительОтчета.Отбор[Инд].ПутьКДанным Тогда
					ЭлементОтбора = ПостроительОтчета.Отбор[Инд];
				КонецЕсли;
				
			КонецЦикла; 
			
			Если ЭлементОтбора = Неопределено Тогда
				
				ЭлементОтбора = ПостроительОтчета.Отбор.Добавить(Строка.Ключ);
				
			КонецЕсли; 
			ЭлементОтбора.Установить(Строка.Значение);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Получает заголовок отчета в виде строки
//
//Возвращаемое значение:
//	Строка заголовка
//
Функция ЗаголовокОтчета() Экспорт
	Возврат "Карточка учета работы автомобильной шины";
КонецФункции // ЗаголовокОтчета()


////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

// Параметры для выбора организации
Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");

#КонецЕсли
