#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	КонецЕсли;
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Описание исходного текста запроса.
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	уатТС.Ссылка КАК ТС,
	|	" + ?(уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация"), ПланыВидовХарактеристик.уатПраваИНастройки.ПредставлениеТСКакГосНомер), "уатТС.ГосударственныйНомер", "уатТС.ГаражныйНомер") + " КАК ТСПредставление,
	|	уатТС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПРЕДСТАВЛЕНИЕ(уатТС.ОсновноеСредство) КАК ОсновноеСредствоПредставление
	|{ВЫБРАТЬ
	|	уатТС.ГаражныйНомер КАК ГаражныйНомер,
	|	уатТС.ГосударственныйНомер КАК ГосударственныйНомер,
	|	уатТС.Модель КАК Модель,
	|	(ПРЕДСТАВЛЕНИЕ(уатТС.Модель)) КАК МодельПредставление,
	|	уатТС.VIN КАК VIN,
	|	уатТС.ЦветКузова КАК ЦветКузова,
	|	(ПРЕДСТАВЛЕНИЕ(уатТС.ЦветКузова)) КАК ЦветКузоваПредставление,
	|	уатТС.МощностьДвигателяЛС КАК МощностьДвигателяЛС,
	|	уатТС.НомерДвигателя КАК НомерДвигателя,
	|	уатТС.НомерКПП КАК НомерКПП,
	|	уатТС.НомерКузова КАК НомерКузова,
	|	уатТС.НомерШасси КАК НомерШасси,
	|	уатТС.ГодВыпуска КАК ГодВыпуска,
	|	уатТС.ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию,
	|	уатТС.ДатаВыбытия КАК ДатаВыбытия,
	|	уатТС.МощностьДвигателяКВт КАК МощностьДвигателяКВт,
	|	уатТС.ОсновноеУсловиеРаботы КАК ОсновноеУсловиеРаботы,
	|	уатТС.ОсновнойРежимРаботы КАК ОсновнойРежимРаботы,
	|	уатТС.ГабаритныйРазмерДлина КАК ГабаритныйРазмерДлина,
	|	уатТС.ГабаритныйРазмерВысота КАК ГабаритныйРазмерВысота,
	|	уатТС.ГабаритныйРазмерШирина КАК ГабаритныйРазмерШирина,
	|	уатТС.ПолезныйРазмерДлина КАК ПолезныйРазмерДлина,
	|	уатТС.ПолезныйРазмерВысота КАК ПолезныйРазмерВысота,
	|	уатТС.ПолезныйРазмерШирина КАК ПолезныйРазмерШирина,
	|	уатТС.НачальныйПробег КАК НачальныйПробег,
	|	уатТС.НачальнаяНаработка КАК НачальнаяНаработка,
	|	уатТС.АвтоматическиСписыватьРасходТопливаНаЗапуск КАК АвтоматическиСписыватьРасходТопливаНаЗапуск,
	|	уатТС.Гараж КАК Гараж,
	|	(ПРЕДСТАВЛЕНИЕ(уатТС.Гараж)) КАК ГаражПредставление,
	|	уатТС.Комментарий КАК Комментарий,
	|	уатТС.ЛицензионнаяКарточка КАК ЛицензионнаяКарточка,
	|	уатТС.НомерЛицензионнойКарточки КАК НомерЛицензионнойКарточки,
	|	уатТС.СерияЛицензионнойКарточки КАК СерияЛицензионнойКарточки,
	|	уатТС.ОсновнойВидПЛ КАК ОсновнойВидПЛ,
	|	уатТС.БалансоваяСтоимость КАК БалансоваяСтоимость,
	|	уатТС.СрокИспользования КАК СрокИспользования,
	|	уатТС.ОсновнойРежимРаботы КАК РежимРаботыТС,
	|	(ПРЕДСТАВЛЕНИЕ(уатТС.ОсновнойРежимРаботы)) КАК РежимРаботыТСПредставление,
	|	уатТС.КодПоКлассификатору КАК КодПоКлассификатору,
	|	(ПРЕДСТАВЛЕНИЕ(уатТС.КодПоКлассификатору)) КАК КодПоКлассификаторуПредставление,
	|	уатТС.СтавкаТранпортногоНалога КАК СтавкаТранспортногоНалога,
	|	(ПРЕДСТАВЛЕНИЕ(уатТС.СтавкаТранпортногоНалога)) КАК СтавкаТранспортногоНалогаПредставление,
	|	уатТС.НачислятьТранспортныйНалог КАК НачислятьТранспортныйНалог,
	|	уатТС.СобственныйВес КАК СобственныйВес,
	|	уатМестонахождениеТС.Колонна КАК Колонна,
	|	(ПРЕДСТАВЛЕНИЕ(уатМестонахождениеТС.Колонна)) КАК КолоннаПредставление,
	|	уатМестонахождениеТС.Организация КАК Организация,
	|	(ПРЕДСТАВЛЕНИЕ(уатМестонахождениеТС.Организация)) КАК ОрганизацияПредставление
	|}
	|ИЗ
	|	Справочник.уатТС КАК уатТС
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ТекДата, ) КАК уатМестонахождениеТС
	|ПО уатТС.Ссылка = уатМестонахождениеТС.ТС
	|{ГДЕ
	|	уатТС.Ссылка.*,
	|	уатТС.ОсновноеСредство.*,
	|	уатТС.VIN,
	|	уатТС.ГаражныйНомер,
	|	уатТС.ГосударственныйНомер,
	|	уатТС.Модель.*,
	|	уатТС.МодельДвигателя,
	|	уатТС.МощностьДвигателяЛС,
	|	уатТС.МощностьДвигателяКВт,
	|	уатТС.НомерДвигателя,
	|	уатТС.НомерКПП,
	|	уатТС.НомерКузова,
	|	уатТС.НомерШасси,
	|	уатТС.ЦветКузова.*,
	|	уатТС.ГабаритныйРазмерДлина,
	|	уатТС.ОсновноеУсловиеРаботы.*,
	|	уатТС.ОсновнойРежимРаботы,
	|	уатТС.ГабаритныйРазмерВысота,
	|	уатТС.ГабаритныйРазмерШирина,
	|	уатТС.ПолезныйРазмерДлина,
	|	уатТС.ПолезныйРазмерШирина,
	|	уатТС.НачальныйПробег,
	|	уатТС.НачальнаяНаработка,
	|	уатТС.АвтоматическиСписыватьРасходТопливаНаЗапуск,
	|	уатМестонахождениеТС.Организация.*,
	|	уатМестонахождениеТС.Колонна.*,
	|	уатТС.Гараж.*,
	|	уатТС.Комментарий,
	|	уатТС.ЛицензионнаяКарточка,
	|	уатТС.НомерЛицензионнойКарточки,
	|	уатТС.СерияЛицензионнойКарточки,
	|	уатТС.ГодВыпуска,
	|	уатТС.ДатаВводаВЭксплуатацию,
	|	уатТС.ОсновнойВидПЛ.*,
	|	уатТС.БалансоваяСтоимость,
	|	уатТС.СрокИспользования,
	|	уатТС.ОсновнойРежимРаботы.*,
	|	уатТС.КодПоКлассификатору.*,
	|	уатТС.СтавкаТранпортногоНалога.*,
	|	уатТС.НачислятьТранспортныйНалог,
	|	уатТС.СобственныйВес,
	|	уатТС.ДатаВыбытия,
	|		(ВЫБОР
	|				КОГДА уатТС.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ИСТИНА
	|				КОГДА уатТС.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ЛОЖЬ
	|			КОНЕЦ) КАК ТСВыбыло}	
	|{УПОРЯДОЧИТЬ ПО
	|	" + ?(уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация"), ПланыВидовХарактеристик.уатПраваИНастройки.ПредставлениеТСКакГосНомер), "уатТС.ГосударственныйНомер", "уатТС.ГаражныйНомер") + "}
	|ИТОГИ ПО
	|	уатМестонахождениеТС.Организация КАК Организация
	|{ИТОГИ ПО
	|	уатТС.ЦветКузова.* КАК ЦветКузова,
	|	уатМестонахождениеТС.Колонна.* КАК Колонна,
	|	ТС.* КАК ТС,
	|	ОсновноеСредство.* КАК ОсновноеСредство,
	|	уатМестонахождениеТС.Организация КАК Организация,
	|	уатТС.Гараж.* КАК Гараж,
	|	уатТС.Модель.* КАК Модель,
	|	уатТС.ТипТС.* КАК ТипТС,
	|	уатТС.Модель.ТипДвигателя.* КАК ТипДвигателя,
	|	уатТС.ОсновнойРежимРаботы.* КАК РежимРаботыТС}";
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТС", "Транспортное средство");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСПредставление", "Транспортное средство (представление)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОсновноеСредство", "Основное средство");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОсновноеСредствоПредставление", "Основное средство (представление)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ГаражныйНомер", "Гаражный номер");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ГосударственныйНомер", "Гос. номер");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Колонна", "Колонна");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КолоннаПредставление", "Колонна (представление)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Модель", "Модель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("МодельПредставление", "Модель (представление)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("VIN", "VIN");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЦветКузова", "Цвет кузова");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЦветКузоваПредставление", "Цвет кузова (представление)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("МощностьДвигателяЛС", "Мощность двигателя (л.с.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НомерДвигателя", "Номер двигателя");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НомерКПП", "Номер КПП");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НомерКузова", "Номер кузова");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НомерШасси", "Номер шасси");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ГодВыпуска", "Год выпуска");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДатаВводаВЭксплуатацию", "Дата ввода");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДатаВыбытия", "Дата выбытия");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("МощностьДвигателяКВт", "Мощность двигателя (КВт)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОсновноеУсловиеРаботы", "Основное усл. работы");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОсновнойРежимРаботы", "Основной режим работы");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ГабаритныйРазмерДлина", "Габариты - длина");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ГабаритныйРазмерВысота", "Габариты - высота");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ГабаритныйРазмерШирина", "Габариты - ширина");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПолезныйРазмерДлина", "Полезный размер - длина");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПолезныйРазмерВысота", "Полезный размер - высота");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПолезныйРазмерШирина", "Полезный размер - ширина");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НачальныйПробег", "Нач. пробег");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НачальнаяНаработка", "Нач. наработка");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("АвтоматическиСписыватьРасходТопливаНаЗапуск", "Автосписание расхода топлива на запуск");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ГаражПредставление", "Гараж (представление)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЛицензионнаяКарточка", "Лиценз. карточка");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НомерЛицензионнойКарточки", "№ лиценз. карточки");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СерияЛицензионнойКарточки", "Серия лиценз. карточки");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОсновнойВидПЛ", "Основной вид путевого листа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("БалансоваяСтоимость", "Балансовая стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СрокИспользования", "Срок использования");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("РежимРаботыТС", "Режим работы ТС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("РежимРаботыТСПредставление", "Режим работы ТС (представление)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КодПоКлассификатору", "Код классификатор");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КодПоКлассификаторуПредставление", "Код классификатор (представление)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтавкаТранспортногоНалога", "Ставка трансп. налога");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтавкаТранспортногоНалогаПредставление", "Ставка трансп. налога (представление)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НачислятьТранспортныйНалог", "Начислять трансп. налог");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СобственныйВес", "Собств. вес");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТипДвигателя", "Тип двигателя");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТипТС", "Тип ТС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСВыбыло", "ТС выбыло");	
				
	// Добавление показателей
	//УниверсальныйОтчет.ДобавитьПоказатель("Количество", "Ед. хранения", истина, "ЧЦ=15; ЧДЦ=3", "Количество",
	//	"Количество");
	//УниверсальныйОтчет.ДобавитьПоказатель("КоличествоФакт", "Ед. хранения", истина, "ЧЦ=15; ЧДЦ=3", "КоличествоФакт",
	//	"Количество фактическое");
	//УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьУпр", "Без НДС", ложь, "ЧЦ=15; ЧДЦ=2", "СтоимостьУпр",
	//	"Стоимость" + Символы.ПС + "в валюте упр. учета");
	//УниверсальныйОтчет.ДобавитьПоказатель("НДСУпр", "НДС", ложь, "ЧЦ=15; ЧДЦ=2", "СтоимостьУпр");
	//УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьСНДСУпр", "С НДС", истина, "ЧЦ=15; ЧДЦ=2", "СтоимостьУпр");
	
	УниверсальныйОтчет.мСтруктураПериодов.Вставить("ПериодПланирования", 3);
	
	УниверсальныйОтчет.мСтруктураФорматаПолей.Вставить("Цена", "ЧЦ=15; ЧДЦ=2");
	УниверсальныйОтчет.мСтруктураФорматаПолей.Вставить("БалансоваяСтоимость", "ЧЦ=15; ЧДЦ=2");
	
	// Добавление предопределенных группировок строк отчета.
	УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Очистить();
	
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Колонна");
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ЦветКузова");
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Гараж");
	
	// Добавление предопределенных отборов отчета.
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("Колонна");
	УниверсальныйОтчет.ДобавитьОтбор("Гараж");
	УниверсальныйОтчет.ДобавитьОтбор("ТСВыбыло", Истина, ВидСравнения.Равно , Ложь);	
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	//УниверсальныйОтчет.ДобавитьПолеРесурс(
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ТС", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ГаражныйНомер", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ГосударственныйНомер", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Колонна", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Гараж", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Модель", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ЦветКузова", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("VIN", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("МощностьДвигателяЛС", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("НомерДвигателя", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("НомерКПП", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("НомерКузова", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("НомерШасси", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ГодВыпуска", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаВводаВЭксплуатацию", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаВыбытия", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("БалансоваяСтоимость", ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
КонецПроцедуры // УстановитьНачальныеНастройки()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ТекДата", ТекущаяДата());
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
	ТабличныйДокумент.ФиксацияСлева = 2;

КонецПроцедуры // СформироватьОтчет()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал,
//	6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = -1;

////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

#КонецЕсли
