#Если Клиент Тогда
	
	////////////////////////////////////////////////////////////////////////////////
	// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА
	
	// Процедура установки начальных настроек отчета с использованием текста запроса
	//
	Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
		// Настройка общих параметров универсального отчета
		
		// Содержит название отчета, которое будет выводиться в шапке.
		// Тип: Строка.
		// Пример:
		// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
		УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
		
		// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
		// Тип: Булево.
		// Значение по умолчанию: Истина.
		// Пример:
		// УниверсальныйОтчет.мВыбиратьИмяРегистра = Истина;
		УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
		
		ТекстЗапроса ="ВЫБРАТЬ
		|	уатЗаявкиНаРемонтОстаткиИОбороты.Регистратор КАК Регистратор,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.Период КАК Период,
		|	НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, ДЕНЬ) КАК ПериодДень,
		|	НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, НЕДЕЛЯ) КАК ПериодНеделя,
		|	НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, ДЕКАДА) КАК ПериодДекада,
		|	НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, МЕСЯЦ) КАК ПериодМесяц,
		|	НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, КВАРТАЛ) КАК ПериодКвартал,
		|	НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
		|	НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, ГОД) КАК ПериодГод,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.Организация,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.ТС КАК ТС,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.Колонна,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.ЗаявкаНаРемонт КАК ЗаявкаНаРемонт,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.ВидОбслуживания,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	ВЫБОР
		|		КОГДА уатЗаявкиНаРемонтОстаткиИОбороты.Регистратор ССЫЛКА Документ.уатЗакрытиеЗаявокНаРемонты
		|			ТОГДА -уатЗаявкиНаРемонтОстаткиИОбороты.КоличествоОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоОборот,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	ВЫБОР
		|		КОГДА уатЗаявкиНаРемонтОстаткиИОбороты.Регистратор ССЫЛКА Документ.уатЗакрытиеЗаявокНаРемонты
		|			ТОГДА 0
		|		ИНАЧЕ уатЗаявкиНаРемонтОстаткиИОбороты.КоличествоРасход
		|	КОНЕЦ КАК КоличествоРасход
		|{ВЫБРАТЬ
		|	Регистратор.*,
		|	Организация.*,
		|	ТС.*,
		|	Колонна.*,
		|	ЗаявкаНаРемонт.*,
		|	ВидОбслуживания.*,
		|	Номенклатура.*,
		|	КоличествоНачальныйОстаток,
		|	КоличествоКонечныйОстаток,
		|	КоличествоОборот,
		|	КоличествоПриход,
		|	КоличествоРасход,
		|	Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод}
		|ИЗ
		|	РегистрНакопления.уатЗаявкиНаРемонт.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор, , ) КАК уатЗаявкиНаРемонтОстаткиИОбороты
		|{ГДЕ
		|	уатЗаявкиНаРемонтОстаткиИОбороты.Регистратор.*,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.Организация.*,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.ТС.*,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.Колонна.*,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.ЗаявкаНаРемонт.*,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.ВидОбслуживания.*,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.Номенклатура.*,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.КоличествоНачальныйОстаток,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.КоличествоКонечныйОстаток,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.КоличествоОборот,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.КоличествоПриход,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.КоличествоРасход,
		|	уатЗаявкиНаРемонтОстаткиИОбороты.Период,
		|	(НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, ДЕНЬ)) КАК ПериодДень,
		|	(НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
		|	(НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, ДЕКАДА)) КАК ПериодДекада,
		|	(НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, МЕСЯЦ)) КАК ПериодМесяц,
		|	(НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, КВАРТАЛ)) КАК ПериодКвартал,
		|	(НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, ПОЛУГОДИЕ)) КАК ПериодПолугодие,
		|	(НАЧАЛОПЕРИОДА(уатЗаявкиНаРемонтОстаткиИОбороты.Период, ГОД)) КАК ПериодГод,
		|	(ВЫБОР
		|			КОГДА уатЗаявкиНаРемонтОстаткиИОбороты.Регистратор ССЫЛКА Документ.уатЗакрытиеЗаявокНаРемонты
		|				ТОГДА -уатЗаявкиНаРемонтОстаткиИОбороты.КоличествоОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоОборот,
		|	(ВЫБОР
		|			КОГДА уатЗаявкиНаРемонтОстаткиИОбороты.Регистратор ССЫЛКА Документ.уатЗакрытиеЗаявокНаРемонты
		|				ТОГДА 0
		|			ИНАЧЕ уатЗаявкиНаРемонтОстаткиИОбороты.КоличествоРасход
		|		КОНЕЦ) КАК КоличествоРасход,
		|	(ВЫБОР
		|			КОГДА уатЗаявкиНаРемонтОстаткиИОбороты.ТС.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ИСТИНА
		|			КОГДА уатЗаявкиНаРемонтОстаткиИОбороты.ТС.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ЛОЖЬ
		|		КОНЕЦ) КАК ТСВыбыло}
		|{УПОРЯДОЧИТЬ ПО
		|	Регистратор.*,
		|	Организация.*,
		|	ТС.*,
		|	Колонна.*,
		|	ЗаявкаНаРемонт.*,
		|	ВидОбслуживания.*,
		|	Номенклатура.*,
		|	КоличествоНачальныйОстаток,
		|	КоличествоКонечныйОстаток,
		|	КоличествоОборот,
		|	КоличествоПриход,
		|	КоличествоРасход,
		|	Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод}
		|ИТОГИ
		|	СУММА(КоличествоНачальныйОстаток),
		|	СУММА(КоличествоКонечныйОстаток),
		|	СУММА(КоличествоОборот),
		|	СУММА(КоличествоПриход),
		|	СУММА(КоличествоРасход)
		|ПО
		|	ОБЩИЕ,
		|	ТС,
		|	ЗаявкаНаРемонт,
		|	Номенклатура
		|{ИТОГИ ПО
		|	Регистратор.*,
		|	Организация.*,
		|	ТС.*,
		|	Колонна.*,
		|	ЗаявкаНаРемонт.*,
		|	ВидОбслуживания.*,
		|	Номенклатура.*,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	Период,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод}";
		
		УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
		
		// Представления полей отчета.
		// Необходимо вызывать для каждого поля запроса.
		// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
		
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоНачальныйОстаток", "Начальный остаток");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКонечныйОстаток" , "Осталось выполнить");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоПриход"          , "Приход");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоРасход"          , "Выполнено");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоОборот"          , "Отменено");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЗаявкаНаРемонт"            , "Заявка на ремонт");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВидОбслуживания"           , "Вид обслуживания");
		УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСВыбыло"					 , "ТС выбыло");
		
		УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
		
		УниверсальныйОтчет.ДобавитьПоказатель("КоличествоНачальныйОстаток","Начальный остаток" , Истина,"ЧДЦ=3","План", "План");
		УниверсальныйОтчет.ДобавитьПоказатель("КоличествоПриход"		  ,"Приход"			   , Истина,"ЧДЦ=3","План", "План");
		УниверсальныйОтчет.ДобавитьПоказатель("КоличествоРасход" 		  ,"Выполнено"         , Истина,"ЧДЦ=3",);
		УниверсальныйОтчет.ДобавитьПоказатель("КоличествоОборот" 		  ,"Отменено"          , Истина,"ЧДЦ=3",);	
		УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКонечныйОстаток" ,"Осталось выполнить", Истина,"ЧДЦ=3",);
		
		
		
		// Добавление предопределенных группировок строк отчета.
		// Необходимо вызывать для каждой добавляемой группировки строки.
		// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
		//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Номенклатура");
		//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Регистратор");
		//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ЗаявкаНаРемонт");
		
		
		// Добавление предопределенных группировок колонок отчета.
		// Необходимо вызывать для каждой добавляемой группировки колонки.
		// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
		
		// Добавление предопределенных отборов отчета.
		// Необходимо вызывать для каждого добавляемого отбора.
		// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
		УниверсальныйОтчет.ДобавитьОтбор("ЗаявкаНаРемонт");
		УниверсальныйОтчет.ДобавитьОтбор("Номенклатура");
		УниверсальныйОтчет.ДобавитьОтбор("ТСВыбыло", Истина, ВидСравнения.Равно, Ложь);
		
		// Заполнение начальных настроек универсального отчета
		УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
		
		// Установка связи подчиненных и родительских полей
		// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
		
		// Добавление дополнительных полей
		// Необходимо вызывать для каждого добавляемого дополнительного поля.
		// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);
		
	КонецПроцедуры // УстановитьНачальныеНастройки()
	
	
	////////////////////////////////////////////////////////////////////////////////
	// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА
	
	// Процедура формирования отчета
	//
	Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
		
		УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
		ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
		
	КонецПроцедуры // СформироватьОтчет()
	
	
	////////////////////////////////////////////////////////////////////////////////
	// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
	
	// Процедура обработки расшифровки
	//
	Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
		
		// Дополнительные параметры в расшифровывающий отчет можно передать
		// посредством инициализации переменной "ДополнительныеПараметры".
		
		ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
		УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
		
	КонецПроцедуры // ОбработкаРасшифровки()
	
	// Формирует структуру для сохранения настроек отчета
	//
	Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
		
		УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
		уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
		
	КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()
	
	// Заполняет настройки отчета из структуры сохраненных настроек
	//
	Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
		
		уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
		Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
		
	КонецФункции // ВосстановитьНастройкиИзСтруктуры()
	
	// Содержит значение используемого режима ввода периода.
	// Тип: Число.
	// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал,
	//	6 - полугодие, 7 - год
	// Значение по умолчанию: 0
	// Пример:
	// УниверсальныйОтчет.мРежимВводаПериода = 1;
	
	
	////////////////////////////////////////////////////////////////////////////////
	// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ
	
#КонецЕсли
