#Если Клиент Тогда
	
//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА


// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	КонецЕсли;
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеПоВыработкеСотрудников.Период КАК Период,
	|	НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, ДЕНЬ) КАК ПериодДень,
	|	НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	|	НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, ДЕКАДА) КАК ПериодДекада,
	|	НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, МЕСЯЦ) КАК ПериодМесяц,
	|	НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, КВАРТАЛ) КАК ПериодКвартал,
	|	НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|	НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, ГОД) КАК ПериодГод,
	|	ДанныеПоВыработкеСотрудников.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА ДанныеПоВыработкеСотрудников.Организация ЕСТЬ NULL 
	|			ТОГДА уатСведенияОСотрудникахСрезПоследних.Организация
	|		ИНАЧЕ ДанныеПоВыработкеСотрудников.Организация
	|	КОНЕЦ КАК Организация,
	|	ДанныеПоВыработкеСотрудников.Подразделение,
	|	ДанныеПоВыработкеСотрудников.КоличествоЕздок КАК КоличествоЕздок,
	|	ДанныеПоВыработкеСотрудников.ТнКм КАК ТнКм,
	|	ДанныеПоВыработкеСотрудников.ВесГруза КАК ВесГруза,
	|	ДанныеПоВыработкеСотрудников.ПробегОбщий КАК ПробегОбщий,
	|	ДанныеПоВыработкеСотрудников.ПробегСГрузом КАК ПробегСГрузом,
	|	ДанныеПоВыработкеСотрудников.ПробегОбщий - ДанныеПоВыработкеСотрудников.ПробегСГрузом КАК ПробегПорожний,
	|	ДанныеПоВыработкеСотрудников.РасходПоНормеОборот КАК РасходПоНормеОборот,
	|	ДанныеПоВыработкеСотрудников.РасходПоФактуОборот КАК РасходПоФактуОборот,
	|	ДанныеПоВыработкеСотрудников.РасходПоНормеОборот - ДанныеПоВыработкеСотрудников.РасходПоФактуОборот КАК ЭкономияПережог,
	|	ВЫРАЗИТЬ((ДанныеПоВыработкеСотрудников.РасходПоНормеОборот - ДанныеПоВыработкеСотрудников.РасходПоФактуОборот) / ВЫБОР
	|			КОГДА ДанныеПоВыработкеСотрудников.РасходПоНормеОборот = 0
	|				ТОГДА 0.001
	|			ИНАЧЕ ДанныеПоВыработкеСотрудников.РасходПоНормеОборот
	|		КОНЕЦ * 100 КАК ЧИСЛО(10, 2)) КАК ЭкономияПережогПроценты,
	|	ДанныеПоВыработкеСотрудников.Сотрудник,
	|	уатСведенияОСотрудникахСрезПоследних.Должность,
	|	уатСведенияОСотрудникахСрезПоследних.ТабельныйНомер,
	|	уатСведенияОСотрудникахСрезПоследних.Класс,
	|	уатСведенияОСотрудникахСрезПоследних.Позывной,
	|	(ВЫБОР
	|			КОГДА ДанныеПоВыработкеСотрудников.КоличествоЕздок <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ВремяВНаряде <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ТнКм <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ВесГруза <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ПробегОбщий <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ПробегСГрузом <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ПробегОбщий - ДанныеПоВыработкеСотрудников.ПробегСГрузом <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ВремяВРаботе <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.РасходПоНормеОборот <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.РасходПоФактуОборот <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьДанныеПоСотруднику,
	|	ДанныеПоВыработкеСотрудников.ВремяВРаботеИтоги КАК ВремяВРаботеИтоги,
	|	ДанныеПоВыработкеСотрудников.ВремяВНарядеИтоги КАК ВремяВНарядеИтоги,
	|	ДанныеПоВыработкеСотрудников.ВремяВРаботе КАК ВремяВРаботе,
	|	ДанныеПоВыработкеСотрудников.ВремяВНаряде КАК ВремяВНаряде
	|{ВЫБРАТЬ
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	Регистратор.*,
	|	Организация.*,
	|	ДанныеПоВыработкеСотрудников.Колонна.*,
	|	Подразделение.*,
	|	КоличествоЕздок,
	|	ТнКм,
	|	ВесГруза,
	|	ПробегОбщий,
	|	ПробегСГрузом,
	|	РасходПоНормеОборот,
	|	РасходПоФактуОборот,
	|	ПробегПорожний,
	|	ЭкономияПережогПроценты КАК ЭкономияПережогПроценты,
	|	Сотрудник.*,
	|	Должность.*,
	|	ТабельныйНомер,
	|	Класс,
	|	Позывной,
	|	ЭкономияПережог КАК ЭкономияПережог,
	|	ВремяВРаботе,
	|	ВремяВНаряде}
	|ИЗ
	|	(ВЫБРАТЬ
	|		уатВыработкаСотрудниковОбороты.Период КАК Период,
	|		уатВыработкаСотрудниковОбороты.Регистратор КАК Регистратор,
	|		уатВыработкаСотрудниковОбороты.Организация КАК Организация,
	|		уатВыработкаСотрудниковОбороты.Колонна КАК Колонна,
	|		уатВыработкаСотрудниковОбороты.Сотрудник КАК Сотрудник,
	|		уатВыработкаСотрудниковОбороты.Подразделение КАК Подразделение,
	|		ВЫБОР
	|			КОГДА уатВыработкаСотрудниковОбороты.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.КоличествоЕздок)
	|				ТОГДА уатВыработкаСотрудниковОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КоличествоЕздок,
	|		ВЫБОР
	|			КОГДА уатВыработкаСотрудниковОбороты.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяВНаряде)
	|				ТОГДА ВЫБОР
	|						КОГДА &ВыводитьВремяВФорматеЧЧММ
	|							ТОГДА ВЫБОР
	|									КОГДА (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 > 0
	|										ТОГДА (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - 1
	|									ИНАЧЕ ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))
	|								КОНЕЦ * 60 + ВЫБОР
	|									КОГДА (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 > 0
	|										ТОГДА уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 - ((ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - 1)
	|									ИНАЧЕ уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 - (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0)))
	|								КОНЕЦ * 60
	|						ИНАЧЕ ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 2))
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВремяВНарядеИтоги,
	|		ВЫБОР
	|			КОГДА уатВыработкаСотрудниковОбороты.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ТнКм)
	|				ТОГДА уатВыработкаСотрудниковОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ТнКм,
	|		ВЫБОР
	|			КОГДА уатВыработкаСотрудниковОбороты.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВесГруза)
	|				ТОГДА уатВыработкаСотрудниковОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВесГруза,
	|		ВЫБОР
	|			КОГДА уатВыработкаСотрудниковОбороты.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ПробегОбщий)
	|				ТОГДА уатВыработкаСотрудниковОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПробегОбщий,
	|		ВЫБОР
	|			КОГДА уатВыработкаСотрудниковОбороты.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ПробегСГрузом)
	|				ТОГДА уатВыработкаСотрудниковОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПробегСГрузом,
	|		ВЫБОР
	|			КОГДА уатВыработкаСотрудниковОбороты.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяВРаботе)
	|				ТОГДА ВЫБОР
	|						КОГДА &ВыводитьВремяВФорматеЧЧММ
	|							ТОГДА ВЫБОР
	|									КОГДА (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 > 0
	|										ТОГДА (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - 1
	|									ИНАЧЕ ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))
	|								КОНЕЦ * 60 + ВЫБОР
	|									КОГДА (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 > 0
	|										ТОГДА уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 - ((ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - 1)
	|									ИНАЧЕ уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 - (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0)))
	|								КОНЕЦ * 60
	|						ИНАЧЕ ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 2))
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВремяВРаботеИтоги,
	|		0 КАК РасходПоНормеОборот,
	|		0 КАК РасходПоФактуОборот,
	|		ВЫБОР
	|			КОГДА уатВыработкаСотрудниковОбороты.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяВРаботе)
	|				ТОГДА ВЫБОР
	|						КОГДА &ВыводитьВремяВФорматеЧЧММ
	|							ТОГДА ВЫБОР
	|									КОГДА (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 > 0
	|										ТОГДА (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - 1
	|									ИНАЧЕ ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))
	|								КОНЕЦ + (ВЫРАЗИТЬ(ВЫБОР
	|										КОГДА (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 > 0
	|											ТОГДА уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 - ((ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - 1)
	|										ИНАЧЕ уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 - (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0)))
	|									КОНЕЦ * 60 / 100 КАК ЧИСЛО(15, 2)))
	|						ИНАЧЕ ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 2))
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВремяВРаботе,
	|		ВЫБОР
	|			КОГДА уатВыработкаСотрудниковОбороты.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяВНаряде)
	|				ТОГДА ВЫБОР
	|						КОГДА &ВыводитьВремяВФорматеЧЧММ
	|							ТОГДА ВЫБОР
	|									КОГДА (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 > 0
	|										ТОГДА (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - 1
	|									ИНАЧЕ ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))
	|								КОНЕЦ + (ВЫРАЗИТЬ(ВЫБОР
	|										КОГДА (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 > 0
	|											ТОГДА уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 - ((ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0))) - 1)
	|										ИНАЧЕ уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 - (ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 0)))
	|									КОНЕЦ * 60 / 100 КАК ЧИСЛО(15, 2)))
	|						ИНАЧЕ ВЫРАЗИТЬ(уатВыработкаСотрудниковОбороты.КоличествоОборот / 3600 КАК ЧИСЛО(15, 2))
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВремяВНаряде
	|	ИЗ
	|		РегистрНакопления.уатВыработкаСотрудников.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК уатВыработкаСотрудниковОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		уатРасходГСМнаТСОбороты.Период,
	|		уатРасходГСМнаТСОбороты.Регистратор,
	|		уатРасходГСМнаТСОбороты.Организация,
	|		уатРасходГСМнаТСОбороты.Регистратор.ТранспортноеСредство.Колонна,
	|		уатРасходГСМнаТСОбороты.Водитель,
	|		NULL,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		уатРасходГСМнаТСОбороты.РасходПоНормеОборот,
	|		уатРасходГСМнаТСОбороты.РасходПоФактуОборот,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.уатРасходГСМнаТС.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК уатРасходГСМнаТСОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		уатСотрудники.Ссылка,
	|		NULL,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		Справочник.уатСотрудники КАК уатСотрудники) КАК ДанныеПоВыработкеСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатСведенияОСотрудниках.СрезПоследних КАК уатСведенияОСотрудникахСрезПоследних
	|		ПО ДанныеПоВыработкеСотрудников.Сотрудник = уатСведенияОСотрудникахСрезПоследних.Сотрудник
	|			И (ВЫБОР
	|				КОГДА ДанныеПоВыработкеСотрудников.Организация ЕСТЬ NULL 
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ДанныеПоВыработкеСотрудников.Организация = уатСведенияОСотрудникахСрезПоследних.Организация
	|			КОНЕЦ)
	|{ГДЕ
	|	ДанныеПоВыработкеСотрудников.Период,
	|	(НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, ДЕНЬ)) КАК ПериодДень,
	|	(НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
	|	(НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, ДЕКАДА)) КАК ПериодДекада,
	|	(НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, МЕСЯЦ)) КАК ПериодМесяц,
	|	(НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, КВАРТАЛ)) КАК ПериодКвартал,
	|	(НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, ПОЛУГОДИЕ)) КАК ПериодПолугодие,
	|	(НАЧАЛОПЕРИОДА(ДанныеПоВыработкеСотрудников.Период, ГОД)) КАК ПериодГод,
	|	ДанныеПоВыработкеСотрудников.Регистратор.*,
	|	ДанныеПоВыработкеСотрудников.Организация.*,
	|	ДанныеПоВыработкеСотрудников.Колонна.*,
	|	ДанныеПоВыработкеСотрудников.Подразделение.*,
	|	ДанныеПоВыработкеСотрудников.КоличествоЕздок,
	|	ДанныеПоВыработкеСотрудников.ТнКм,
	|	ДанныеПоВыработкеСотрудников.ВесГруза,
	|	ДанныеПоВыработкеСотрудников.ПробегОбщий,
	|	ДанныеПоВыработкеСотрудников.ПробегСГрузом,
	|	ДанныеПоВыработкеСотрудников.РасходПоНормеОборот,
	|	ДанныеПоВыработкеСотрудников.РасходПоФактуОборот,
	|	уатСведенияОСотрудникахСрезПоследних.Должность.*,
	|	уатСведенияОСотрудникахСрезПоследних.ТабельныйНомер,
	|	ДанныеПоВыработкеСотрудников.Сотрудник.*,
	|	уатСведенияОСотрудникахСрезПоследних.Класс,
	|	уатСведенияОСотрудникахСрезПоследних.Позывной,
	|	(ВЫБОР
	|			КОГДА ДанныеПоВыработкеСотрудников.КоличествоЕздок <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ВремяВНаряде <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ТнКм <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ВесГруза <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ПробегОбщий <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ПробегСГрузом <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ПробегОбщий - ДанныеПоВыработкеСотрудников.ПробегСГрузом <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.ВремяВРаботе <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.РасходПоНормеОборот <> 0
	|					ИЛИ ДанныеПоВыработкеСотрудников.РасходПоФактуОборот <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьДанныеПоСотруднику,
	|	(ДанныеПоВыработкеСотрудников.РасходПоНормеОборот - ДанныеПоВыработкеСотрудников.РасходПоФактуОборот) КАК ЭкономияПережог,
	|	(ВЫРАЗИТЬ((ДанныеПоВыработкеСотрудников.РасходПоНормеОборот - ДанныеПоВыработкеСотрудников.РасходПоФактуОборот) / ВЫБОР
	|				КОГДА ДанныеПоВыработкеСотрудников.РасходПоНормеОборот = 0
	|					ТОГДА 0.001
	|				ИНАЧЕ ДанныеПоВыработкеСотрудников.РасходПоНормеОборот
	|			КОНЕЦ * 100 КАК ЧИСЛО(10, 2))) КАК ЭкономияПережогПроценты}
	|{УПОРЯДОЧИТЬ ПО
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	Регистратор.*,
	|	Организация.*,
	|	ДанныеПоВыработкеСотрудников.Колонна.*,
	|	Подразделение.*,
	|	КоличествоЕздок,
	|	ТнКм,
	|	ВесГруза,
	|	ПробегОбщий,
	|	ПробегСГрузом,
	|	РасходПоНормеОборот,
	|	РасходПоФактуОборот,
	|	Сотрудник.*,
	|	Должность.*,
	|	ТабельныйНомер,
	|	Класс,
	|	Позывной}
	|ИТОГИ
	|	СУММА(КоличествоЕздок),
	|	СУММА(ТнКм),
	|	СУММА(ВесГруза),
	|	СУММА(ПробегОбщий),
	|	СУММА(ПробегСГрузом),
	|	СУММА(ПробегПорожний),
	|	СУММА(РасходПоНормеОборот),
	|	СУММА(РасходПоФактуОборот),
	|	СУММА(ЭкономияПережог),
	|	ВЫРАЗИТЬ((СУММА(ДанныеПоВыработкеСотрудников.РасходПоНормеОборот) - СУММА(ДанныеПоВыработкеСотрудников.РасходПоФактуОборот)) / СУММА(ВЫБОР
	|				КОГДА ДанныеПоВыработкеСотрудников.РасходПоНормеОборот = 0
	|					ТОГДА 0.001
	|				ИНАЧЕ ДанныеПоВыработкеСотрудников.РасходПоНормеОборот
	|			КОНЕЦ) * 100 КАК ЧИСЛО(10, 2)) КАК ЭкономияПережогПроценты,
	|	СУММА(ДанныеПоВыработкеСотрудников.ВремяВРаботе) КАК ВремяВРаботеИтоги,
	|	СУММА(ДанныеПоВыработкеСотрудников.ВремяВНаряде) КАК ВремяВНарядеИтоги,
	|	ВЫБОР
	|		КОГДА &ВыводитьВремяВФорматеЧЧММ
	|			ТОГДА ВЫРАЗИТЬ(ВЫБОР
	|						КОГДА (ВЫРАЗИТЬ(СУММА(ДанныеПоВыработкеСотрудников.ВремяВРаботеИтоги) / 60 КАК ЧИСЛО(15, 0))) - СУММА(ДанныеПоВыработкеСотрудников.ВремяВРаботеИтоги) / 60 > 0
	|							ТОГДА (ВЫРАЗИТЬ(СУММА(ДанныеПоВыработкеСотрудников.ВремяВРаботеИтоги) / 60 КАК ЧИСЛО(15, 0))) - 1
	|						ИНАЧЕ ВЫРАЗИТЬ(СУММА(ДанныеПоВыработкеСотрудников.ВремяВРаботеИтоги) / 60 КАК ЧИСЛО(15, 0))
	|					КОНЕЦ + ВЫБОР
	|						КОГДА (ВЫРАЗИТЬ(СУММА(ДанныеПоВыработкеСотрудников.ВремяВРаботеИтоги) / 60 КАК ЧИСЛО(15, 0))) - СУММА(ДанныеПоВыработкеСотрудников.ВремяВРаботеИтоги) / 60 > 0
	|							ТОГДА СУММА(ДанныеПоВыработкеСотрудников.ВремяВРаботеИтоги) / 60 - ((ВЫРАЗИТЬ(СУММА(ДанныеПоВыработкеСотрудников.ВремяВРаботеИтоги) / 60 КАК ЧИСЛО(15, 0))) - 1)
	|						ИНАЧЕ СУММА(ДанныеПоВыработкеСотрудников.ВремяВРаботеИтоги) / 60 - (ВЫРАЗИТЬ(СУММА(ДанныеПоВыработкеСотрудников.ВремяВРаботеИтоги) / 60 КАК ЧИСЛО(15, 0)))
	|					КОНЕЦ * 60 / 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СУММА(ДанныеПоВыработкеСотрудников.ВремяВРаботеИтоги)
	|	КОНЕЦ КАК ВремяВРаботе,
	|	ВЫБОР
	|		КОГДА &ВыводитьВремяВФорматеЧЧММ
	|			ТОГДА ВЫРАЗИТЬ(ВЫБОР
	|						КОГДА (ВЫРАЗИТЬ(СУММА(ДанныеПоВыработкеСотрудников.ВремяВНарядеИтоги) / 60 КАК ЧИСЛО(15, 0))) - СУММА(ДанныеПоВыработкеСотрудников.ВремяВНарядеИтоги) / 60 > 0
	|							ТОГДА (ВЫРАЗИТЬ(СУММА(ДанныеПоВыработкеСотрудников.ВремяВНарядеИтоги) / 60 КАК ЧИСЛО(15, 0))) - 1
	|						ИНАЧЕ ВЫРАЗИТЬ(СУММА(ДанныеПоВыработкеСотрудников.ВремяВНарядеИтоги) / 60 КАК ЧИСЛО(15, 0))
	|					КОНЕЦ + ВЫБОР
	|						КОГДА (ВЫРАЗИТЬ(СУММА(ДанныеПоВыработкеСотрудников.ВремяВНарядеИтоги) / 60 КАК ЧИСЛО(15, 0))) - СУММА(ДанныеПоВыработкеСотрудников.ВремяВНарядеИтоги) / 60 > 0
	|							ТОГДА СУММА(ДанныеПоВыработкеСотрудников.ВремяВНарядеИтоги) / 60 - ((ВЫРАЗИТЬ(СУММА(ДанныеПоВыработкеСотрудников.ВремяВНарядеИтоги) / 60 КАК ЧИСЛО(15, 0))) - 1)
	|						ИНАЧЕ СУММА(ДанныеПоВыработкеСотрудников.ВремяВНарядеИтоги) / 60 - (ВЫРАЗИТЬ(СУММА(ДанныеПоВыработкеСотрудников.ВремяВНарядеИтоги) / 60 КАК ЧИСЛО(15, 0)))
	|					КОНЕЦ * 60 / 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СУММА(ДанныеПоВыработкеСотрудников.ВремяВНарядеИтоги)
	|	КОНЕЦ КАК ВремяВНаряде
	|ПО
	|	Регистратор,
	|	Период,
	|	Организация
	|{ИТОГИ ПО
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	Регистратор.*,
	|	Организация.*,
	|	ДанныеПоВыработкеСотрудников.Колонна.*,
	|	Подразделение.*,
	|	Сотрудник.*,
	|	Должность.*,
	|	Класс}";

	ВыводитьВремяВФорматеЧЧММ = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(глЗначениеПеременной("глТекущийПользователь"), ПланыВидовХарактеристик.уатПраваИНастройки.ФорматироватьВремяВОтчетах);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ВыводитьВремяВФорматеЧЧММ", ?(ВыводитьВремяВФорматеЧЧММ, ИСТИНА, ЛОЖЬ));	
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , 
	//                                                  <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатДТП.Заказчик", "Заказчик", "Заказчик", 
	//                                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
	//	
	//	// Добавление свойств и категорий в исходный текст запроса.
	//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	//КонецЕсли;
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
	
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Сотрудник"              , "Сотрудник");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЕстьДанныеПоСотруднику" , "Выводить только сотрудников для которых есть данные за период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТабельныйНомер"         , "Табельный номер");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЭкономияПережог"        , "Экономия / Пережог");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЭкономияПережогПроценты", "Экономия / Пережог (%)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПробегОбщий"			  , "Пробег общий");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПробегСГрузом"		  , "Пробег с грузом");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("РасходПоНормеОборот"	  , "Расход горючего (по норме)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("РасходПоФактуОборот"	  , "Расход горючего (по факту)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВесГруза"				  , "Перевезено тонн");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТнКм"					  , "Грузооборот т*км");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоЕздок"		  , "Количество ездок с грузом");

	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Сотрудник");
	
	УниверсальныйОтчет.ДобавитьПоказатель("ВремяВНаряде"           , "В наряде"                 , Истина,, "Часы"          , "Часы");
	УниверсальныйОтчет.ДобавитьПоказатель("ВремяВРаботе"           , "В работе"                 , Истина,, "Часы"          , "Часы");
	УниверсальныйОтчет.ДобавитьПоказатель("ПробегСГрузом"          , "С грузом"         	    , Истина,, "Пробег"        , "Пробег");
	УниверсальныйОтчет.ДобавитьПоказатель("ПробегПорожний"         , "Порожний"         	    , Истина,, "Пробег"        , "Пробег");
	УниверсальныйОтчет.ДобавитьПоказатель("ПробегОбщий"            , "Общий"                    , Истина,, "Пробег"        , "Пробег");
	УниверсальныйОтчет.ДобавитьПоказатель("ВесГруза"               , "Перевезено тонн"          , Истина,"ЧДЦ=3", );
	УниверсальныйОтчет.ДобавитьПоказатель("ТнКм"                   , "Грузооборот т*км"         , Истина,"ЧДЦ=3", );
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕздок"        , "Количество ездок с грузом", Истина,, );
	УниверсальныйОтчет.ДобавитьПоказатель("РасходПоНормеОборот"    , "По норме", Истина, "ЧДЦ=3", "РасходГорючего", "Расход горючего, л");
	УниверсальныйОтчет.ДобавитьПоказатель("РасходПоФактуОборот"    , "По факту", Истина, "ЧДЦ=3", "РасходГорючего", "Расход горючего, л");
	УниверсальныйОтчет.ДобавитьПоказатель("ЭкономияПережог"        , "Экономия / Пережог", Истина, "ЧДЦ=3", "РасходГорючего", "Расход горючего, л");
	УниверсальныйОтчет.ДобавитьПоказатель("ЭкономияПережогПроценты", "Экономия / Пережог (%)", Истина, "ЧДЦ=1", "РасходГорючего", "Расход горючего, л");
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	УниверсальныйОтчет.ДобавитьОтбор("Сотрудник");
	УниверсальныйОтчет.ДобавитьОтбор("ЕстьДанныеПоСотруднику",Истина,ВидСравнения.Равно,Истина);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	//УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ВыполнениеЗаказовНаТС", "ЗаказНаТС");	
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	//УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ТабельныйНомер", ТипРазмещенияРеквизитовИзмерений.Вместе);
	
	
	ЭлементУслОформления = УниверсальныйОтчет.ПостроительОтчета.УсловноеОформление.Добавить(""); 
	ЭлементУслОформления.Использование = Истина; 
	ЭлементОбласть = ЭлементУслОформления.Область.Добавить("ВремяВНаряде", "ВремяВНаряде", ТипОбластиОформления.Поле); 
	ЭлементОбласть = ЭлементУслОформления.Область.Добавить("ВремяВРаботе", "ВремяВРаботе", ТипОбластиОформления.Поле); 
	
	ЭлементОформления = ЭлементУслОформления.Оформление.Формат; 
	ЭлементОформления.Использование = Истина; 
	Если ВыводитьВремяВФорматеЧЧММ Тогда
		ЭлементОформления.Значение = "ЧДЦ=2; ЧРД=:";
	Иначе
		ЭлементОформления.Значение = "ЧДЦ=3; ЧРД=,";
	КонецЕсли;
	
	//ПутьКДанным, Размещение = Неопределено, Положение = 3
	
КонецПроцедуры // УстановитьНачальныеНастройки()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
	
КонецПроцедуры // СформироватьОтчет()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 
// 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = 0;
	
#КонецЕсли
