#Если Клиент Тогда
	
//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА


// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	КонецЕсли;
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ТС = ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка)
	|			ТОГДА ""<ТС не указано>""
	|		ИНАЧЕ ВложенныйЗапрос.ТС
	|	КОНЕЦ КАК ТС,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ТС = ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка)
	|			ТОГДА ""<ТС не указано>""
	|		ИНАЧЕ ВложенныйЗапрос.ТС.ГаражныйНомер
	|	КОНЕЦ КАК ТСГарНомер,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ТС = ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка)
	|			ТОГДА ""<ТС не указано>""
	|		ИНАЧЕ ВложенныйЗапрос.ТС.ГосударственныйНомер
	|	КОНЕЦ КАК ТСГосНомер,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.СерияНоменклатуры КАК СерияНоменклатуры,
	|	СУММА(ВложенныйЗапрос.ПробегЗаПериод) КАК ПробегЗаПериод,
	|	СУММА(ВложенныйЗапрос.ИзносЗаПериод) КАК ИзносЗаПериод,
	|	СУММА(ВложенныйЗапрос.ПробегВсего) КАК ПробегВсего,
	|	СУММА(ВложенныйЗапрос.ИзносВсего) КАК ИзносВсего,
	|	МАКСИМУМ(ВложенныйЗапрос.СерияНоменклатуры.Модель.НормаПробега) КАК НормаПробега,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВложенныйЗапрос.СерияНоменклатуры.Модель.НормаПробега) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ВложенныйЗапрос.ПробегВсего) / МАКСИМУМ(ВложенныйЗапрос.СерияНоменклатуры.Модель.НормаПробега)
	|	КОНЕЦ КАК ПроцентИспользования,
	|	уатАгрегатыТССрезПоследних.ТС КАК ТекущееТС,
	|	уатАгрегатыТССрезПоследних.СостояниеАгрегата КАК ТекущееСостояниеАгрегата,
	|	уатАгрегатыТССрезПоследних.МестоУстановки КАК ТекущееМестоУстановки,
	|	уатАгрегатыТССрезПоследних.ТС.ГосударственныйНомер КАК ТекущееТСГосНомер,
	|	уатАгрегатыТССрезПоследних.ТС.ГаражныйНомер КАК ТекущееТСГарНомер
	|{ВЫБРАТЬ
	|	ТС.*,
	|	ТСГарНомер КАК ТСГарНомер,
	|	ТСГосНомер КАК ТСГосНомер,
	|	Организация.*,
	|	СерияНоменклатуры.*,
	|	ПробегЗаПериод,
	|	ИзносЗаПериод,
	|	ПробегВсего,
	|	ИзносВсего,
	|	НормаПробега,
	|	ПроцентИспользования,
	|	ТекущееТС.*,
	|	ТекущееСостояниеАгрегата.*,
	|	ТекущееМестоУстановки.*,
	|	ТекущееТСГосНомер,
	|	ТекущееТСГарНомер}
	|ИЗ
	|	(ВЫБРАТЬ
	|		уатИзносПробегШинОбороты.ТС КАК ТС,
	|		уатИзносПробегШинОбороты.СерияНоменклатуры КАК СерияНоменклатуры,
	|		уатИзносПробегШинОбороты.Организация КАК Организация,
	|		уатИзносПробегШинОбороты.ПробегОборот КАК ПробегЗаПериод,
	|		уатИзносПробегШинОбороты.ИзносОборот КАК ИзносЗаПериод,
	|		0 КАК ПробегВсего,
	|		0 КАК ИзносВсего
	|	ИЗ
	|		РегистрНакопления.уатИзносПробегШин.Обороты(&ДатаНач, &ДатаКон, , ) КАК уатИзносПробегШинОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		уатИзносПробегШинОбороты.ТС,
	|		уатИзносПробегШинОбороты.СерияНоменклатуры,
	|		уатИзносПробегШинОбороты.Организация,
	|		0,
	|		0,
	|		уатИзносПробегШинОбороты.ПробегОборот,
	|		уатИзносПробегШинОбороты.ИзносОборот
	|	ИЗ
	|		РегистрНакопления.уатИзносПробегШин.Обороты КАК уатИзносПробегШинОбороты) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатАгрегатыТС.СрезПоследних(&ДатаКонца, ) КАК уатАгрегатыТССрезПоследних
	|		ПО ВложенныйЗапрос.СерияНоменклатуры = уатАгрегатыТССрезПоследних.СерияНоменклатуры
	|			И (уатАгрегатыТССрезПоследних.СостояниеАгрегата <> ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.Снято))
	|{ГДЕ
	|	ВложенныйЗапрос.ТС.*,
	|	ВложенныйЗапрос.ТС.ГаражныйНомер КАК ТСГарНомер,
	|	ВложенныйЗапрос.ТС.ГосударственныйНомер КАК ТСГосНомер,
	|	ВложенныйЗапрос.Организация.*,
	|	ВложенныйЗапрос.СерияНоменклатуры.*,
	|	ВложенныйЗапрос.ПробегЗаПериод,
	|	ВложенныйЗапрос.ИзносЗаПериод,
	|	ВложенныйЗапрос.ПробегВсего,
	|	ВложенныйЗапрос.ИзносВсего,
	|	уатАгрегатыТССрезПоследних.ТС.*,
	|	уатАгрегатыТССрезПоследних.СостояниеАгрегата.*,
	|	уатАгрегатыТССрезПоследних.МестоУстановки.*,
	|	уатАгрегатыТССрезПоследних.ТС.ГосударственныйНомер КАК ТСГосНомер,
	|	уатАгрегатыТССрезПоследних.ТС.ГаражныйНомер КАК ТСГарНомер,
	|	(ВЫБОР
	|			КОГДА уатАгрегатыТССрезПоследних.ТС.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			КОГДА уатАгрегатыТССрезПоследних.ТС.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ЛОЖЬ
	|		КОНЕЦ) КАК ТСВыбыло}
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ТС,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.СерияНоменклатуры,
	|	уатАгрегатыТССрезПоследних.ТС,
	|	уатАгрегатыТССрезПоследних.СостояниеАгрегата,
	|	уатАгрегатыТССрезПоследних.МестоУстановки,
	|	уатАгрегатыТССрезПоследних.ТС.ГосударственныйНомер,
	|	уатАгрегатыТССрезПоследних.ТС.ГаражныйНомер,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ТС = ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка)
	|			ТОГДА ""<ТС не указано>""
	|		ИНАЧЕ ВложенныйЗапрос.ТС.ГаражныйНомер
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ТС = ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка)
	|			ТОГДА ""<ТС не указано>""
	|		ИНАЧЕ ВложенныйЗапрос.ТС.ГосударственныйНомер
	|	КОНЕЦ
	|{УПОРЯДОЧИТЬ ПО
	|	ТС.*,
	|	ТСГарНомер КАК ТСГарНомер,
	|	ТСГосНомер КАК ТСГосНомер,
	|	Организация.*,
	|	СерияНоменклатуры.*,
	|	ПробегЗаПериод,
	|	ИзносЗаПериод,
	|	ПробегВсего,
	|	ИзносВсего,
	|	ТекущееТС.*,
	|	ТекущееСостояниеАгрегата.*,
	|	ТекущееМестоУстановки.*,
	|	ТекущееТСГосНомер,
	|	ТекущееТСГарНомер}
	|ИТОГИ
	|	ВЫБОР
	|		КОГДА СерияНоменклатуры ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ПробегЗаПериод)
	|	КОНЕЦ КАК ПробегЗаПериод,
	|	ВЫБОР
	|		КОГДА СерияНоменклатуры ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ИзносЗаПериод)
	|	КОНЕЦ КАК ИзносЗаПериод,
	|	ВЫБОР
	|		КОГДА СерияНоменклатуры ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ПробегВсего)
	|	КОНЕЦ КАК ПробегВсего,
	|	ВЫБОР
	|		КОГДА СерияНоменклатуры ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ИзносВсего)
	|	КОНЕЦ КАК ИзносВсего,
	|	ВЫБОР
	|		КОГДА СерияНоменклатуры ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ МАКСИМУМ(НормаПробега)
	|	КОНЕЦ КАК НормаПробега,
	|	ВЫБОР
	|		КОГДА СерияНоменклатуры ЕСТЬ NULL 
	|				ИЛИ МАКСИМУМ(НормаПробега) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ПробегВсего) / МАКСИМУМ(НормаПробега)
	|	КОНЕЦ КАК ПроцентИспользования
	|ПО
	|	ТС,
	|	ТСГарНомер,
	|	ТСГосНомер,
	|	Организация,
	|	СерияНоменклатуры,
	|	ТекущееТС,
	|	ТекущееСостояниеАгрегата,
	|	ТекущееМестоУстановки,
	|	ТекущееТСГосНомер,
	|	ТекущееТСГарНомер
	|{ИТОГИ ПО
	|	ТС.*,
	|	ТСГарНомер КАК ТСГарНомер,
	|	ТСГосНомер КАК ТСГосНомер,
	|	Организация.*,
	|	СерияНоменклатуры.*,
	|	ТекущееТС.*,
	|	ТекущееСостояниеАгрегата.*,
	|	ТекущееМестоУстановки.*,
	|	ТекущееТСГарНомер,
	|	ТекущееТСГосНомер}";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , 
	//                                                  <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатДТП.Заказчик", "Заказчик", "Заказчик", 
	//                                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
	//	
	//	// Добавление свойств и категорий в исходный текст запроса.
	//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	//КонецЕсли;
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
		
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
		
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТС"                      , "ТС (все поля)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГарНомер"              , "ТС (гар. номер)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГосНомер"              , "ТС (гос. номер)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТекущееТС"               , "Текущее ТС агрегата (все поля)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТекущееТСГарНомер"       , "Текущее ТС агрегата (гар. номер)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТекущееТСГосНомер"       , "Текущее ТС агрегата (гос. номер)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТекущееСостояниеАгрегата", "Текущее состояние агрегата");
 	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТекущееМестоУстановки"   , "Текущее место установки агрегата");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СерияНоменклатуры"       , "Агрегат");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСВыбыло"				   , "ТС выбыло");	
	
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ТС");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СерияНоменклатуры");

	УниверсальныйОтчет.ДобавитьПоказатель("ПробегЗаПериод", "Пробег за период", Истина,"ЧДЦ=3", , );
	УниверсальныйОтчет.ДобавитьПоказатель("ИзносЗаПериод" , "Износ за период" , Истина,"ЧДЦ=3", , );
	УниверсальныйОтчет.ДобавитьПоказатель("ПробегВсего"   , "Пробег всего"    , Истина,"ЧДЦ=3", , );
	УниверсальныйОтчет.ДобавитьПоказатель("ИзносВсего"    , "Износ всего" 	  , Истина,"ЧДЦ=3", , );
	УниверсальныйОтчет.ДобавитьПоказатель("НормаПробега", "Норма пробега"	  , Истина,"ЧДЦ=3",,,);
	УниверсальныйОтчет.ДобавитьПоказатель("ПроцентИспользования", "Коэффициент использования", Истина, "ЧДЦ=2", , , 14);

	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	УниверсальныйОтчет.ДобавитьОтбор("СерияНоменклатуры");
	УниверсальныйОтчет.ДобавитьОтбор("ТС");
	УниверсальныйОтчет.ДобавитьОтбор("ТСГосНомер", Ложь  , ВидСравнения.Содержит);
	УниверсальныйОтчет.ДобавитьОтбор("ТекущееМестоУстановки");
	УниверсальныйОтчет.ДобавитьОтбор("ТСВыбыло"  , Истина, ВидСравнения.Равно , Ложь);	
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	//УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ВыполнениеЗаказовНаТС", "ЗаказНаТС");	
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ТСГосНомер");
	
КонецПроцедуры // УстановитьНачальныеНастройки()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
	
КонецПроцедуры // СформироватьОтчет()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 
// 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = 0;
	
#КонецЕсли
