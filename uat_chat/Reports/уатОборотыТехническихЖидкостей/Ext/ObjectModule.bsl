#Если Клиент Тогда
	
//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА


// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		//уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	КонецЕсли;
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	уатРасходТехническихЖидкостейОбороты.Организация КАК Организация,
	|	уатРасходТехническихЖидкостейОбороты.ТС КАК ТС,
	|	уатРасходТехническихЖидкостейОбороты.ТС.ГосударственныйНомер КАК ТСГосНомер,
	|	уатРасходТехническихЖидкостейОбороты.ТС.ГаражныйНомер КАК ТСГарНомер,
	|	уатРасходТехническихЖидкостейОбороты.ГСМ КАК ГСМ,
	|	уатРасходТехническихЖидкостейОбороты.ВидОперации КАК ВидОперации,
	|	уатРасходТехническихЖидкостейОбороты.Водитель КАК Водитель,
	|	НАЧАЛОПЕРИОДА(уатРасходТехническихЖидкостейОбороты.Период, ДЕНЬ) КАК ПериодДень,
	|	НАЧАЛОПЕРИОДА(уатРасходТехническихЖидкостейОбороты.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	|	НАЧАЛОПЕРИОДА(уатРасходТехническихЖидкостейОбороты.Период, ДЕКАДА) КАК ПериодДекада,
	|	НАЧАЛОПЕРИОДА(уатРасходТехническихЖидкостейОбороты.Период, МЕСЯЦ) КАК ПериодМесяц,
	|	НАЧАЛОПЕРИОДА(уатРасходТехническихЖидкостейОбороты.Период, КВАРТАЛ) КАК ПериодКвартал,
	|	НАЧАЛОПЕРИОДА(уатРасходТехническихЖидкостейОбороты.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|	НАЧАЛОПЕРИОДА(уатРасходТехническихЖидкостейОбороты.Период, ГОД) КАК ПериодГод,
	|	уатРасходТехническихЖидкостейОбороты.КоличествоПриходОборот КАК КоличествоПриход,
	|	уатРасходТехническихЖидкостейОбороты.КоличествоРасходОборот КАК КоличествоРасход
	|{ВЫБРАТЬ
	|	Организация.*,
	|	ТС.*,
	|	ГСМ.*,
	|	Водитель.*,
	|	ВидОперации,
	|	КоличествоПриход,
	|	КоличествоРасход,
	|	ТСГосНомер,
	|	ТСГарНомер,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	уатРасходТехническихЖидкостейОбороты.Регистратор}
	|ИЗ
	|	РегистрНакопления.уатРасходТехническихЖидкостей.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК уатРасходТехническихЖидкостейОбороты
	|{ГДЕ
	|	уатРасходТехническихЖидкостейОбороты.Организация.*,
	|	уатРасходТехническихЖидкостейОбороты.ТС.*,
	|	уатРасходТехническихЖидкостейОбороты.ТС.ГосударственныйНомер КАК ТСГосНомер,
	|	уатРасходТехническихЖидкостейОбороты.ТС.ГаражныйНомер КАК ТСГарНомер,
	|	уатРасходТехническихЖидкостейОбороты.ГСМ.*,
	|	уатРасходТехническихЖидкостейОбороты.Водитель.*,
	|	уатРасходТехническихЖидкостейОбороты.ВидОперации,
	|	уатРасходТехническихЖидкостейОбороты.ПериодДень,
	|	уатРасходТехническихЖидкостейОбороты.ПериодНеделя,
	|	уатРасходТехническихЖидкостейОбороты.ПериодДекада,
	|	уатРасходТехническихЖидкостейОбороты.ПериодМесяц,
	|	уатРасходТехническихЖидкостейОбороты.ПериодКвартал,
	|	уатРасходТехническихЖидкостейОбороты.ПериодПолугодие,
	|	уатРасходТехническихЖидкостейОбороты.ПериодГод,
	|		(ВЫБОР
	|				КОГДА уатРасходТехническихЖидкостейОбороты.ТС.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ИСТИНА
	|				КОГДА уатРасходТехническихЖидкостейОбороты.ТС.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ЛОЖЬ
	|			КОНЕЦ) КАК ТСВыбыло}
	|{УПОРЯДОЧИТЬ ПО
	|	Организация.*,
	|	ТС.*,
	|	ГСМ.*,
	|	Водитель.*,
	|	ВидОперации,
	|	КоличествоПриход КАК КоличествоПриход,
	|	КоличествоРасход КАК КоличествоРасход,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод}
	|ИТОГИ
	|	СУММА(КоличествоПриход),
	|	СУММА(КоличествоРасход)
	|ПО
	|	Организация,
	|	ТС,
	|	ГСМ,
	|	Водитель,
	|	ВидОперации,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод
	|{ИТОГИ ПО
	|	Организация.*,
	|	ТС.*,
	|	ТСГосНомер,
	|	ТСГарНомер,
	|	ГСМ.*,
	|	Водитель.*,
	|	ВидОперации,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	Регистратор}";
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ПустаяДата",Дата('00010101'));
	// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , 
	//                                                  <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("уатДТП.Заказчик", "Заказчик", "Заказчик", 
	//                                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
	//	
	//	// Добавление свойств и категорий в исходный текст запроса.
	//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	//КонецЕсли;
	
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	Пока УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Количество() > 0 Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Удалить(УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки[0]);
		
	КонецЦикла;
	
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТС"              , "ТС / оборудование (все поля)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГарНомер"      , "ТС (гар. номер)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСГосНомер"      , "ТС (гос. номер)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Организация"     , "Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ГСМ"			   , "Тех. жидкость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоПриход", "Приход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоРасход", "Расход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТСВыбыло"		   , "ТС выбыло");
	
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	//// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ТС");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ГСМ");
	
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоПриход", "Приход", Истина,"ЧДЦ=3",,);
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоРасход", "Расход", Истина,"ЧДЦ=3",,);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("ТСВыбыло", Истина, ВидСравнения.Равно , Ложь);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	//УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ВыполнениеЗаказовНаТС", "ЗаказНаТС");	
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ТСГосНомер");
	
	ЗапросПоОрганизациям = Новый Запрос;
	ЗапросПоОрганизациям.Текст = "ВЫБРАТЬ
	|	уатПраваИНастройки.Объект КАК Организация,
	|	уатПраваИНастройки.Значение КАК ТочностьОстатковТоплива
	|ИЗ
	|	РегистрСведений.уатПраваИНастройки КАК уатПраваИНастройки
	|ГДЕ
	|	уатПраваИНастройки.Объект ССЫЛКА Справочник.Организации
	|	И уатПраваИНастройки.ПравоНастройка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.уатПраваИНастройки.ТочностьОстатковТоплива)";
	
	Организации = ЗапросПоОрганизациям.Выполнить().Выгрузить();
	Для Каждого ТекСтрока Из Организации Цикл
		ЭлементУслОформления = УниверсальныйОтчет.ПостроительОтчета.УсловноеОформление.Добавить(""); 
		ЭлементУслОформления.Использование = Истина; 
		
		ЭлементОбласть = ЭлементУслОформления.Область.Добавить("КоличествоПриход", "КоличествоПриход", ТипОбластиОформления.Поле); 
		ЭлементОбласть = ЭлементУслОформления.Область.Добавить("КоличествоРасход", "КоличествоРасход", ТипОбластиОформления.Поле); 
		
		ЭлементОтбор = ЭлементУслОформления.Отбор.Добавить("Организация","Организация","Организация"); 
		ЭлементОтбор.Использование = Истина; 
		ЭлементОтбор.ВидСравнения = ВидСравнения.Равно; 
		ЭлементОтбор.Значение = ТекСтрока.Организация;
		
		ЭлементОформления = ЭлементУслОформления.Оформление.Формат; 
		ЭлементОформления.Использование = Истина; 
		ЭлементОформления.Значение = "ЧДЦ=" + ТекСтрока.ТочностьОстатковТоплива;
	КонецЦикла;
	
КонецПроцедуры // УстановитьНачальныеНастройки()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	ТабличныйДокумент.ТолькоПросмотр = уатПраваИНастройки.уатПраво("ЗащитаПечатныхФорм", глПраваУАТ);
	
КонецПроцедуры // СформироватьОтчет()

//=================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	уатОбщегоНазначения.уатСохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	уатОбщегоНазначения.уатВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 
// 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = 0;
	
#КонецЕсли
