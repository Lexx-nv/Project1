Функция ПолучитьВебСервисDevinotele() Экспорт
	Возврат WSСсылки.уатSMSdevinotele.СоздатьWSПрокси("http://gw1.devinosms.com/WebService.asmx", "DEVINO", "DEVINOSoap");
КонецФункции

Функция ПолучитьВебСервисZanzara() Экспорт
	Возврат WSСсылки.уатSMSZanzara.СоздатьWSПрокси("http://www.zanzara.ru/", "ZanzaraSMSService", "ZanzaraSMSServiceSoap");
КонецФункции


Функция ПодключитьВебСервисSMS4B() Экспорт
	Попытка
		ОсновнойСервер = ПараметрыСеанса.уатSMSОсновнойСерверSMS4B;
	Исключение
		ОсновнойСервер = Истина;
	КонецПопытки;

	Попытка
		Если ОсновнойСервер Тогда

			ВебСервис = WSСсылки.уатSMS4B.СоздатьWSПрокси("SMS client", "WSSM", "WSSMSoap12");
		Иначе

			ВебСервис = WSСсылки.уатSMS4BРезерв.СоздатьWSПрокси("SMS client", "WSSM", "WSSMSoap12");
		КонецЕсли;
	Исключение
		Возврат Неопределено;
	КонецПопытки;

	Возврат ВебСервис;

КонецФункции





Функция ПоменятьСерверSMS4B(КодОшибкиПодкл) Экспорт
	Попытка
		ОсновнойСервер = ПараметрыСеанса.такSMSОсновнойСервер;
	Исключение
		ОсновнойСервер = Истина;
	КонецПопытки;


	КодОшибкиПодкл = Подключиться();
	Возврат Не (ОсновнойСервер = ПараметрыСеанса.уатSMSОсновнойСерверSMS4B);

КонецФункции


Функция Подключиться() Экспорт
	Отключиться();

	КодОшибки = 1;


	GMT = 0;

	ИмяКонфигурации = СтрЗаменить(Метаданные.Имя, " ", "_");
	КраткаяИнформация = СтрЗаменить(Метаданные.КраткаяИнформация, " ", "_");

	ИмяКонфигурации = ИмяКонфигурации + "(" + КраткаяИнформация + ")";

	Если СтрДлина(ИмяКонфигурации) > 425 Тогда
		ИмяКонфигурации = Лев(ИмяКонфигурации, 425);
	КонецЕсли;
	СисИнфо = Новый СистемнаяИнформация;



	Попытка
		ИмяПользователя = Константы.уатSMSИмяПользователя.Получить();
		ПарольПользователя = Константы.уатSMSПарольПользователя.Получить();
	Исключение

		КодОшибки = - 1;
		Возврат КодОшибки;
	КонецПопытки;


	Пользователь = ИмяПользователя;
	Пароль = ПарольПользователя;


	ПараметрыСеанса.уатSMSОсновнойСерверSMS4B = Истина;
	ВебСервис = ПодключитьВебСервисSMS4B();


	Попытка
		РезультатПодключения = ВебСервис.StartSession(Пользователь, Пароль, GMT);
	Исключение
		РезультатПодключения = Неопределено;
	КонецПопытки;


	КодОшибки = РезультатПодключения;



	Если РезультатПодключения = Неопределено Или РезультатПодключения <= - 1 И РезультатПодключения >= - 19 Тогда

		ПараметрыСеанса.уатSMSОсновнойСерверSMS4B = Ложь;
		ВебСервис = ПодключитьВебСервисSMS4B();
		Попытка
			РезультатПодключения = ВебСервис.StartSession(Пользователь, Пароль, GMT);
		Исключение
			РезультатПодключения = Неопределено;
		КонецПопытки;

		КодОшибки = РезультатПодключения;

	КонецЕсли;


	Если Не (РезультатПодключения = Неопределено) Тогда

		Если РезультатПодключения < 1 Тогда
			Возврат РезультатПодключения;
		Иначе

			ПараметрыСеанса.уатSMSНомерСессииSMS4B = РезультатПодключения;
		КонецЕсли;
	Иначе

		Если КодОшибки = Неопределено Тогда
			КодОшибки = - 99999;
		КонецЕсли;
	КонецЕсли;


	Если КодОшибки > 0 Тогда
		КодОшибки = 1;
	КонецЕсли;


	Возврат КодОшибки;

КонецФункции








Функция Отключиться() Экспорт
	Перем ВебСервис;
	Если Не ЗначениеЗаполнено(ПолучитьНомерСессии()) Тогда
		Возврат Неопределено;
	КонецЕсли;
	Попытка
		ВебСервис = ПодключитьВебСервисSMS4B();

		КодОшибки = ВебСервис.CloseSession(ПолучитьНомерСессии());

		ПараметрыСеанса.уатSMSНомерСессииSMS4B = 0;
	Исключение
		КодОшибки = Неопределено;
	КонецПопытки;

	Если Не (КодОшибки = Неопределено) Тогда
		Возврат КодОшибки;
	КонецЕсли;

КонецФункции









Функция ПолучитьНомерСессии() Экспорт
	Попытка
		НомерСессии = ПараметрыСеанса.уатSMSНомерСессииSMS4B;
	Исключение
		НомерСессии = 0;
	КонецПопытки;

	Возврат НомерСессии;

КонецФункции











Функция Транслитерация(Текст) Экспорт
	СписокСоответствийТранслитерации = Новый СписокЗначений;
	СписокСоответствийТранслитерации.Добавить("а", "a");
	СписокСоответствийТранслитерации.Добавить("б", "b");
	СписокСоответствийТранслитерации.Добавить("в", "v");
	СписокСоответствийТранслитерации.Добавить("г", "g");
	СписокСоответствийТранслитерации.Добавить("д", "d");
	СписокСоответствийТранслитерации.Добавить("е", "e");
	СписокСоответствийТранслитерации.Добавить("ё", "yo");
	СписокСоответствийТранслитерации.Добавить("ж", "zh");
	СписокСоответствийТранслитерации.Добавить("з", "z");
	СписокСоответствийТранслитерации.Добавить("и", "i");
	СписокСоответствийТранслитерации.Добавить("й", "j");
	СписокСоответствийТранслитерации.Добавить("к", "k");
	СписокСоответствийТранслитерации.Добавить("л", "l");
	СписокСоответствийТранслитерации.Добавить("м", "m");
	СписокСоответствийТранслитерации.Добавить("н", "n");
	СписокСоответствийТранслитерации.Добавить("о", "o");
	СписокСоответствийТранслитерации.Добавить("п", "p");
	СписокСоответствийТранслитерации.Добавить("р", "r");
	СписокСоответствийТранслитерации.Добавить("с", "s");
	СписокСоответствийТранслитерации.Добавить("т", "t");
	СписокСоответствийТранслитерации.Добавить("у", "u");
	СписокСоответствийТранслитерации.Добавить("ф", "f");
	СписокСоответствийТранслитерации.Добавить("х", "x");
	СписокСоответствийТранслитерации.Добавить("ц", "c");
	СписокСоответствийТранслитерации.Добавить("ч", "ch");
	СписокСоответствийТранслитерации.Добавить("ш", "sh");
	СписокСоответствийТранслитерации.Добавить("щ", "w");
	СписокСоответствийТранслитерации.Добавить("ъ", "''");
	СписокСоответствийТранслитерации.Добавить("Ъ", "''");
	СписокСоответствийТранслитерации.Добавить("ы", "y");
	СписокСоответствийТранслитерации.Добавить("Ы", "Y");
	СписокСоответствийТранслитерации.Добавить("ь", "'");
	СписокСоответствийТранслитерации.Добавить("Ь", "'");
	СписокСоответствийТранслитерации.Добавить("э", "eh");
	СписокСоответствийТранслитерации.Добавить("ю", "yu");
	СписокСоответствийТранслитерации.Добавить("я", "ya");
	СписокСоответствийТранслитерации.Добавить("А", "A");
	СписокСоответствийТранслитерации.Добавить("Б", "B");
	СписокСоответствийТранслитерации.Добавить("В", "V");
	СписокСоответствийТранслитерации.Добавить("Г", "G");
	СписокСоответствийТранслитерации.Добавить("Д", "D");
	СписокСоответствийТранслитерации.Добавить("Е", "E");
	СписокСоответствийТранслитерации.Добавить("Ё", "YO");
	СписокСоответствийТранслитерации.Добавить("Ж", "ZH");
	СписокСоответствийТранслитерации.Добавить("З", "Z");
	СписокСоответствийТранслитерации.Добавить("И", "I");
	СписокСоответствийТранслитерации.Добавить("Й", "J");
	СписокСоответствийТранслитерации.Добавить("К", "K");
	СписокСоответствийТранслитерации.Добавить("Л", "L");
	СписокСоответствийТранслитерации.Добавить("М", "M");
	СписокСоответствийТранслитерации.Добавить("Н", "N");
	СписокСоответствийТранслитерации.Добавить("О", "O");
	СписокСоответствийТранслитерации.Добавить("П", "P");
	СписокСоответствийТранслитерации.Добавить("Р", "R");
	СписокСоответствийТранслитерации.Добавить("С", "S");
	СписокСоответствийТранслитерации.Добавить("Т", "T");
	СписокСоответствийТранслитерации.Добавить("У", "U");
	СписокСоответствийТранслитерации.Добавить("Ф", "F");
	СписокСоответствийТранслитерации.Добавить("Х", "X");
	СписокСоответствийТранслитерации.Добавить("Ц", "C");
	СписокСоответствийТранслитерации.Добавить("Ч", "CH");
	СписокСоответствийТранслитерации.Добавить("Ш", "SH");
	СписокСоответствийТранслитерации.Добавить("Щ", "W");
	СписокСоответствийТранслитерации.Добавить("Э", "EH");
	СписокСоответствийТранслитерации.Добавить("Ю", "YU");
	СписокСоответствийТранслитерации.Добавить("Я", "YA");
	СписокСоответствийТранслитерации.Добавить("«", "<");
	СписокСоответствийТранслитерации.Добавить("»", ">");
	СписокСоответствийТранслитерации.Добавить("№", "N");
	СписокСоответствийТранслитерации.Добавить("{", "(");
	СписокСоответствийТранслитерации.Добавить("[", "(");
	СписокСоответствийТранслитерации.Добавить("}", ")");
	СписокСоответствийТранслитерации.Добавить("]", ")");
	СписокСоответствийТранслитерации.Добавить("\", "/");
	СписокСоответствийТранслитерации.Добавить("|", "I");
	СписокСоответствийТранслитерации.Добавить("^", "'");
	СписокСоответствийТранслитерации.Добавить("_", "-");
	СписокСоответствийТранслитерации.Добавить("~", "-");
	СписокСоответствийТранслитерации.Добавить("`", "'");
	СписокСоответствийТранслитерации.Добавить(Символы.НПП, " ");

	РезультирующийТекст = "";

	ДлинаТекста = СтрДлина(Текст);

	Для Сч = 1 По ДлинаТекста Цикл

		КодСимвола = КодСимвола(Текст, Сч);

		РусскаяЗаглавная = Ложь;
		Если КодСимвола > 1039 И КодСимвола < 1072 Или КодСимвола = 1025 Тогда
			РусскаяЗаглавная = Истина;
		КонецЕсли;
		Символ = Сред(Текст, Сч, 1);

		Соответствие = СписокСоответствийТранслитерации.НайтиПоЗначению(Символ);

		Если Не (Соответствие = Неопределено) Тогда

			Символ = Соответствие.Представление;
			Если РусскаяЗаглавная Тогда
				ПервыйСимвол = Сред(Символ, 1, 1);
				Символ = СтрЗаменить(Символ, ПервыйСимвол, ВРег(ПервыйСимвол));
			КонецЕсли;
		Иначе

			Если Не Найти(" !@#$%&'""()*+,-./0123456789:;<=>?ABCDEFGIKLMNJOPQRSTUVWXYZHabcdefgiklmnjopqrstuvwxyzh" + Символы.ПС + Символы.Таб + Символы.ВК, Символ) Тогда
				Символ = "?";
			КонецЕсли;
		КонецЕсли;

		РезультирующийТекст = РезультирующийТекст + Символ;

	КонецЦикла;

	Возврат РезультирующийТекст;

КонецФункции




















































Функция ОтправитьСообщенияИспользуемымСервисом(СписокСообщений, НомерОтправителя, ТекстСообщенияПоУмолчанию = "", _ДатаОтправки, _Актуальность = '00010101000000', НачалоПериодаЗапрета = '00010101000000', КонецПериодаЗапрета = '00010101000000', РавномернаяРассылка = Ложь) Экспорт
	Если Константы.уатSMSИспользуемыйСервис.Получить() = Перечисления.уатSMSСервисыСМС.SMS4B Тогда
		Возврат уатЗащищенныеФункцииСервер.ОтправитьСообщенияSMS4B(СписокСообщений, НомерОтправителя, ТекстСообщенияПоУмолчанию, _ДатаОтправки, _Актуальность, НачалоПериодаЗапрета, КонецПериодаЗапрета, РавномернаяРассылка);
	ИначеЕсли Константы.уатSMSИспользуемыйСервис.Получить() = Перечисления.уатSMSСервисыСМС.Zanzara Тогда
		Возврат уатЗащищенныеФункцииСервер.ОтправитьСообщенияZanzara(СписокСообщений, НомерОтправителя, ТекстСообщенияПоУмолчанию, _ДатаОтправки, _Актуальность, НачалоПериодаЗапрета, КонецПериодаЗапрета, РавномернаяРассылка);
	ИначеЕсли Константы.уатSMSИспользуемыйСервис.Получить() = Перечисления.уатSMSСервисыСМС.Devinotele Тогда
		Возврат уатЗащищенныеФункцииСервер.ОтправитьСообщенияDevinotele(СписокСообщений, НомерОтправителя, ТекстСообщенияПоУмолчанию, _ДатаОтправки, _Актуальность, НачалоПериодаЗапрета, КонецПериодаЗапрета, РавномернаяРассылка);
	КонецЕсли;

КонецФункции









Функция Использовать7БитСообщение(Сообщение) Экспорт
	ДлинаСообщения = СтрДлина(Сообщение);
	Результат = 0;
	Для К = 1 По ДлинаСообщения Цикл
		ТекСимвол = Сред(Сообщение, К, 1);
		Если ТекСимвол = "@" Тогда
			Продолжить;
		ИначеЕсли ТекСимвол = "$" Тогда
			Продолжить;
		ИначеЕсли КодСимвола(ТекСимвол, 1) > 122 Тогда
			Результат = 1;
			Прервать;
		ИначеЕсли КодСимвола(ТекСимвол, 1) > 96 Тогда
			Продолжить;
		ИначеЕсли КодСимвола(ТекСимвол, 1) > 91 Тогда
			Результат = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции














Функция СтрокуВШестнадцатеричноеПредставление(ТекстСообщения, ТипКодировки) Экспорт
	СтрокаЗнаков = "";
	Если ТипКодировки = 1 Тогда
		ДлинаКодаСимвола = 4;
	Иначе
		ДлинаКодаСимвола = 2;
	КонецЕсли;
	Для К = 1 По СтрДлина(ТекстСообщения) Цикл
		СтрокаЗнаков = СтрокаЗнаков + ДополнитьСтроку(ДесятичноеВШестнадцатеричное(КодСимвола(Сред(ТекстСообщения, К, 1), 1)), ДлинаКодаСимвола, "0");
	КонецЦикла;
	Возврат СтрокаЗнаков;
КонецФункции









Функция ДесятичноеВШестнадцатеричное(Знач _Число) Экспорт
	База = 16;
	Результат = "";
	Пока _Число <> 0 Цикл
		Поз = _Число % База;
		Результат = Сред("0123456789ABCDEF", Поз + 1, 1) + Результат;
		_Число = Цел(_Число / База);
	КонецЦикла;
	Возврат Результат;
КонецФункции











Функция ДополнитьСтроку(Знач Стр, Длина, Чем = " ") Экспорт
	СимволовДополнить = Длина - СтрДлина(Стр);
	Добавок = "";
	Для Н = 1 По СимволовДополнить Цикл
		Добавок = Добавок + Чем;
	КонецЦикла;
	Возврат Добавок + Стр;
КонецФункции

Функция ДоступнаСистемаСМС() Экспорт
	Возврат Константы.уатSMSИспользовать.Получить() = Истина И (РольДоступна("уатSMS") Или РольДоступна("уатSMSОтправка") Или РольДоступна("уатАдминистратор"));
КонецФункции











Функция УбратьЛишниеСимволыТелефона(Телефон) Экспорт
	ДлинаНомера = СтрДлина(Телефон);
	НовыйТелефон = "";
	Для а = 1 По ДлинаНомера Цикл
		Симв = Сред(Телефон, а, 1);
		КодСимвола = КодСимвола(Симв, 1);
		Если КодСимвола < 58 И КодСимвола > 47 Тогда
			НовыйТелефон = НовыйТелефон + Симв;
		КонецЕсли;
	КонецЦикла;

	Если Не ПустаяСтрока(НовыйТелефон) Тогда
		Если СтрДлина(НовыйТелефон) > 7 Тогда
			Если Лев(НовыйТелефон, 1) = "8" Тогда
				НовыйТелефон = "7" + Сред(НовыйТелефон, 2, СтрДлина(НовыйТелефон));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат НовыйТелефон;
КонецФункции







Функция ПолучитьНомерТелефонаОбъектаДляСМС(Объект) Экспорт
	Перем СписокВидовТелефонов;
	СписокВидовТелефонов = уатSMS.ПолучитьСписокВидовТелефоновДляСМС();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("СписокВидовТелефонов", СписокВидовТелефонов);
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	КонтактнаяИнформация.Представление КАК НомерТелефона
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид В(&СписокВидовТелефонов)";

	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда Возврат Неопределено; КонецЕсли;

	Выборка = РезультатЗапроса.Выгрузить();

	Возврат Выборка[0].НомерТелефона;

КонецФункции







Функция ПолучитьНомераТелефоновОбъектаДляСМС(Объект, СписокВидовКИ = Неопределено) Экспорт
	Перем СписокВидовТелефонов;
	Если СписокВидовКИ = Неопределено Тогда
		СписокВидовТелефонов = ПолучитьСписокВидовТелефоновДляСМС();
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("СписокВидовТелефонов", СписокВидовТелефонов);
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ
	|	КонтактнаяИнформация.Представление КАК НомерТелефона
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид В(&СписокВидовТелефонов)";

	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		мТаб = Новый ТаблицаЗначений;
		мТаб.Колонки.Добавить("НомерТелефона");
		НовСтрока = мТаб.Добавить();
		НовСтрока.НомерТелефона = "";
		Возврат мТаб;
	КонецЕсли;

	Возврат РезультатЗапроса.Выгрузить();

КонецФункции



Функция ПолучитьСписокВидовТелефоновДляСМС() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Ссылка
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|ГДЕ
	|	(НЕ ВидыКонтактнойИнформации.ПометкаУдаления)
	|	И ВидыКонтактнойИнформации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|	И (ВидыКонтактнойИнформации.Наименование ПОДОБНО ""%мобил%""
	|			ИЛИ ВидыКонтактнойИнформации.Наименование ПОДОБНО ""%сотов%"")";

	СписокВидовТелефонов = Новый СписокЗначений;
	СписокВидовТелефонов.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));

	Возврат СписокВидовТелефонов;

КонецФункции




