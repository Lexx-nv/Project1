
// Выполняет скрипт на поле HTML, с учетом вида браузера
//
Функция ВыполнитьСкриптНаПолеHTML(ПолеHTML, Знач ТекстСкрипта) Экспорт
	
	СисИнфо = Новый СистемнаяИнформация;
	
	ТекстСкрипта = 
		"try {
		|"+ТекстСкрипта+"
		|} catch(err) {}";
		
	Попытка
	
		Если Найти(СисИнфо.ИнформацияПрограммыПросмотра, "Firefox") <> 0
			ИЛИ Найти(СисИнфо.ИнформацияПрограммыПросмотра, "Chrome") <> 0 Тогда
			
			//tagString = "<script type=""text/javascript"">
			//			|try {
			//			|"+ТекстСкрипта+"				
			//			|} catch(err) {}
			//			|</script>";	
			
			//range = ПолеHTML.Документ.createRange();
			//range.selectNode(ПолеHTML.Документ.getElementsByTagName("div").item(0));
			//documentFragment = range.createContextualFragment(tagString);
			//ПолеHTML.Документ.body.appendChild(documentFragment);
			
			tag = ПолеHTML.Документ.createElement("script");
			tag.type = "text/javascript";
			tag.text = ТекстСкрипта;
			ПолеHTML.Документ.getElementsByTagName("head").item(0).appendChild(tag);
			
		Иначе		
			
			ПолеHTML.Документ.parentWindow.execScript(ТекстСкрипта);
			
		КонецЕсли;		
	
	Исключение
	
	КонецПопытки;		

КонецФункции // ВыполнитьСкриптНаПолеHTML()

// Проверка доступности сервера CsmSvc
// При этом заправшивается тестовая страница по протоколу HTTP
//
// Параметры
//   АдресСервера  - Адрес сервера в формате <IP>:<Порт>, или <DNS имя>:<Порт>
//
// Возвращаемое значение:
//   Булево   - Истина если доступен, Ложь если не доступен
//
Функция ПроверитьДоступностьСервисаCsmSvc(АдресСервера) Экспорт
	
	#Если ВебКлиент Тогда
		
	// Запрашиваем данные на сервере	
	Возврат ItobОперативныйМониторинг.ПроверитьДоступностьСервисаCsmSvc(АдресСервера);	
		
	#Иначе	
	
	ПозицияДвТч = Найти(АдресСервера,":"); 
	Если ПозицияДвТч > 0 Тогда
		ИмяСервера = Лев(АдресСервера, ПозицияДвТч-1);
		Порт = Число(Сред(АдресСервера, ПозицияДвТч+1));
		
	Иначе
		ИмяСервера = АдресСервера;
		Порт = 80;
	
	КонецЕсли;
	
	Соединение = Новый HTTPСоединение(ИмяСервера, Порт);
	
	Попытка
		Соединение.Получить("/index.html", КаталогВременныхФайлов()+"TestRequest.html");		
		Возврат Истина;
		
	Исключение
		Возврат Ложь;
	
	КонецПопытки;
	
	#КонецЕсли	

КонецФункции // ПроверитьДоступностьСервисаCsmSvc()

// Определяет часовой пояс клиента 
Процедура ОпределениеЧасовогоПоясаСеанса() Экспорт
	
	МестноеВремяКлиента = МестноеВремя('20100101');
	РазницаВоВремени=Строка((МестноеВремяКлиента-'20100101')/(60*60));
	Знак = ?(Число(РазницаВоВремени)<0,"","+");
	МестныйЧасовойПояс="GMT"+Знак+РазницаВоВремени+":00";
	ItobОперативныйМониторинг.УстановкаЧасовогоПоясаСеанса(МестныйЧасовойПояс);

КонецПроцедуры


