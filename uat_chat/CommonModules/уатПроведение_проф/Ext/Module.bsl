//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ РЕГИСТРОВ

// Выполняет движения регистра сведений Местонахождение ТС
//
Процедура ОтразитьМестонахождениеТС(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаМестонахожденияТС = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаМестонахожденияТС;
	
	Если Отказ ИЛИ ТаблицаМестонахожденияТС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияСостояние = Движения.уатМестонахождениеТС;
	ДвиженияСостояние.Записывать = Истина;
	ДвиженияСостояние.Загрузить(ТаблицаМестонахожденияТС);

КонецПроцедуры

// Выполняет движения регистра сведений Прейскуранты ТС
//
Процедура ОтразитьПрейскурантыТС(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаПрейскурантыТС = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПрейскурантыТС;
	
	Если Отказ ИЛИ ТаблицаПрейскурантыТС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияСостояние = Движения.уатПрейскурантыТС;
	ДвиженияСостояние.Записывать = Истина;
	ДвиженияСостояние.Загрузить(ТаблицаПрейскурантыТС);

КонецПроцедуры

// Выполняет движения регистра сведений Тарифы ЗП сотрудников
//
Процедура ОтразитьТарифыЗП(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаТарифыЗП = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТарифыЗП;
	
	Если Отказ ИЛИ ТаблицаТарифыЗП.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияСостояние = Движения.уатТарифыСотрудников;
	ДвиженияСостояние.Записывать = Истина;
	ДвиженияСостояние.Загрузить(ТаблицаТарифыЗП);

КонецПроцедуры

// Выполняет движения регистра накопления Движение денежных сресдств
//
Процедура ОтразитьДвижениеДДС(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	мТаблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДвижениеДС;
	
	Если Отказ ИЛИ мТаблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияВыработка = Движения.уатДвижениеДС;
	ДвиженияВыработка.Записывать = Истина;
	ДвиженияВыработка.Загрузить(мТаблица);

КонецПроцедуры

// Выполняет движения регистра накопления Выработка сотрудников
//
Процедура ОтразитьВзаиморасчетыСКонтрагентами(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	мТаблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаВзаиморасчетов;
	
	Если Отказ ИЛИ мТаблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияВыработка = Движения.уатВзаиморасчетыСКонтрагентами;
	ДвиженияВыработка.Записывать = Истина;
	ДвиженияВыработка.Загрузить(мТаблица);

КонецПроцедуры

// Выполняет движения регистра накопления Выработка сотрудников
//
Процедура ОтразитьПричиныСписанияАгрегатов(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	мТаблица = ДополнительныеСвойства.ТаблицыДляДвижений.ПричиныСписанияАгрегатов;
	
	Если Отказ ИЛИ мТаблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияВыработка = Движения.уатСписаниеАгрегатов;
	ДвиженияВыработка.Записывать = Истина;
	ДвиженияВыработка.Загрузить(мТаблица);

КонецПроцедуры

// Выполняет движения регистра накопления Заявки на расходование ДС
//
Процедура ОтразитьЗаявкиНаРасходованиеДС(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	мТаблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗаявокНаРасходованиеДС;
	
	Если Отказ ИЛИ мТаблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияВыработка = Движения.уатЗаявкиНаРасходованиеДС;
	ДвиженияВыработка.Записывать = Истина;
	ДвиженияВыработка.Загрузить(мТаблица);

КонецПроцедуры

// Выполняет движения регистра накопления Заявки на расходование ДС
//
Процедура ОтразитьКонтролируемыеЗначенияБюджетов(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	мТаблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаКонтролируемыхЗначенияБюджетов;
	
	Если Отказ ИЛИ мТаблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияВыработка = Движения.уатКонтролируемыеЗначенияБюджетов;
	ДвиженияВыработка.Записывать = Истина;
	ДвиженияВыработка.Загрузить(мТаблица);

КонецПроцедуры

// Выполняет движения регистра сведений границы периодов бюджетирования
//
Процедура ОтразитьГраницыПериодовБюджетирования(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	мТаблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаГраницПериодов;
	
	Если Отказ ИЛИ мТаблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияВыработка = Движения.уатГраницыПериодовБюджетирования;
	ДвиженияВыработка.Записывать = Истина;
	ДвиженияВыработка.Загрузить(мТаблица);

КонецПроцедуры

// Выполняет движения регистра сведений зависимости оборотов по статьям бюджетирования
//
Процедура ОтразитьЗависимостиОборотовПоСтатьямБюджетирования(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	мТаблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗависимостейОборотов;
	
	Если Отказ ИЛИ мТаблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияВыработка = Движения.уатЗависимостиОборотовПоСтатьямБюджетирования;
	ДвиженияВыработка.Записывать = Истина;
	ДвиженияВыработка.Загрузить(мТаблица);

КонецПроцедуры

// Выполняет движения регистра сведений План работы ТС
//
Процедура ОтразитьПланРаботыТС(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаПланаРаботыТС = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПланаРаботыТС;
	
	Если Отказ ИЛИ ТаблицаПланаРаботыТС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияОборотыПоЗаправкамГСМ = Движения.уатПланРаботыТС;
	ДвиженияОборотыПоЗаправкамГСМ.Записывать = Истина;
	ДвиженияОборотыПоЗаправкамГСМ.Загрузить(ТаблицаПланаРаботыТС);

КонецПроцедуры

// Выполняет движения регистра сведений зависимости оборотов по затратам по видам перевозок
//
Процедура ОтразитьЗатратыПоВидамПеревозок(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	мТаблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗатратыПоВидамПеревозок;
	
	Если Отказ ИЛИ мТаблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияВыработка = Движения.уатЗатратыПоВидамПеревозок;
	ДвиженияВыработка.Записывать = Истина;
	ДвиженияВыработка.Загрузить(мТаблица);

КонецПроцедуры
