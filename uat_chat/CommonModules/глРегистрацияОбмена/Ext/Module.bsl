 
Функция ЭтоГлавныйУзел() Экспорт
	
	 Возврат ПланыОбмена.ДИСП.ЭтотУзел().Код = "000";
	
КонецФункции
 
Функция ПроверитьВозможностьРедактированияВпереферинойБазе(Обк,Отказ=Ложь) Экспорт
	
	 //Если ЗначениеЗаполнено(ПараметрыСеанса.ксУдаленнаяБазаДляРегистрацииОбмена)=Ложь Тогда Возврат Отказ; КонецеСЛИ;
	
	
	 //Если ПараметрыСеанса.ксДатаЗапретаРедактирования >= Обк.дата ТОгда
	 //    Сообщить("Переферийная база заблокированна Датой запрета обмена! "+ПараметрыСеанса.ксДатаЗапретаРедактирования);
	 //    Отказ = Истина;
	 //ИНачеЕсли СокрЛП(Обк.ЛогБлокировкиИзЦентра) <> "" ТОгда
	 //    Сообщить("Объект "+Обк+" заблокирован из центра: "+символы.ПС+Обк.ЛогБлокировкиИзЦентра);
	 //    Отказ = Истина;
	 //КонецесЛИ;
		
	 Возврат Отказ;
	
КонецФункции

Процедура ЗаполнениеРеквизитовОбмена(Обк,Отказ) Экспорт
	 
	Если ЗначениеЗаполнено(ПараметрыСеанса.ксУдаленнаяБазаДляРегистрацииОбмена)=Ложь ТОгда Возврат; КонецЕсли;
	
	Если Обк.ОбменДанными.Загрузка = Истина ТОгда
		Возврат;
	КонецЕСЛИ;
	
	Если Обк.ЭтоНовый() ТОгда
		Обк.ИБСоздания                    = Неопределено;
		Обк.ДатаИзмененияВПереферийнойИБ  = Неопределено;
		Обк.ДатаПриемаВЦентр              = Неопределено;
		Обк.ДатаЗаписиБлокировки		  = Неопределено;
		Обк.ЛогБлокировкиИзЦентра         = "";
	КонецесЛИ;
	
	
	ПроверитьВозможностьРедактированияВпереферинойБазе(Обк,Отказ);
	
	Если Отказ Тогда Возврат; КонецесЛИ;
	
	Обк.ДатаИзмененияВПереферийнойИБ = ТекущаяДата();
	Обк.ИБСоздания = ПараметрыСеанса.ксУдаленнаяБазаДляРегистрацииОбмена;
	
	
КонецПроцедуры

Функция РедактированиеБлокировкиЦентрИнтерактивная(Обк) Экспорт
	Возврат Истина;
	
	//Для перф базы
	Если ЗначениеЗаполнено(ПараметрыСеанса.ксУдаленнаяБазаДляРегистрацииОбмена) Тогда
		Если ПроверитьВозможностьРедактированияВпереферинойБазе(Обк) Тогда
			Возврат Ложь;
		ИНаче
			Возврат Истина;
		КонецесЛИ;
		
		//Для центр базы
	ИНачеЕсли ЗначениеЗаполнено(Обк.ИБСоздания) Тогда
		
		#Если ТолстыйКлиентОбычноеПриложение Тогда
		Если Вопрос("Заблокировать докумет для редактирования в базе: "+Обк.ИБсоздания+"?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да ТОгда
			Обк.ЛогБлокировкиИзЦентра = "_"+глОбщий.ВремяМестоСобытия();
			Обк.ДатаЗаписиБлокировки  = ТекущаяДата();
			Возврат Истина;
		ИНаче
			Возврат Ложь;
		КонецЕСлИ;
		#КонецЕсли
		
	КонецЕСЛИ;
	
КонецФункции

Процедура СнятьБлокировку(Обк) Экспорт
	
	//Если ЗначениеЗаполнено(ПараметрыСеанса.ксУдаленнаяБазаДляРегистрацииОбмена) Тогда  ВозвраТ; КонецеСЛИ;
	//Если ЗначениеЗаполнено(Обк.ИБСоздания)=ложь тогда Возврат; КонецесЛИ;
	//
	//#Если ТолстыйКлиентОбычноеПриложение Тогда
	//Если Вопрос("Разрешить редактировать документ в базе "+Обк.ИБСоздания,РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да ТОгда
	//	Обк.ЛогБлокировкиИзЦентра = "";
	//	Обк.ДатаЗаписиБлокировки  = ТекущаяДата();
	//	Обк.Записать();
	//КонецеСЛИ;
	//#КонецЕсли
	
КонецПроцедуры

Функция НайтиПлан(Обк)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ксСписокОбъектовДляОбмена.План
	               |ИЗ
	               |	РегистрСведений.ксСписокОбъектовДляОбмена КАК ксСписокОбъектовДляОбмена
	               |ГДЕ
	               |	ксСписокОбъектовДляОбмена.Обк = &Обк";
				   Запрос.УстановитьПараметр("Обк",Обк);
				   Тбл = Запрос.Выполнить().Выгрузить();
				   Если Тбл.Количество()= 0 ТОгда
					   Возврат Неопределено;
				   ИНАче
					   Возврат ТБл[0].План;
					   КонецеслИ;
	
КонецФункции

Процедура ЗаписатьДляОбмена(Обк,ТС=Неопределено,Подразделение=Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыСеанса.ксУдаленнаяБазаДляРегистрацииОбмена) ТОгда
		ПланыОбмена.ЗарегистрироватьИзменения(ПланыОбмена.ДИСП.НайтиПоКоду("000"),Обк);
		Возврат;
	Конецесли;
	
	Если ЗначениеЗаполнено(Подразделение) = Ложь Тогда
		сТбл = РегистрыСведений.уатМестонахождениеТС.СрезПоследних(Обк.Дата,Новый Структура("ТС",ТС));
		Если сТбл.Количество()>0 ТОгда
			Подразделение = сТбл[0].Подразделение;
		Иначе
			Подразделение = Неопределено;
		КонецЕСЛИ;
	КонецЕСЛИ;
	
	пПлан = НайтиПлан(Подразделение);
	Если пПлан<>Неопределено ТОгда
		ПланыОбмена.ЗарегистрироватьИзменения(пПлан,Обк);
	КонецесЛИ;
	
КонецПроцедуры


Процедура ксПриЗаписиОбкдляПланаДиспПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка = Истина ТОгда Возврат; КонецЕСлИ;
	
	пТС = Неопределено;
	Мета = Источник.Метаданные().Имя;
	Если Мета = "уатЗаправкаГСМ" Тогда
		пПодр = Источник.АЗС;
	ИначеЕсли Мета = "уатРемонтныйЛист" Тогда
		пПодр = Источник.ОбъектЗатрат;
	    пТС = Источник.ТС;
	ИначеЕсли Мета = "ТабельКС" Тогда
		пПодр = Источник.Подразделение;
	ИначеЕсли Мета = "ДополнительныеНачисление" Тогда
		пПодр = Источник.Месторождение;
	    пТС = Источник.ТранспортноеСредство;
	ИначеЕсли Мета = "уатПутевойЛист" Тогда
		пПодр = Источник.Подразделение;
	    пТС = Источник.ТранспортноеСредство;
	ИначеЕсли Мета = "уатСливГСМ" Тогда
		пПодр = Источник.ТС;
	    пТС = Источник.ТС;
	ИначеЕсли Мета = "РеестрНаПеревозку" И Не ЭтоГлавныйУзел() Тогда
		пПодр = Неопределено;
	    пТС = Неопределено;
	ИНАче
		Возврат;
	КонецеСлИ;
	
	
	ЗаписатьДляОбмена(Источник,пТс,пПодр);
	
КонецПроцедуры

