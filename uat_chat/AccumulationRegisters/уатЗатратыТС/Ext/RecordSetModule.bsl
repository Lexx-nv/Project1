Перем мПериод          Экспорт; // Период движений

Перем ДокументОбъект Экспорт; //Документ, осуществляющий движение по регистру

Перем ТаблицаЗатрат;
Перем ТаблицаЗатратПромежуточная;
Перем ТаблицаВыработкаТС;
Перем ТаблицаТС;	//Таблица ТС, по которым будем распределять затраты

Перем ВсеОК;
Перем мУчетПоОбъектамСтроительства;


Процедура ПодготовитьТаблицуЗатратПоПЛ()
	
	Перем мПланЗатрат;
	
	Сообщить("Выполняется подготовка затрат по путевым листам ..."); 
	
	Запрос = Новый Запрос;
	
	//=================================================================================
	// ГСМ
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатОстаткиГСМнаТС");
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатИзносПробегШин");
	ЭлементБлокировки = Блокировка.Добавить("РегистрРасчета.уатОсновныеНачисления");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(ДокументОбъект.Колонна) Тогда
	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА уатОстаткиГСМнаТСОбороты.Регистратор ССЫЛКА Документ.уатПутевойЛист
		|			ТОГДА уатОстаткиГСМнаТСОбороты.Регистратор.ПланЗатрат
		|		ИНАЧЕ NULL
		|	КОНЕЦ КАК ПланЗатрат,
		|	уатОстаткиГСМнаТСОбороты.Период КАК Период,
		|	уатОстаткиГСМнаТСОбороты.Регистратор КАК Регистратор,
		|	уатОстаткиГСМнаТСОбороты.ГСМ КАК ГСМ,
		|	уатОстаткиГСМнаТСОбороты.Регистратор.ТранспортноеСредство КАК ТС,
		|	уатОстаткиГСМнаТСОбороты.СтоимостьУпрРасход КАК Стоимость,
		|	уатОстаткиГСМнаТСОбороты.КоличествоРасход КАК Количество,
		|	уатМестонахождениеТССрезПоследних.Колонна
		|ИЗ
		|	РегистрНакопления.уатОстаткиГСМнаТС.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК уатОстаткиГСМнаТСОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ДатаКон, ) КАК уатМестонахождениеТССрезПоследних
		|		ПО уатОстаткиГСМнаТСОбороты.ТС = уатМестонахождениеТССрезПоследних.ТС
		|ГДЕ
		|	уатОстаткиГСМнаТСОбороты.Регистратор ССЫЛКА Документ.уатПутевойЛист";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА уатОстаткиГСМнаТСОбороты.Регистратор ССЫЛКА Документ.уатПутевойЛист
		|			ТОГДА уатОстаткиГСМнаТСОбороты.Регистратор.ПланЗатрат
		|		ИНАЧЕ NULL
		|	КОНЕЦ КАК ПланЗатрат,
		|	уатОстаткиГСМнаТСОбороты.Период КАК Период,
		|	уатОстаткиГСМнаТСОбороты.Регистратор КАК Регистратор,
		|	уатОстаткиГСМнаТСОбороты.ГСМ КАК ГСМ,
		|	уатОстаткиГСМнаТСОбороты.Регистратор.ТранспортноеСредство КАК ТС,
		|	уатОстаткиГСМнаТСОбороты.СтоимостьУпрРасход КАК Стоимость,
		|	уатОстаткиГСМнаТСОбороты.КоличествоРасход КАК Количество,
		|	уатМестонахождениеТССрезПоследних.Колонна
		|ИЗ
		|	РегистрНакопления.уатОстаткиГСМнаТС.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК уатОстаткиГСМнаТСОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ДатаКон, ) КАК уатМестонахождениеТССрезПоследних
		|		ПО уатОстаткиГСМнаТСОбороты.ТС = уатМестонахождениеТССрезПоследних.ТС
		|ГДЕ
		|	уатОстаткиГСМнаТСОбороты.Регистратор ССЫЛКА Документ.уатПутевойЛист
		|	И уатМестонахождениеТССрезПоследних.Колонна = &Колонна";
		
		
		Запрос.УстановитьПараметр("Колонна", ДокументОбъект.Колонна);
	КонецЕсли;	 
	
	//Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Расход);
	//Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ДокументОбъект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ДокументОбъект.Дата));
	мВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока мВыборкаЗапроса.Следующий() Цикл
		
		Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(мВыборкаЗапроса.ПланЗатрат) Тогда
			
			Если Не уатОбщегоНазначения.уатНайтиПланЗатрат(мПланЗатрат, ДокументОбъект.Организация, мВыборкаЗапроса.ТС, мВыборкаЗапроса.Колонна) Тогда 
				Сообщить("Для документа """ + мВыборкаЗапроса.Регистратор + """ не найден план затрат (Организация """ + ДокументОбъект.Организация
					+ """, ТС """ + уатОбщегоНазначения.уатПредставлениеТС(мВыборкаЗапроса.ТС)
					+ """, Колонна """ + мВыборкаЗапроса.Колонна + """)", СтатусСообщения.Внимание);
				Продолжить;
			КонецЕсли;
			
		Иначе
			
			мПланЗатрат = мВыборкаЗапроса.ПланЗатрат;
			
		КонецЕсли;	
		
		Для Каждого ТекСтрока Из мПланЗатрат.Затраты Цикл
			
			Если ТекСтрока.ВидЗатрат = Перечисления.уатВидыЗатрат.ГСМ Тогда
				
				мНоваяСтрока 					= ТаблицаЗатратПромежуточная.Добавить();
				мНоваяСтрока.ДокументВыпуска    = мВыборкаЗапроса.Регистратор;
				//мНоваяСтрока.Подразделение		= мВыборкаЗапроса.Подразделение;
				мНоваяСтрока.ТС					= мВыборкаЗапроса.ТС;
				мНоваяСтрока.СтатьяЗатрат		= ТекСтрока.СтатьяЗатрат;
				мНоваяСтрока.СчетЗатрат			= ТекСтрока.СчетЗатрат;
				мНоваяСтрока.Затрата			= мВыборкаЗапроса.ГСМ;
				мНоваяСтрока.Количество			= мВыборкаЗапроса.Количество;
				мНоваяСтрока.Сумма				= мВыборкаЗапроса.Стоимость;
				
			КонецЕсли
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	// теперь шины
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	уатИзносПробегШин.Период КАК Период,
	|	уатИзносПробегШин.Регистратор КАК Регистратор,
	|	уатИзносПробегШин.ТС КАК ТС,
	|	уатИзносПробегШин.СерияНоменклатуры,
	|	уатИзносПробегШин.Пробег,
	|	уатИзносПробегШин.Износ,
	|	ВЫБОР
	|		КОГДА уатИзносПробегШин.Регистратор ССЫЛКА Документ.уатПутевойЛист
	|			ТОГДА уатИзносПробегШин.Регистратор.ПланЗатрат
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ПланЗатрат,
	|	уатМестонахождениеТССрезПоследних.Колонна
	|ИЗ
	|	РегистрНакопления.уатИзносПробегШин КАК уатИзносПробегШин
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ДатаКон, ) КАК уатМестонахождениеТССрезПоследних
	|		ПО уатИзносПробегШин.ТС = уатМестонахождениеТССрезПоследних.ТС
	|ГДЕ
	|	уатИзносПробегШин.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И уатМестонахождениеТССрезПоследних.Организация = &Организация";
	
	Если Не уатОбщегоНазначения.уатЗначениеНеЗаполнено(ДокументОбъект.Колонна) Тогда
		
		Запрос.Текст = Запрос.Текст + "
		|	И уатМестонахождениеТССрезПоследних.Колонна = &Колонна";
		
		Запрос.УстановитьПараметр("Колонна", ДокументОбъект.Колонна);
	КонецЕсли;	 
	
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ДокументОбъект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ДокументОбъект.Дата));
	мВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока мВыборкаЗапроса.Следующий() Цикл
		
		Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(мВыборкаЗапроса.ПланЗатрат) Тогда
			
			Если Не уатОбщегоНазначения.уатНайтиПланЗатрат(мПланЗатрат, ДокументОбъект.Организация, мВыборкаЗапроса.ТС, мВыборкаЗапроса.Колонна) Тогда 
				Сообщить("Для документа """ + мВыборкаЗапроса.Регистратор + """ не найден план затрат (Организация """ + ДокументОбъект.Организация
					+ """, ТС """ + уатОбщегоНазначения.уатПредставлениеТС(мВыборкаЗапроса.ТС)
					+ """, Колонна """ + мВыборкаЗапроса.Колонна + """)", СтатусСообщения.Внимание);
				Продолжить;
			КонецЕсли;
			
		Иначе
			
			мПланЗатрат = мВыборкаЗапроса.ПланЗатрат;
			
		КонецЕсли;	
		
		Для Каждого ТекСтрока Из мПланЗатрат.Затраты Цикл
			
			Если ТекСтрока.ВидЗатрат = Перечисления.уатВидыЗатрат.Шины Тогда
				
				мНоваяСтрока 					= ТаблицаЗатратПромежуточная.Добавить();
				мНоваяСтрока.ДокументВыпуска    = мВыборкаЗапроса.Регистратор;
				//мНоваяСтрока.Подразделение	= мВыборкаЗапроса.Подразделение;
				мНоваяСтрока.ТС					= мВыборкаЗапроса.ТС;
				мНоваяСтрока.СтатьяЗатрат		= ТекСтрока.СтатьяЗатрат;
				мНоваяСтрока.СчетЗатрат			= ТекСтрока.СчетЗатрат;
				мНоваяСтрока.Затрата			= мВыборкаЗапроса.СерияНоменклатуры;
				мНоваяСтрока.Количество			= мВыборкаЗапроса.Пробег;
				мНоваяСтрока.Сумма				= мВыборкаЗапроса.Износ;
				
			КонецЕсли
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	// теперь з/п
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	уатОсновныеНачисления.ПериодРегистрации КАК Период,
	|	уатОсновныеНачисления.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА уатОсновныеНачисления.Регистратор ССЫЛКА Документ.уатПутевойЛист
	|			ТОГДА уатОсновныеНачисления.Регистратор.ПланЗатрат
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ПланЗатрат,
	|	уатОсновныеНачисления.Результат,
	|	уатОсновныеНачисления.Регистратор.ТранспортноеСредство КАК ТС,
	|	уатМестонахождениеТССрезПоследних.Колонна
	|ИЗ
	|	РегистрРасчета.уатОсновныеНачисления КАК уатОсновныеНачисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ДатаКон, ) КАК уатМестонахождениеТССрезПоследних
	|		ПО уатОсновныеНачисления.Регистратор.ТранспортноеСредство = уатМестонахождениеТССрезПоследних.ТС
	|ГДЕ
	|	уатОсновныеНачисления.ПериодРегистрации МЕЖДУ &ДатаНач И &ДатаКон
	|	И уатОсновныеНачисления.Регистратор.Организация = &Организация";
	
	Если Не уатОбщегоНазначения.уатЗначениеНеЗаполнено(ДокументОбъект.Колонна) Тогда
		
		Запрос.Текст = Запрос.Текст + "
		|	И уатМестонахождениеТССрезПоследних.Колонна = &Колонна";
		
		Запрос.УстановитьПараметр("Колонна", ДокументОбъект.Колонна);
	КонецЕсли;	 
	
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ДокументОбъект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ДокументОбъект.Дата));
	мВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока мВыборкаЗапроса.Следующий() Цикл
		
		Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(мВыборкаЗапроса.ПланЗатрат) Тогда
			
			Если Не уатОбщегоНазначения.уатНайтиПланЗатрат(мПланЗатрат, ДокументОбъект.Организация, мВыборкаЗапроса.ТС, мВыборкаЗапроса.Колонна) Тогда 
				Сообщить("Для документа """ + мВыборкаЗапроса.Регистратор + """ не найден план затрат (Организация """ + ДокументОбъект.Организация
					+ """, ТС """ + уатОбщегоНазначения.уатПредставлениеТС(мВыборкаЗапроса.ТС)
					+ """, Колонна """ + мВыборкаЗапроса.Колонна + """)", СтатусСообщения.Внимание);
				Продолжить;
			КонецЕсли;
			
		Иначе
			
			мПланЗатрат = мВыборкаЗапроса.ПланЗатрат;
			
		КонецЕсли;	
		
		Для Каждого ТекСтрока Из мПланЗатрат.Затраты Цикл
			
			Если ТекСтрока.ВидЗатрат = Перечисления.уатВидыЗатрат.ОплатаТруда Тогда
				
				мНоваяСтрока 					= ТаблицаЗатратПромежуточная.Добавить();
				мНоваяСтрока.ДокументВыпуска    = мВыборкаЗапроса.Регистратор;
				//мНоваяСтрока.Подразделение	= мВыборкаЗапроса.Подразделение;
				мНоваяСтрока.ТС					= мВыборкаЗапроса.ТС;
				мНоваяСтрока.СтатьяЗатрат		= ТекСтрока.СтатьяЗатрат;
				мНоваяСтрока.СчетЗатрат			= ТекСтрока.СчетЗатрат;
				мНоваяСтрока.Сумма				= мВыборкаЗапроса.Результат;
				
			КонецЕсли
			
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ПодготовитьТаблицуЗатратНаРемонт()
	
	Перем мПланЗатрат;
	
	Сообщить("Выполняется подготовка затрат по ремонтным листам и раздаточным ведомостям (выдачам расх. материалов) ..."); 
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатНоменклатураТС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	Блокировка.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	уатНоменклатураТС.Период,
	|	уатНоменклатураТС.Регистратор,
	|	уатНоменклатураТС.ТС,
	|	уатНоменклатураТС.Номенклатура,
	|	уатНоменклатураТС.Количество,
	|	уатНоменклатураТС.Стоимость,
	|	уатНоменклатураТС.СтоимостьУпр,
	|	уатНоменклатураТС.Регистратор.ПланЗатрат КАК ПланЗатрат,
	|	уатНоменклатураТС.Регистратор.Подразделение КАК Подразделение
	|ИЗ
	|	РегистрНакопления.уатНоменклатураТС КАК уатНоменклатураТС
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ДатаКон, ) КАК уатМестонахождениеТССрезПоследних
	|		ПО уатНоменклатураТС.ТС = уатМестонахождениеТССрезПоследних.ТС
	|ГДЕ
	|	уатНоменклатураТС.Период МЕЖДУ &ДатаНач И &ДатаКон";
	
	Если Не уатОбщегоНазначения.уатЗначениеНеЗаполнено(ДокументОбъект.Колонна) Тогда
		
		Запрос.Текст = Запрос.Текст + "
		|	И уатМестонахождениеТССрезПоследних.Колонна = &Колонна";
		
		Запрос.УстановитьПараметр("Колонна", ДокументОбъект.Колонна);
	КонецЕсли;	 
	
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ДокументОбъект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ДокументОбъект.Дата));
	мВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока мВыборкаЗапроса.Следующий() Цикл
		
		Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(мВыборкаЗапроса.ПланЗатрат) Тогда
			Сообщить("Для документа """ + мВыборкаЗапроса.Регистратор + """ не найден план затрат!", СтатусСообщения.Внимание);
			Продолжить;
		КонецЕсли;	
		
		Для Каждого ТекСтрока Из мВыборкаЗапроса.ПланЗатрат.Затраты Цикл
			
			Если ТекСтрока.ВидЗатрат = Перечисления.уатВидыЗатрат.Ремонт Тогда
				
				мНоваяСтрока 					= ТаблицаЗатратПромежуточная.Добавить();
				мНоваяСтрока.ДокументВыпуска    = мВыборкаЗапроса.Регистратор;
				мНоваяСтрока.Подразделение		= мВыборкаЗапроса.Подразделение;
				мНоваяСтрока.ТС					= мВыборкаЗапроса.ТС;
				мНоваяСтрока.Затрата			= мВыборкаЗапроса.Номенклатура;
				мНоваяСтрока.СчетЗатрат			= ТекСтрока.СчетЗатрат;
				мНоваяСтрока.СтатьяЗатрат		= ТекСтрока.СтатьяЗатрат;
				мНоваяСтрока.Количество			= мВыборкаЗапроса.Количество;
				мНоваяСтрока.Сумма				= мВыборкаЗапроса.Стоимость;
				
			КонецЕсли
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	// теперь з/п
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	уатОсновныеНачисления.ПериодРегистрации КАК Период,
	|	уатОсновныеНачисления.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА уатОсновныеНачисления.Регистратор ССЫЛКА Документ.уатРемонтныйЛист
	|			ТОГДА уатОсновныеНачисления.Регистратор.ПланЗатрат
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ПланЗатрат,
	|	уатОсновныеНачисления.Результат,
	|	уатОсновныеНачисления.Регистратор.ТС КАК ТС,
	|	уатМестонахождениеТССрезПоследних.Колонна
	|ИЗ
	|	РегистрРасчета.уатОсновныеНачисления КАК уатОсновныеНачисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ДатаКон, ) КАК уатМестонахождениеТССрезПоследних
	|		ПО уатОсновныеНачисления.Регистратор.ТС = уатМестонахождениеТССрезПоследних.ТС
	|ГДЕ
	|	уатОсновныеНачисления.ПериодРегистрации МЕЖДУ &ДатаНач И &ДатаКон
	|	И уатОсновныеНачисления.Регистратор.Организация = &Организация";
	
	Если Не уатОбщегоНазначения.уатЗначениеНеЗаполнено(ДокументОбъект.Колонна) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И уатМестонахождениеТССрезПоследних.Колонна = &Колонна";
		
		Запрос.УстановитьПараметр("Колонна", ДокументОбъект.Колонна);
	КонецЕсли;	 
	
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ДокументОбъект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ДокументОбъект.Дата));
	мВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока мВыборкаЗапроса.Следующий() Цикл
		Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(мВыборкаЗапроса.ПланЗатрат) Тогда
			Если Не уатОбщегоНазначения.уатНайтиПланЗатрат(мПланЗатрат, ДокументОбъект.Организация, мВыборкаЗапроса.ТС, мВыборкаЗапроса.Колонна) Тогда 
				Сообщить("Для документа """ + мВыборкаЗапроса.Регистратор + """ не найден план затрат (Организация """ + ДокументОбъект.Организация
					+ """, ТС """ + уатОбщегоНазначения.уатПредставлениеТС(мВыборкаЗапроса.ТС)
					+ """, Колонна """ + мВыборкаЗапроса.Колонна + """)", СтатусСообщения.Внимание);
				Продолжить;
			КонецЕсли;
		Иначе
			мПланЗатрат = мВыборкаЗапроса.ПланЗатрат;
		КонецЕсли;	
		
		Для Каждого ТекСтрока Из мПланЗатрат.Затраты Цикл
			Если ТекСтрока.ВидЗатрат = Перечисления.уатВидыЗатрат.ОплатаТруда Тогда
				мНоваяСтрока 					= ТаблицаЗатратПромежуточная.Добавить();
				мНоваяСтрока.ДокументВыпуска    = мВыборкаЗапроса.Регистратор;
				//мНоваяСтрока.Подразделение	= мВыборкаЗапроса.Подразделение;
				мНоваяСтрока.ТС					= мВыборкаЗапроса.ТС;
				мНоваяСтрока.СтатьяЗатрат		= ТекСтрока.СтатьяЗатрат;
				мНоваяСтрока.СчетЗатрат			= ТекСтрока.СчетЗатрат;
				мНоваяСтрока.Сумма				= мВыборкаЗапроса.Результат;
			КонецЕсли
		КонецЦикла;	
	КонецЦикла;
КонецПроцедуры

//Процедура формирует таблицу ТС, по которым будем распределять затраты 
Процедура ПодготовитьТаблицуТС()
	
	Сообщить("Выполняется подготовка таблицы ТС ......"); 
	
	Запрос = Новый Запрос;
	
	СпособРаспределенияЗатратМеждуТС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ДокументОбъект.Организация, ПланыВидовХарактеристик.уатПраваИНастройки.СпособРаспределенияЗатратМеждуТС);
	Если НЕ ЗначениеЗаполнено(СпособРаспределенияЗатратМеждуТС) тогда
		ТаблицаТС = Новый ТаблицаЗначений;
		ТаблицаТС.Колонки.Добавить("ТС");
		ТаблицаТС.Колонки.Добавить("Коэффициент");
		ТаблицаТС.Колонки.Добавить("ПараметрВыработкиРаспределенияЗатрат");
		ТаблицаТС.Колонки.Добавить("ВестиУчетЗатратПоОбъектам");
		Возврат;
	КонецЕсли;
	
	Если СпособРаспределенияЗатратМеждуТС = Перечисления.уатСпособыРаспределенияЗатрат.ПоСтоимостиТС Тогда
		//Распределять нужно пропорционально первоначальной стоимости
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	уатМестонахождениеТССрезПоследних.ТС КАК ТС,
		|	уатМестонахождениеТССрезПоследних.ТС.БалансоваяСтоимость КАК Коэффициент,
		|	уатМестонахождениеТССрезПоследних.Колонна.ПараметрВыработкиРаспределенияЗатрат КАК ПараметрВыработкиРаспределенияЗатрат,
		|	ВЫБОР
		|		КОГДА уатМестонахождениеТССрезПоследних.Колонна.ВестиУчетЗатратПоОбъектам ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ уатМестонахождениеТССрезПоследних.Колонна.ВестиУчетЗатратПоОбъектам
		|	КОНЕЦ КАК ВестиУчетЗатратПоОбъектам
		|ИЗ
		|	РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ДатаКон, ) КАК уатМестонахождениеТССрезПоследних
		|ГДЕ
		|	уатМестонахождениеТССрезПоследних.ТС.БалансоваяСтоимость <> 0
		|	И (уатМестонахождениеТССрезПоследних.ТС.ДатаВыбытия = &ПустаяДата
		|			ИЛИ уатМестонахождениеТССрезПоследних.ТС.ДатаВыбытия > &ДатаНачалаМесяца)";
		Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ДокументОбъект.Дата));
		Запрос.УстановитьПараметр("ДатаНачалаМесяца", НачалоМесяца(ДокументОбъект.Дата));
		
	ИначеЕсли СпособРаспределенияЗатратМеждуТС = Перечисления.уатСпособыРаспределенияЗатрат.ПоОбъемуВыработки Тогда
		//Распределять нужно пропорционально объему выработки
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатВыработкаТС");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();

		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	уатВыработкаОбороты.ТС КАК ТС,
		|	ВЫБОР
		|		КОГДА уатВыработкаОбороты.Колонна.ПараметрВыработкиРаспределенияЗатрат.Временный
		|			ТОГДА уатВыработкаОбороты.КоличествоОборот * уатВыработкаОбороты.Колонна.ПараметрВыработкиРаспределенияЗатрат.ВесовойКоэффициентЗатрат / 3600
		|		ИНАЧЕ уатВыработкаОбороты.КоличествоОборот * уатВыработкаОбороты.Колонна.ПараметрВыработкиРаспределенияЗатрат.ВесовойКоэффициентЗатрат
		|	КОНЕЦ КАК Коэффициент,
		|	уатВыработкаОбороты.Колонна.ПараметрВыработкиРаспределенияЗатрат КАК ПараметрВыработкиРаспределенияЗатрат,
		|	ВЫБОР
		|		КОГДА уатВыработкаОбороты.Колонна.ВестиУчетЗатратПоОбъектам ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ уатВыработкаОбороты.Колонна.ВестиУчетЗатратПоОбъектам
		|	КОНЕЦ КАК ВестиУчетЗатратПоОбъектам
		|ИЗ
		|	РегистрНакопления.уатВыработкаТС.Обороты(&ДатаНач, &ДатаКон, , Колонна.ПараметрВыработкиРаспределенияЗатрат = ПараметрВыработки) КАК уатВыработкаОбороты
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ДатаКон, ) КАК уатМестонахождениеТССрезПоследних
		|	ПО уатВыработкаОбороты.ТС = уатМестонахождениеТССрезПоследних.ТС
		|ГДЕ
		|	(уатВыработкаОбороты.ТС.ДатаВыбытия = &ПустаяДата
		|			ИЛИ уатВыработкаОбороты.ТС.ДатаВыбытия > &ДатаНачалаМесяца)";
		
		Запрос.УстановитьПараметр("ДатаНачалаМесяца", НачалоМесяца(ДокументОбъект.Дата));
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ДокументОбъект.Дата));
		Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ДокументОбъект.Дата));
		Запрос.УстановитьПараметр("Параметр_ВремяРаботы", Справочники.уатПараметрыВыработки.ВремяВРаботе);
		
	ИначеЕсли СпособРаспределенияЗатратМеждуТС = Перечисления.уатСпособыРаспределенияЗатрат.Поровну Тогда
		//Распределять нужно поровну
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	уатМестонахождениеТССрезПоследних.ТС КАК ТС,
		|	уатМестонахождениеТССрезПоследних.Колонна.ПараметрВыработкиРаспределенияЗатрат КАК ПараметрВыработкиРаспределенияЗатрат,
		|	ВЫБОР
		|		КОГДА уатМестонахождениеТССрезПоследних.Колонна.ВестиУчетЗатратПоОбъектам ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ уатМестонахождениеТССрезПоследних.Колонна.ВестиУчетЗатратПоОбъектам
		|	КОНЕЦ КАК ВестиУчетЗатратПоОбъектам
		|ИЗ
		|	РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ДатаКон, ) КАК уатМестонахождениеТССрезПоследних
		|ГДЕ
		|	(уатМестонахождениеТССрезПоследних.ТС.ДатаВыбытия = &ПустаяДата
		|			ИЛИ уатМестонахождениеТССрезПоследних.ТС.ДатаВыбытия > &ДатаНачалаМесяца)";
		
		Запрос.УстановитьПараметр("ДатаНачалаМесяца", НачалоМесяца(ДокументОбъект.Дата));
		
	КонецЕсли;	 
	
	Если Не уатОбщегоНазначения.уатЗначениеНеЗаполнено(ДокументОбъект.Колонна) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И уатМестонахождениеТССрезПоследних.Колонна = &Колонна";
		
		Запрос.УстановитьПараметр("Колонна", ДокументОбъект.Колонна);
	КонецЕсли;	 
	
	Запрос.Текст = Запрос.Текст + "
	|	И уатМестонахождениеТССрезПоследних.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ДокументОбъект.Дата));
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	
	ТаблицаТС = Запрос.Выполнить().Выгрузить();
	
	// если распределение поровну, то добавим колонку "Коэффициент"
	Если СпособРаспределенияЗатратМеждуТС = Перечисления.уатСпособыРаспределенияЗатрат.Поровну Тогда
		мОбщееКоличествоТС = ТаблицаТС.Количество();
		Если мОбщееКоличествоТС = 0 Тогда
			мКоэффициент = 0;
		Иначе	
			мКоэффициент = 1 / ТаблицаТС.Количество();
		КонецЕсли;	
		
		ТаблицаТС.Колонки.Добавить("Коэффициент");
		ТаблицаТС.ЗаполнитьЗначения(мКоэффициент, "Коэффициент");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьТаблицуКосвенныхЗатрат()
	
	Попытка
		мОбщийКоэффициент 	= ТаблицаТС.Итог("Коэффициент");
	Исключение
		мОбщийКоэффициент = 0;
	КонецПопытки;	
	
	Сообщить("Выполняется распределение косвенных затрат ......");
	
	Если мОбщийКоэффициент = 0 Тогда
		
		СпособРаспределенияЗатратМеждуТС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ДокументОбъект.Организация, ПланыВидовХарактеристик.уатПраваИНастройки.СпособРаспределенияЗатратМеждуТС);		
		Если СпособРаспределенияЗатратМеждуТС = Перечисления.уатСпособыРаспределенияЗатрат.ПоСтоимостиТС Тогда
			
			Сообщить("Невозможно распределить косвенные затраты, т.к. у всех ТС нулевая балансовая стоимость!");
			
		ИначеЕсли СпособРаспределенияЗатратМеждуТС = Перечисления.уатСпособыРаспределенияЗатрат.ПоОбъемуВыработки Тогда
			
			Сообщить("Невозможно распределить косвенные затраты, т.к. у всех ТС нулевой объем выработки!");
			
		ИначеЕсли СпособРаспределенияЗатратМеждуТС = Перечисления.уатСпособыРаспределенияЗатрат.Поровну Тогда
			
			Сообщить("Невозможно распределить косвенные затраты, т.к. незаполнен список использующихся ТС!");
			
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;	
	
	//сформируем таблицу с затратами по ТС
	Для Каждого ТекСтрокаЗатраты Из ДокументОбъект.КосвенныеЗатраты Цикл
		
		мОбщаяСуммаПоСтатье = ТекСтрокаЗатраты.Сумма;
		
		Для Каждого ТекСтрокаТС Из ТаблицаТС Цикл
			
			Попытка
				мСумма	= ТекСтрокаЗатраты.Сумма * ТекСтрокаТС.Коэффициент / мОбщийКоэффициент;
			Исключение
				мСумма = 0;
			КонецПопытки;	
			
			Если мСумма <> 0 Тогда
				мНоваяСтрока 				= ТаблицаЗатратПромежуточная.Добавить();
				мНоваяСтрока.ТС				= ТекСтрокаТС.ТС;
				мНоваяСтрока.СчетЗатрат		= ТекСтрокаЗатраты.СчетЗатрат;
				мНоваяСтрока.СтатьяЗатрат	= ТекСтрокаЗатраты.СтатьяЗатрат;
				мНоваяСтрока.Сумма			= мСумма;
			КонецЕсли;	
			
			мОбщаяСуммаПоСтатье = мОбщаяСуммаПоСтатье - мСумма;
		КонецЦикла;	
		
		Если мОбщаяСуммаПоСтатье <> 0 И мНоваяСтрока <> Неопределено Тогда
			
			мНоваяСтрока.Сумма = мНоваяСтрока.Сумма + мОбщаяСуммаПоСтатье;
			
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

Процедура ПодготовитьТаблицуИзносТС()
	
	Сообщить("Выполняется подготовка таблицы с износом ТС......");
	
	//сформируем таблицу с затратами по ТС
	Для Каждого ТекСтрокаИзнос Из ДокументОбъект.ИзносТС Цикл
		
		Если ТекСтрокаИзнос.Сумма <> 0 Тогда
			
			мНоваяСтрока 				= ТаблицаЗатратПромежуточная.Добавить();
			мНоваяСтрока.ТС				= ТекСтрокаИзнос.ТС;
			мНоваяСтрока.СчетЗатрат		= ТекСтрокаИзнос.СчетЗатрат;
			мНоваяСтрока.СтатьяЗатрат	= ТекСтрокаИзнос.СтатьяЗатрат;
			мНоваяСтрока.Затрата		= ТекСтрокаИзнос.ТС;
			мНоваяСтрока.Сумма			= ТекСтрокаИзнос.Сумма;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РаспределитьЗатратыВнутриТС()
	
	ЗапросВыработкаТСДляПЛ = Новый Запрос;
	
	Сообщить("Выполняется распределение затрат между объектами ......"); 
	
	//распределяем затраты внутри ТС между заказами и объектами стр-ва
	Для Каждого ТекСтрокаТС Из ТаблицаТС Цикл
		
		мСтрокиТаблицы = ТаблицаЗатратПромежуточная.НайтиСтроки(Новый Структура("ТС", ТекСтрокаТС.ТС));
		
		//отфильтровали строки для текущего ТС
		Для мСч = 0 По мСтрокиТаблицы.Количество() - 1 Цикл
			
			ТекСтрокаЗатратыТС = мСтрокиТаблицы[мСч];
			
			Если Не ТекСтрокаТС.ВестиУчетЗатратПоОбъектам Тогда
				
				мНоваяСтрока 				= ТаблицаЗатрат.Добавить();
				мНоваяСтрока.ТС				= ТекСтрокаТС.ТС;
				мНоваяСтрока.ДокументВыпуска= ТекСтрокаЗатратыТС.ДокументВыпуска;
				мНоваяСтрока.СчетЗатрат		= ТекСтрокаЗатратыТС.СчетЗатрат;
				мНоваяСтрока.Затрата		= ТекСтрокаЗатратыТС.Затрата;
				мНоваяСтрока.СтатьяЗатрат	= ТекСтрокаЗатратыТС.СтатьяЗатрат;
				мНоваяСтрока.Количество		= ТекСтрокаЗатратыТС.Количество;
				мНоваяСтрока.Сумма			= ТекСтрокаЗатратыТС.Сумма;
				
			Иначе	
				
				ТаблицаВыработкаТС.Очистить();
				
				//сформируем список из путевых листов, подлежащих к распределению затрат
				мСписокПЛДляПериода = Новый СписокЗначений;
				Если ТипЗнч(ТекСтрокаЗатратыТС.ДокументВыпуска) = Тип("ДокументСсылка.уатПутевойЛист") Тогда
					
					//Если документ выпуска - путевой лист, то в списке будет только этот п/л
					мСписокПЛДляПериода.Добавить(ТекСтрокаЗатратыТС.ДокументВыпуска);
					
				Иначе
					
					//Если документ выпуска - не путевой лист, то выбираем все п/л, которые попадают в заданный период
					ЗапросПЛДляПериода = Новый Запрос;
					ЗапросПЛДляПериода.Текст = 
					
					"ВЫБРАТЬ
					|	NULL КАК ОбъектСтроительства,
					|	уатПутевойЛист.Ссылка
					|ИЗ
					|	Документ.уатПутевойЛист КАК уатПутевойЛист
					|ГДЕ
					|	уатПутевойЛист.ТранспортноеСредство = &ТС
					|	И уатПутевойЛист.Проведен
					|	И уатПутевойЛист.ДатаВозвращения МЕЖДУ &ДатаНач И &ДатаКон";
					
					ЗапросПЛДляПериода.УстановитьПараметр("ДатаНач", НачалоМесяца(ДокументОбъект.Дата));
					ЗапросПЛДляПериода.УстановитьПараметр("ДатаКон", КонецМесяца(ДокументОбъект.Дата));
					ЗапросПЛДляПериода.УстановитьПараметр("ТС", ТекСтрокаТС.ТС);
					мСписокПЛДляПериода.ЗагрузитьЗначения(ЗапросПЛДляПериода.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
					
				КонецЕсли;
				
				Для Каждого ТекСтрокаПЛДляПериода Из мСписокПЛДляПериода Цикл
					Если ТекСтрокаТС.ПараметрВыработкиРаспределенияЗатрат = Справочники.уатПараметрыВыработки.ПробегОбщий Тогда
						ЗапросВыработкаТСДляПЛ.Текст = 	"ВЫБРАТЬ уатПутевойЛистЗадание.КоличествоКмГруз + уатПутевойЛистЗадание.КоличествоКмПорожний";
					ИначеЕсли ТекСтрокаТС.ПараметрВыработкиРаспределенияЗатрат = Справочники.уатПараметрыВыработки.ВремяВРаботе Тогда
						ЗапросВыработкаТСДляПЛ.Текст = 	"ВЫБРАТЬ уатПутевойЛистЗадание.КоличествоЧасов";
					ИначеЕсли ТекСтрокаТС.ПараметрВыработкиРаспределенияЗатрат = Справочники.уатПараметрыВыработки.ВесГруза Тогда
						ЗапросВыработкаТСДляПЛ.Текст = 	"ВЫБРАТЬ уатПутевойЛистЗадание.КоличествоТонн";
					ИначеЕсли ТекСтрокаТС.ПараметрВыработкиРаспределенияЗатрат = Справочники.уатПараметрыВыработки.ТнКм Тогда
						ЗапросВыработкаТСДляПЛ.Текст = 	"ВЫБРАТЬ уатПутевойЛистЗадание.КоличествоТонн * уатПутевойЛистЗадание.КоличествоКмГруз";
					ИначеЕсли ТекСтрокаТС.ПараметрВыработкиРаспределенияЗатрат = Справочники.уатПараметрыВыработки.КоличествоЕздок Тогда
						ЗапросВыработкаТСДляПЛ.Текст = 	"ВЫБРАТЬ уатПутевойЛистЗадание.КоличествоЕздок";
					ИначеЕсли ТекСтрокаТС.ПараметрВыработкиРаспределенияЗатрат = Справочники.уатПараметрыВыработки.КоличествоОпераций Тогда
						ЗапросВыработкаТСДляПЛ.Текст = 	"ВЫБРАТЬ уатПутевойЛистЗадание.КоличествоОпераций";
					Иначе	
						ЗапросВыработкаТСДляПЛ.Текст = 	"ВЫБРАТЬ &Один";
					КонецЕсли;	
					
					ЗапросВыработкаТСДляПЛ.Текст = ЗапросВыработкаТСДляПЛ.Текст +
					" КАК Выработка,
					|	уатПутевойЛистЗадание.Подразделение,
					|	уатПутевойЛистЗадание.Контрагент,
					|	уатПутевойЛистЗадание.ОбъектСтроительства,
					|	уатПутевойЛистЗадание.Ссылка как ПутевойЛист,
					|	уатПутевойЛистЗадание.Ссылка.ТранспортноеСредство как ТС,
					|	NULL КАК Заказ
					|ИЗ
					|	Документ.уатПутевойЛист.Задание КАК уатПутевойЛистЗадание
					|ГДЕ 
					|	уатПутевойЛистЗадание.Выполнено =  ИСТИНА
					|	И уатПутевойЛистЗадание.Ссылка = &ПутЛист";
					
					//теперь для путевого листа выбираем все строки нужной табличной части
					ЗапросВыработкаТСДляПЛ.УстановитьПараметр("ПутЛист", ТекСтрокаПЛДляПериода.Значение);
					ЗапросВыработкаТСДляПЛ.УстановитьПараметр("Один", 1);
					
					ВыборкаЗапросаВыработкаТСДляПЛ 	= ЗапросВыработкаТСДляПЛ.Выполнить().Выбрать();
					
					Пока ВыборкаЗапросаВыработкаТСДляПЛ.Следующий() Цикл
						
						мНоваяСтрока = ТаблицаВыработкаТС.Добавить();
						мНоваяСтрока.Подразделение			= ВыборкаЗапросаВыработкаТСДляПЛ.Подразделение;
						мНоваяСтрока.Контрагент				= ВыборкаЗапросаВыработкаТСДляПЛ.Контрагент;
						мНоваяСтрока.ОбъектСтроительства	= ВыборкаЗапросаВыработкаТСДляПЛ.ОбъектСтроительства;
						мНоваяСтрока.Заказ					= ВыборкаЗапросаВыработкаТСДляПЛ.Заказ;
						мНоваяСтрока.ПутевойЛист = ВыборкаЗапросаВыработкаТСДляПЛ.ПутевойЛист;
						//мНоваяСтрока.ТС						= ВыборкаЗапросаВыработкаТСДляПЛ.ТС;
						
						//Для параметра выработки "Время" переводим выработку в секунды;
						Если ТекСтрокаТС.ПараметрВыработкиРаспределенияЗатрат = Справочники.уатПараметрыВыработки.ВремяВРаботе Тогда
							мНоваяСтрока.Выработка = уатОбщегоНазначения.уатВремяВСекунды(ВыборкаЗапросаВыработкаТСДляПЛ.Выработка);
						Иначе	
							мНоваяСтрока.Выработка = ВыборкаЗапросаВыработкаТСДляПЛ.Выработка;
						КонецЕсли;
						
					КонецЦикла;	
				КонецЦикла;	
				
				ТаблицаВыработкаТС.Свернуть("Подразделение, Контрагент, ОбъектСтроительства, Заказ, ПутевойЛист", "Выработка");   
				
				Если ТаблицаВыработкаТС.Количество() > 0 Тогда
					
					мОбщаяВыработка = ТаблицаВыработкаТС.Итог("Выработка");
					мОбщаяСумма		= ТекСтрокаЗатратыТС.Сумма;
					мОбщееКоличество= ТекСтрокаЗатратыТС.Количество;
					
					Если мОбщаяВыработка = 0 Тогда
						
						//общая выработка по заданиям нулевая, поэтому все затраты относим на первую строку задания
						
						ТекСтрокаВыработки = ТаблицаВыработкаТС[0];
						мНоваяСтрока 				= ТаблицаЗатрат.Добавить();
						мНоваяСтрока.Подразделение	= ТекСтрокаВыработки.Подразделение;
						мНоваяСтрока.Контрагент		= ТекСтрокаВыработки.Контрагент;
						
						Если мУчетПоОбъектамСтроительства Тогда
							мНоваяСтрока.ОбъектСтроительства	= ТекСтрокаВыработки.ОбъектСтроительства;
						КонецЕсли;
						
						мНоваяСтрока.Заказ			= ТекСтрокаВыработки.Заказ;
						мНоваяСтрока.ТС				= ТекСтрокаТС.ТС;
						Если ТипЗнч(ТекСтрокаЗатратыТС.ДокументВыпуска) = Тип("ДокументСсылка.уатПутевойЛист") Тогда
							мНоваяСтрока.ДокументВыпуска= ТекСтрокаВыработки.ПутевойЛист;
						Иначе	
							мНоваяСтрока.ДокументВыпуска= ТекСтрокаЗатратыТС.ДокументВыпуска;
						КонецЕсли;	
						мНоваяСтрока.СчетЗатрат		= ТекСтрокаЗатратыТС.СчетЗатрат;
						мНоваяСтрока.Затрата		= ТекСтрокаЗатратыТС.Затрата;
						мНоваяСтрока.СтатьяЗатрат	= ТекСтрокаЗатратыТС.СтатьяЗатрат;
						мНоваяСтрока.Количество		= мОбщееКоличество;
						мНоваяСтрока.Сумма			= мОбщаяСумма;
						
					Иначе	
						
						//если общая выработка по заданиям ненулевая, то затраты относим только на строки с ненулевой выработкой
						
						Для Каждого ТекСтрокаВыработки Из ТаблицаВыработкаТС Цикл 
							
							Если ТекСтрокаВыработки.Выработка <> 0 Тогда
								мНоваяСтрока 						= ТаблицаЗатрат.Добавить();
								мНоваяСтрока.Подразделение			= ТекСтрокаВыработки.Подразделение;
								мНоваяСтрока.Контрагент				= ТекСтрокаВыработки.Контрагент;
								
								Если мУчетПоОбъектамСтроительства Тогда
									мНоваяСтрока.ОбъектСтроительства	= ТекСтрокаВыработки.ОбъектСтроительства;
								КонецЕсли;
								
								мНоваяСтрока.Заказ			= ТекСтрокаВыработки.Заказ;
								мНоваяСтрока.ТС				= ТекСтрокаТС.ТС;
								Если ТипЗнч(ТекСтрокаЗатратыТС.ДокументВыпуска) = Тип("ДокументСсылка.уатПутевойЛист") Тогда
									мНоваяСтрока.ДокументВыпуска= ТекСтрокаВыработки.ПутевойЛист;
								Иначе	
									мНоваяСтрока.ДокументВыпуска= ТекСтрокаЗатратыТС.ДокументВыпуска;
								КонецЕсли;	
								мНоваяСтрока.СчетЗатрат		= ТекСтрокаЗатратыТС.СчетЗатрат;
								мНоваяСтрока.Затрата		= ТекСтрокаЗатратыТС.Затрата;
								мНоваяСтрока.СтатьяЗатрат	= ТекСтрокаЗатратыТС.СтатьяЗатрат;
								мНоваяСтрока.Количество		= ТекСтрокаЗатратыТС.Количество * ТекСтрокаВыработки.Выработка / мОбщаяВыработка;
								мНоваяСтрока.Сумма			= ТекСтрокаЗатратыТС.Сумма * ТекСтрокаВыработки.Выработка / мОбщаяВыработка;
								мОбщееКоличество			= мОбщееКоличество - мНоваяСтрока.Количество;			
								мОбщаяСумма					= мОбщаяСумма - мНоваяСтрока.Сумма;
							КонецЕсли;	
							
						КонецЦикла;	
						
						Если мОбщееКоличество <> 0 Тогда
							
							мНоваяСтрока.Количество = мНоваяСтрока.Количество + мОбщееКоличество;
							
						КонецЕсли;	
						
						Если мОбщаяСумма <> 0 Тогда
							
							мНоваяСтрока.Сумма = мНоваяСтрока.Сумма + мОбщаяСумма;
							
						КонецЕсли;	
					КонецЕсли;	
					
				Иначе
					//нечего распределять по заказам
					
					мНоваяСтрока 				= ТаблицаЗатрат.Добавить();
					мНоваяСтрока.ТС				= ТекСтрокаТС.ТС;
					мНоваяСтрока.ДокументВыпуска= ТекСтрокаЗатратыТС.ДокументВыпуска;
					мНоваяСтрока.Затрата		= ТекСтрокаЗатратыТС.Затрата;
					мНоваяСтрока.СчетЗатрат		= ТекСтрокаЗатратыТС.СчетЗатрат;
					мНоваяСтрока.СтатьяЗатрат	= ТекСтрокаЗатратыТС.СтатьяЗатрат;
					мНоваяСтрока.Количество		= ТекСтрокаЗатратыТС.Количество;
					мНоваяСтрока.Сумма			= ТекСтрокаЗатратыТС.Сумма;
					
				КонецЕсли;	
				
			КонецЕсли;
			
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ПодготовитьТаблицуПрочихЗатрат()
	
	Для Каждого ТекСтрока Из ДокументОбъект.Затраты Цикл
		
		мНоваяСтрока 						= ТаблицаЗатрат.Добавить();
		мНоваяСтрока.Подразделение			= ДокументОбъект.Подразделение;
		
		Если мУчетПоОбъектамСтроительства Тогда
			мНоваяСтрока.ОбъектСтроительства	= ТекСтрока.ОбъектСтроительства;
		КонецЕсли;
		
		мНоваяСтрока.Заказ					= ДокументОбъект.Заказ;
		мНоваяСтрока.ТС						= ДокументОбъект.ТС;
		мНоваяСтрока.СчетЗатрат				= ТекСтрока.СчетЗатрат;
		мНоваяСтрока.СтатьяЗатрат			= ТекСтрока.СтатьяЗатрат;
		мНоваяСтрока.Сумма					= ТекСтрока.Сумма;
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует движения по регистру 
//
// Возвращаемое значение: 
//  Истина       - Выполнение функции завершено успешно 
//  Ложь         - при выполнении функции возникли ошибки
//
Функция ДобавитьДвижение() Экспорт
	
	ВсеОК = Истина;
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Число"));
	ТипЧисло = Новый ОписаниеТипов(МассивТипов);	
	
	ТаблицаЗатрат = Новый ТаблицаЗначений;
	ТаблицаЗатрат.Колонки.Добавить("ДокументВыпуска");
	ТаблицаЗатрат.Колонки.Добавить("Коэффициент");
	ТаблицаЗатрат.Колонки.Добавить("Подразделение");
	ТаблицаЗатрат.Колонки.Добавить("Контрагент");
	ТаблицаЗатрат.Колонки.Добавить("Заказ");
	ТаблицаЗатрат.Колонки.Добавить("ТС");
	ТаблицаЗатрат.Колонки.Добавить("СчетЗатрат");
	ТаблицаЗатрат.Колонки.Добавить("СтатьяЗатрат");
	ТаблицаЗатрат.Колонки.Добавить("Затрата");
	ТаблицаЗатрат.Колонки.Добавить("Сумма", ТипЧисло);
	ТаблицаЗатрат.Колонки.Добавить("Количество", ТипЧисло);
	
	ТаблицаЗатратПромежуточная = Новый ТаблицаЗначений;
	ТаблицаЗатратПромежуточная.Колонки.Добавить("ДокументВыпуска");
	ТаблицаЗатратПромежуточная.Колонки.Добавить("Коэффициент");
	ТаблицаЗатратПромежуточная.Колонки.Добавить("Подразделение");
	ТаблицаЗатратПромежуточная.Колонки.Добавить("Контрагент");
	ТаблицаЗатратПромежуточная.Колонки.Добавить("ТС");
	ТаблицаЗатратПромежуточная.Колонки.Добавить("СчетЗатрат");
	ТаблицаЗатратПромежуточная.Колонки.Добавить("СтатьяЗатрат");
	ТаблицаЗатратПромежуточная.Колонки.Добавить("Затрата");
	ТаблицаЗатратПромежуточная.Колонки.Добавить("Сумма", ТипЧисло);
	ТаблицаЗатратПромежуточная.Колонки.Добавить("Количество", ТипЧисло);
	
	ТаблицаВыработкаТС = Новый ТаблицаЗначений;
	ТаблицаВыработкаТС.Колонки.Добавить("ПутевойЛист");
	ТаблицаВыработкаТС.Колонки.Добавить("Подразделение");
	ТаблицаВыработкаТС.Колонки.Добавить("Контрагент");
	ТаблицаВыработкаТС.Колонки.Добавить("ОбъектСтроительства");
	ТаблицаВыработкаТС.Колонки.Добавить("Заказ");
	ТаблицаВыработкаТС.Колонки.Добавить("ТС");
	ТаблицаВыработкаТС.Колонки.Добавить("Выработка");
	
	Если уатОбщегоНазначенияТиповые.уатЕстьИзмерениеРегистра("ОбъектСтроительства", РегистрыНакопления.уатЗатратыТС.СоздатьНаборЗаписей()) Тогда
		
		мУчетПоОбъектамСтроительства = Истина;	
		ТаблицаЗатрат.Колонки.Добавить("ОбъектСтроительства");
		
	Иначе
		
		мУчетПоОбъектамСтроительства = Ложь;	
		
	КонецЕсли;	
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.уатРаспределениеЗатрат") Тогда
		
		// Вначале сформируем таблицу ТС
		ПодготовитьТаблицуТС();
		
		//Теперь распределим косвенные затраты. Обязательно вызываем первой эту процедуру
		ПодготовитьТаблицуКосвенныхЗатрат();
		
		//затем подготовим таблицу по затратам на ремонт
		Если ДокументОбъект.РаспределятьЗатратыПутЛисты Тогда
			ПодготовитьТаблицуЗатратПоПЛ();
		КонецЕсли;	
		
		//затем подготовим таблицу по затратам по пут. листам
		Если ДокументОбъект.РаспределятьЗатратыНаРемонт Тогда
			ПодготовитьТаблицуЗатратНаРемонт();
		КонецЕсли;
		
		ПодготовитьТаблицуИзносТС();
		
		РаспределитьЗатратыВнутриТС();
		
		Сообщить("Выполнено!"); 
		// Прочие затраты	
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.уатПрочиеЗатраты") Тогда
		
		ПодготовитьТаблицуПрочихЗатрат()
		
	КонецЕсли;	
	
	Если ВсеОК Тогда
		
		Для каждого текСтрокаТаблицыЗатрат Из ТаблицаЗатрат Цикл
			
			НоваяЗапись					= Добавить();
			НоваяЗапись.Период			= ДокументОбъект.Дата;
			НоваяЗапись.Регистратор		= ДокументОбъект.Ссылка;
			НоваяЗапись.Организация		= ДокументОбъект.Организация;
			НоваяЗапись.Подразделение	= текСтрокаТаблицыЗатрат.Подразделение;
			НоваяЗапись.Контрагент		= текСтрокаТаблицыЗатрат.Контрагент;
			
			Если мУчетПоОбъектамСтроительства Тогда
				НоваяЗапись.ОбъектСтроительства	= текСтрокаТаблицыЗатрат.ОбъектСтроительства;
			КонецЕсли;
			
			НоваяЗапись.ТС				= текСтрокаТаблицыЗатрат.ТС;
			НоваяЗапись.Заказ			= текСтрокаТаблицыЗатрат.Заказ;
			
			Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(текСтрокаТаблицыЗатрат.ДокументВыпуска) Тогда
				
				НоваяЗапись.ДокументВыпуска	= ДокументОбъект.Ссылка;
				
			Иначе
				
				НоваяЗапись.ДокументВыпуска	= текСтрокаТаблицыЗатрат.ДокументВыпуска;
				
			КонецЕсли;
			
			НоваяЗапись.СтатьяЗатрат	= текСтрокаТаблицыЗатрат.СтатьяЗатрат;
			НоваяЗапись.СчетЗатрат		= текСтрокаТаблицыЗатрат.СчетЗатрат;
			НоваяЗапись.Затрата			= текСтрокаТаблицыЗатрат.Затрата;
			НоваяЗапись.Сумма			= текСтрокаТаблицыЗатрат.Сумма;
			НоваяЗапись.Количество		= текСтрокаТаблицыЗатрат.Количество;
			
		КонецЦикла;
		
	КонецЕсли; 
	
	ДокументОбъект = Неопределено;
	Возврат ВсеОК;
	
КонецФункции

Процедура ПередЗаписью(Отказ, Замещение)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначенияТиповые.уатПроверкаПериодаЗаписей(ЭтотОбъект, Отказ);
	
КонецПроцедуры
