Перем РежимПроведения Экспорт; // Режим проведения документа. Если проведение неоперативное - проверок остатков нет
Перем ДокументОбъект Экспорт; //Документ, осуществляющий движение по регистру
Перем РезультатЗапросаПоГСМ Экспорт; //Выборка табличной части или таблица значений табличной части товаров
Перем ГраницаРасчетаОстатков Экспорт; // Момент времени, на который получаем остатки (партий) для списания с регистра
Перем ЗаписыватьДвижения Экспорт; // Булево. Истина - движения записываются сразу по окончании выполнения процедуры.
									//Ложь - движения записываются при записи документа.
Перем ТаблицаДляСписанияГСМ Экспорт; // Таблица списания ТС. Обязательна для заполнения.
Перем ТаблицаСтоимостиГСМПоСкладу Экспорт; // Таблица стоимости ГСМ. Заполняется при заправке со склада.


// Формирует движения по регистру расход
// Переменная вхСредняяЦена используется для документа "Слив ГСМ". По этой цене возвращается топлива на склад
//
// Возвращаемое значение: 
//  Истина       - Выполнение функции завершено успешно 
//  Ложь         - при выполнении функции возникли ошибки
//
Функция Расход() Экспорт
	
	ВсеОК = Истина;
	
	Для каждого СтрокаГСМ Из ТаблицаДляСписанияГСМ Цикл
		НоваяЗапись					= Добавить();
		НоваяЗапись.ВидДвижения		= ВидДвиженияНакопления.Расход;
		НоваяЗапись.Период			= ДокументОбъект.Дата;
		НоваяЗапись.Партия			= СтрокаГСМ.Партия;
		НоваяЗапись.Регистратор		= ДокументОбъект.Ссылка;
		НоваяЗапись.ТС				= СтрокаГСМ.ТС;
		НоваяЗапись.ГСМ				= СтрокаГСМ.ГСМ;
		НоваяЗапись.Количество		= СтрокаГСМ.Количество;
		НоваяЗапись.СтоимостьБух	= СтрокаГСМ.СтоимостьБух;	
		НоваяЗапись.СтоимостьУпр	= СтрокаГСМ.СтоимостьУпр;	
	КонецЦикла; 
		
	ДокументОбъект = Неопределено;
		
	Возврат ВсеОК;
	
КонецФункции

// Формирует движения по регистру приход
//
// Возвращаемое значение: 
//  Истина       - Выполнение функции завершено успешно 
//  Ложь         - при выполнении функции возникли ошибки
//
Функция Приход() Экспорт
	ВсеОК=Истина;
	//мВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	// получим таблицу ГСМ
	Если (РезультатЗапросаПоГСМ=Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоГСМ)<>Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоГСМ)<>Тип("ТаблицаЗначений")) Тогда
		ВсеОК = Ложь;
		Возврат Ложь;
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоГСМ)=Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоГСМ=РезультатЗапросаПоГСМ.Выгрузить();
	КонецЕсли;
	
	//Преребераем строки ГСМ
	Для каждого СтрокаГСМ Из РезультатЗапросаПоГСМ Цикл
		Если СтрокаГСМ.Количество <> 0 Тогда
			НоваяЗапись				= Добавить();
			НоваяЗапись.ВидДвижения	= ВидДвиженияНакопления.Приход;
			Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.уатЗаправкаГСМ")
				И (НЕ СтрокаГСМ.ПутевойЛист.Пустая())
				И НачалоДня(СтрокаГСМ.ПутевойЛист.ДатаВыезда) = НачалоДня(СтрокаГСМ.Дата) Тогда
				НоваяЗапись.Период = СтрокаГСМ.ПутевойЛист.ДатаВыезда;
			Иначе
				НоваяЗапись.Период = СтрокаГСМ.Дата;
			КонецЕсли;
			НоваяЗапись.Регистратор	= ДокументОбъект.Ссылка;
			НоваяЗапись.Партия		= ДокументОбъект.Ссылка;
			НоваяЗапись.ТС			= СтрокаГСМ.ТС;
			НоваяЗапись.ГСМ			= СтрокаГСМ.ГСМ;
			НоваяЗапись.Количество	= СтрокаГСМ.Количество;
			
			////если была заправка со склада предприятия, то стоимость возьмем из готовой таблицы
			//Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.уатЗаправкаГСМ") Тогда
			//	Если ДокументОбъект.ВидДвиженияГСМ = Перечисления.уатВидыДвиженияГСМ.ЗаправкаСклад Или
			//		ДокументОбъект.ВидДвиженияГСМ = Перечисления.уатВидыДвиженияГСМ.ЗаправкаТалоны Тогда
			//		
			//		мСтрока = ТаблицаСтоимостиГСМПоСкладу.Найти(СтрокаГСМ.ГСМ, "НоменклатураГСМ");
			//		Если мСтрока <> Неопределено Тогда
			//			Если мСтрока.СписываемоеКоличествоГСМ <> 0 Тогда
			//				НоваяЗапись.СтоимостьБух = СтрокаГСМ.Количество * мСтрока.Сумма / мСтрока.СписываемоеКоличествоГСМ;
			//			Иначе
			//				НоваяЗапись.СтоимостьБух = 0;
			//			КонецЕсли;	
			//		Иначе
			//			НоваяЗапись.СтоимостьБух = 0;
			//		КонецЕсли;
			//	Иначе    // не со склада
			//		НоваяЗапись.СтоимостьБух= уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СтрокаГСМ.СуммаБезНДС,
			//			СтрокаГСМ.Валюта, мВалютаРегламентированногоУчета, СтрокаГСМ.Дата, СтрокаГСМ.Дата);	
			//	КонецЕсли;
			//	
			//Иначе      // не заправка
			
				Если РезультатЗапросаПоГСМ.Колонки.Найти("СуммаБезНДС") <> Неопределено Тогда
					НоваяЗапись.СтоимостьБух= уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СтрокаГСМ.СуммаБезНДС, СтрокаГСМ.Валюта, мВалютаРегламентированногоУчета, СтрокаГСМ.Дата, СтрокаГСМ.Дата);	
				Иначе
					НоваяЗапись.СтоимостьБух= уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СтрокаГСМ.Сумма, СтрокаГСМ.Валюта, мВалютаРегламентированногоУчета, СтрокаГСМ.Дата, СтрокаГСМ.Дата);	
				КонецЕсли;	
				
			//КонецЕсли; 
			НоваяЗапись.СтоимостьУпр= НоваяЗапись.СтоимостьБух;
		КонецЕсли; 
	КонецЦикла; 
	
	// запись движений
	Если ВсеОК Тогда
		Записать();
	КонецЕсли; 
	
	ДокументОбъект = Неопределено;
	
	Возврат ВсеОК;
КонецФункции

Процедура ПередЗаписью(Отказ, Замещение)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначенияТиповые.уатПроверкаПериодаЗаписей(ЭтотОбъект, Отказ);
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры


//=================================================================================
//Инициализация переменных модуля набора записей

РежимПроведения=РежимПроведенияДокумента.Оперативный;

ДокументОбъект=Неопределено; // !!! Обязательный к заполнению перед началом проведения
РезультатЗапросаПоГСМ=Неопределено;
ГраницаРасчетаОстатков=Неопределено;