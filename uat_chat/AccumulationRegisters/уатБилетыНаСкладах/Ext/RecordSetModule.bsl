Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

Перем РежимПроведения Экспорт; // Режим проведения документа. Если проведение неоперативное - проверки остатков нет

Перем ДокументОбъект Экспорт; //Документ, осуществляющий движение по регистру
Перем РезультатЗапросаПоБилетам Экспорт; //Выборка табличной части или таблица значений табличной части товаров
Перем ГраницаРасчетаОстатков Экспорт; //Момент времени при получения остатков партий при списании
Перем ЗаписыватьДвижения Экспорт; // Булево. Истина - движения записываются сразу по окончании выполнения процедуры.
	//Ложь - движения записываются при записи документа.


// Возвращает результат запроса по таблице прихода 
Функция ПолучитьТаблицуПрихода()
	
	//Нужно сделать универсальный запрос для разных документов
	
КонецФункции	//ПолучитьТаблицуРасхода()

// Возвращает результат запроса по таблице прихода 
Функция ПолучитьТаблицуРасхода()
	
	//Нужно сделать универсальный запрос для разных документов
	
КонецФункции	//ПолучитьТаблицуРасхода()

// Возвращает результат запроса по остаткам  по партиям
Функция ПолучитьОстаткиПартий(Склад, Билет)
	Запрос=Новый Запрос();
	ТекстЗапроса=
	
	"ВЫБРАТЬ
	|	БилетыНаСкладах.Партия КАК Партия,
	|	БилетыНаСкладах.Партия.Дата КАК ДатаПартии,
	|	БилетыНаСкладах.Билет КАК Билет,
	|	ВЫБОР
	|		КОГДА БилетыНаСкладах.КоличествоОстаток ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ БилетыНаСкладах.КоличествоОстаток
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	РегистрНакопления.уатБилетыНаСкладах.Остатки(
	|		&Момент,
	|		Билет = &Билет
	|		    И Склад = &Склад) КАК БилетыНаСкладах
	|ГДЕ
	|	БилетыНаСкладах.КоличествоОстаток >= &НулевойОстаток
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	РегистрНакопления.уатБилетыНаСкладах.Остатки";
	
	Если уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация"), ПланыВидовХарактеристик.уатПраваИНастройки.СпособОценкиМПЗ) = Перечисления.СпособыОценки.ФИФО Тогда
		ПорядокСписанияПартий="Возр";
	ИначеЕсли уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация"), ПланыВидовХарактеристик.уатПраваИНастройки.СпособОценкиМПЗ) = Перечисления.СпособыОценки.ПоСредней Тогда
		ПорядокСписанияПартий="Возр";
	Иначе
		ПорядокСписанияПартий="Убыв"; 
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса +  "
			|УПОРЯДОЧИТЬ ПО	ДатаПартии " + ПорядокСписанияПартий;
	
	Запрос.УстановитьПараметр("Момент",?(ГраницаРасчетаОстатков=Неопределено,ДокументОбъект.МоментВремени(),ГраницаРасчетаОстатков));
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Билет",Билет);
	Запрос.УстановитьПараметр("НулевойОстаток",0);
	
	Возврат Запрос.Выполнить();
КонецФункции

//возвращает остаток ГСМ на ТС на заданную дату
Функция ПолучитьОстаток(Склад, Билет) Экспорт
	
	Запрос=Новый Запрос();
	ТекстЗапроса=
	
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.КоличествоОстаток ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ОстаткиНоменклатуры.КоличествоОстаток
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	РегистрНакопления.уатБилетыНаСкладах.Остатки(
	|		&Момент,
	|		Склад = &Склад
	|		    И Билет = &Билет) КАК ОстаткиНоменклатуры
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	РегистрНакопления.уатБилетыНаСкладах.Остатки";
	Запрос.Текст=ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Момент",ДокументОбъект.МоментВремени());
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Билет",Билет);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Результат.Следующий();
	Возврат Результат.Количество;
	
КонецФункции // 

// Формирует движения по регистру приход
// Возвращаемое значение: Булево. Истина - успешно, Ложь - чего-то не так.
Функция Приход() Экспорт
	ВсеОК=Истина;
	//мВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	// получим таблицу 
	Если (РезультатЗапросаПоБилетам=Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоБилетам)<>Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоБилетам)<>Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоБилетам=ПолучитьТаблицуПрихода();
	КонецЕсли;
	Если ТипЗнч(РезультатЗапросаПоБилетам)=Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоБилетам=РезультатЗапросаПоБилетам.Выгрузить();
	КонецЕсли;
	
	//Перебираем строки
	Для каждого текСтрока Из РезультатЗапросаПоБилетам Цикл
		Если текСтрока.Количество <> 0 Тогда
			НоваяЗапись				= Добавить();
			НоваяЗапись.ВидДвижения	= ВидДвиженияНакопления.Приход;
			НоваяЗапись.Период		= ДокументОбъект.Дата;
			НоваяЗапись.Регистратор	= ДокументОбъект.Ссылка;
			НоваяЗапись.Партия		= ДокументОбъект.Ссылка;
			НоваяЗапись.Склад		= ДокументОбъект.Склад;
			НоваяЗапись.Билет		= текСтрока.Билет;
			НоваяЗапись.Количество	= текСтрока.Количество;
		КонецЕсли; 
	КонецЦикла; 
	// запись движений
	Если ВсеОК Тогда
		Записать();
	КонецЕсли; 
	
	Возврат ВсеОК;
КонецФункции

// Формирует движения по регистру расход
// Переменная вхСредняяЦена используется для документа "Слив ГСМ". По этой цене возвращается топлива на склад
// Возвращаемое значение: Булево. Истина - успешно, Ложь - чего-то не так.
Функция Расход() Экспорт
	Перем мСписаноКоличество;
	Перем мСписаноСтоимость;
	
	ВсеОК=Истина;
	мСписаноКоличество = 0;
	мСписаноСтоимость  = 0;
	
	// получим таблицу товарного состава
	Если (РезультатЗапросаПоБилетам=Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоБилетам)<>Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоБилетам)<>Тип("ТаблицаЗначений")) Тогда
		РезультатЗапросаПоБилетам=ПолучитьТаблицуРасхода();
	КонецЕсли;
	
	Если ТипЗнч(РезультатЗапросаПоБилетам)=Тип("РезультатЗапроса") Тогда
		РезультатЗапросаПоБилетам=РезультатЗапросаПоБилетам.Выгрузить();
	КонецЕсли;
	
	РезультатЗапросаПоБилетам.Свернуть("Билет", "Количество");
	
	//Перебираем строки номенклатуры, который надо списать
	Для каждого текСтрока Из РезультатЗапросаПоБилетам Цикл
		НадоСписатьКоличество						= текСтрока.Количество;
		
		//Получение остатков по партиям
		РезультатЗапросаПартии	= ПолучитьОстаткиПартий(ДокументОбъект.Склад, текСтрока.Билет).Выгрузить();
		
		КоличествоОстаток = ПолучитьОстаток(ДокументОбъект.Склад, текСтрока.Билет);
			
		Если НадоСписатьКоличество > КоличествоОстаток Тогда
			//Расход по ТС превышает остаток
			Сообщить("Для """ + текСтрока.Билет + """ остаток "+
					СокрЛП(Строка(КоличествоОстаток))+". Списывается "+СокрЛП(Строка(НадоСписатьКоличество))+". Превышение "+СокрЛП(Строка(НадоСписатьКоличество-КоличествоОстаток)));
			ВсеОК=Ложь;
		КонецЕсли; 
		
		Если ВсеОК Тогда
			
			Для Каждого СтрокаПартии Из РезультатЗапросаПартии Цикл
                Если НадоСписатьКоличество <= 0 Тогда
					Прервать        // Все списали
                КонецЕсли;      
			
                мКоличество = Мин(НадоСписатьКоличество, СтрокаПартии.Количество);
				
                Если мКоличество > 0 Тогда
					НоваяЗапись				= Добавить();
					НоваяЗапись.ВидДвижения	= ВидДвиженияНакопления.Расход;
					НоваяЗапись.Период		= ДокументОбъект.Дата;
					НоваяЗапись.Партия		= СтрокаПартии.Партия;
					НоваяЗапись.Регистратор	= ДокументОбъект.Ссылка;
					НоваяЗапись.Склад		= ДокументОбъект.Склад;
					НоваяЗапись.Билет		= текСтрока.Билет;
					НоваяЗапись.Количество	= мКоличество;
				КонецЕсли;
                НадоСписатьКоличество 		= НадоСписатьКоличество - мКоличество;
				
			КонецЦикла;
			
			// проверим чего осталось
			Если НадоСписатьКоличество > 0 Тогда
				Сообщить("Для """ + текСтрока.Билет + """ остаток "+СокрЛП(КоличествоОстаток)+". Списывается "+СокрЛП(НадоСписатьКоличество)+". Превышение "+СокрЛП(НадоСписатьКоличество-КоличествоОстаток));
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла; 
	
	// запись движений
	Если ВсеОК  Тогда 
		Записать(); 
	КонецЕсли; 
	// вывод критических сообщений если включена такая настройка	
	Если НЕ ВсеОК Тогда
		Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ДокументОбъект);
		Сообщить("Получены отрицательные остатки билетов по документу "+Заголовок+" !");
	КонецЕсли;
	
	Возврат ВсеОК;
	
КонецФункции

Процедура ПередЗаписью(Отказ, Замещение)
		
	уатОбщегоНазначенияТиповые.уатПроверкаПериодаЗаписей(ЭтотОбъект, Отказ);
	
КонецПроцедуры
////////////////////////////////////////////////////////////////////////
//Инициализация переменных модуля набора записей

РежимПроведения=РежимПроведенияДокумента.Оперативный;

ДокументОбъект=Неопределено; // !!! Обязательный к заполнению перед началом проведения
РезультатЗапросаПоНоменклатуре=Неопределено;
ГраницаРасчетаОстатков=Неопределено;
