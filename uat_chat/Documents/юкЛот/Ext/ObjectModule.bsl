
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	мНаборЗаписей = Движения.ЛотыПроизводственнойПрограммы;
	мНаборЗаписей.Записывать = Истина;
	
	мНаборЗаписейДополнительныеСведенияЗаявок = Движения.ДополнительныеСведенияЗаявок;
	мНаборЗаписейДополнительныеСведенияЗаявок.Записывать = Истина;
	
	мТаблицаСторнируемыхДвижений = Новый ТаблицаЗначений;
	Если Корректировочный И ЗначениеЗаполнено(СторнируемыйЛот) Тогда
		мМассивИдентификаторов = ТаблицаЛотов.ВыгрузитьКолонку("ИдентификаторСтрокиЛота");
		мТаблицаСторнируемыхДвижений = ПолучитьСторнируемыеДвижения(мМассивИдентификаторов, СторнируемыйЛот);
		мТаблицаСторнируемыхЗаписейРазнарядки = ПолучитьСторнируемыеИдентификаторыРазнарядки(мМассивИдентификаторов, СторнируемыйЛот, Дата);
	КонецЕсли;
	
	///	TODO: функция неоптимальна, необходимо переписать запрос и получать структуру, скажем, через НайтиСтроки в результате-таблице, по месяцу и режиму.... 
	мСтруктураКалендаряГода = ПолучитьСтруктуруКалендаряГода(Дата);
	
	Для Каждого мСтрокаТекущихДанных Из ТаблицаЛотов Цикл
		мОтборПоИдентификаторуСтрокиЛота = Новый Структура("ИдентификаторСтрокиЛота", мСтрокаТекущихДанных.ИдентификаторСтрокиЛота);
		мТипТСИзГруппы = мСтрокаТекущихДанных.ГрупповойТип.СписокТипов[0].ТипТС;
		Если (ЗначениеЗаполнено(мСтрокаТекущихДанных.ТипТС) Или ЗначениеЗаполнено(мСтрокаТекущихДанных.ГрупповойТип)) И ((мСтрокаТекущихДанных.Пробег > 0) Или (мСтрокаТекущихДанных.КоличествоУслуга1 > 0) Или (мСтрокаТекущихДанных.ЧасыРаботы > 0)) Тогда
			Для Итр = Месяц(Дата) По 12 Цикл
				
				мНоваяЗапись = мНаборЗаписей.Добавить();
				мНоваяЗапись.Регистратор = Ссылка;
				мНоваяЗапись.НомерСтрокиДокумента = мСтрокаТекущихДанных.НомерСтроки;
				мНоваяЗапись.Идентификатор = мСтрокаТекущихДанных.ИдентификаторСтрокиЛота;
				мНоваяЗапись.Период = НачалоПериодаДокумента;
				мНоваяЗапись.МесяцЛота = ДобавитьМесяц(НачалоМесяца(НачалоПериодаДокумента), (Итр - 1));
				
				мДнейВРаботеЗаСменуВМесяце = мСтрокаТекущихДанных["ДнейВРаботеЗаСмену" + Итр];
				Если ЗаписыватьВРазнарядку И ЗначениеЗаполнено(МестоРаботы) И мДнейВРаботеЗаСменуВМесяце > 0 И мСтрокаТекущихДанных["КоличествоТС"] > 0 Тогда
					//по дням месяца пишем, если строка - 5,6,7 дней или выходные/праздничные дни
					мСтруктураКалендаряМесяца = мСтруктураКалендаряГода.Получить(Итр);
					мЗаписыватьСтрокуВРазнарядку = Истина;
					Если мДнейВРаботеЗаСменуВМесяце = мСтруктураКалендаряМесяца.Режим5.ВсегоДней Тогда
						мИмяСтруктурыКалендаря = "Режим5";
					ИначеЕсли мДнейВРаботеЗаСменуВМесяце = мСтруктураКалендаряМесяца.Режим6.ВсегоДней Тогда
						мИмяСтруктурыКалендаря = "Режим6";
					ИначеЕсли мДнейВРаботеЗаСменуВМесяце = мСтруктураКалендаряМесяца.Режим7.ВсегоДней Тогда
						мИмяСтруктурыКалендаря = "Режим7";
					ИначеЕсли мДнейВРаботеЗаСменуВМесяце = мСтруктураКалендаряМесяца.Режим9.ВсегоДней Тогда
						мИмяСтруктурыКалендаря = "Режим9";
					Иначе
						мЗаписыватьСтрокуВРазнарядку = Ложь;
					КонецЕсли;
					Если мЗаписыватьСтрокуВРазнарядку Тогда
						мСтрокиРазбивки = РазбивкаПоЦехамМаршрутам.НайтиСтроки(мОтборПоИдентификаторуСтрокиЛота);
						Если мСтрокиРазбивки.Количество() > 0 Тогда
							Для Каждого мСтрокаРазбивки Из мСтрокиРазбивки Цикл
								мЭтоМаршрут = (ТипЗнч(мСтрокаРазбивки.ЦехМаршрут) = Тип("СправочникСсылка.уатМаршруты"));
								
								Для джИтр = 1 По День(КонецМесяца(мНоваяЗапись.МесяцЛота)) Цикл
									Если мСтруктураКалендаряМесяца[мИмяСтруктурыКалендаря]["д" + джИтр] = 1 Тогда
										//рабочий день по нужному календарю, пишем его в регистр заявок
										//по строкам из ТЧ РазбивкаПоЦехамМаршрутам
										мДеньДаты = НачалоМесяца(мНоваяЗапись.МесяцЛота) + (3600 * 24 * (джИтр - 1));
										мНоваяЗаписьДополнительныеСведенияЗаявок = мНаборЗаписейДополнительныеСведенияЗаявок.Добавить();
										ЗаполнитьЗначенияСвойств(мНоваяЗаписьДополнительныеСведенияЗаявок, мСтрокаРазбивки, "ЦехМаршрут, ПозицияПП");
										мНоваяЗаписьДополнительныеСведенияЗаявок.ТипТС = мТипТСИзГруппы;
										мНоваяЗаписьДополнительныеСведенияЗаявок.РежимРаботы = мСтрокаТекущихДанных.РежимРаботы;
										мНоваяЗаписьДополнительныеСведенияЗаявок.Регистратор = Ссылка;
										мНоваяЗаписьДополнительныеСведенияЗаявок.ИдентификаторСтрокиЗаявки = мСтрокаРазбивки.ИдентификаторСтрокиЗаявки;
										мНоваяЗаписьДополнительныеСведенияЗаявок.Период = мДеньДаты;
										мНоваяЗаписьДополнительныеСведенияЗаявок.ВремяПодачи = ?(мЭтоМаршрут, мСтрокаРазбивки.ЦехМаршрут.Начало, мСтрокаРазбивки.ВремяПодачи);
										мНоваяЗаписьДополнительныеСведенияЗаявок.ВремяВозврата = ?(мЭтоМаршрут, мСтрокаРазбивки.ЦехМаршрут.Окончание, мСтрокаРазбивки.ВремяВозврата);
										мНоваяЗаписьДополнительныеСведенияЗаявок.Контрагент = Контрагент;
										мНоваяЗаписьДополнительныеСведенияЗаявок.КоличествоТС = 1;
										мНоваяЗаписьДополнительныеСведенияЗаявок.МестоРаботы = ?(ЗначениеЗаполнено(мСтрокаРазбивки.МестоРаботы), мСтрокаРазбивки.МестоРаботы, МестоРаботы);
										мНоваяЗаписьДополнительныеСведенияЗаявок.ИдентификаторСтрокиЛота = мСтрокаТекущихДанных.ИдентификаторСтрокиЛота;
										мНоваяЗаписьДополнительныеСведенияЗаявок.ДокументЛота = Ссылка;
									КонецЕсли;
								КонецЦикла;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				//мЗаписьОтсторнирована = Ложь;
				Если мТаблицаСторнируемыхДвижений.Количество() > 0 Тогда
					мОтборИдентификаторМесяц = Новый Структура("Идентификатор, МесяцЛота", мНоваяЗапись.Идентификатор, мНоваяЗапись.МесяцЛота);
					мСтрокиСторнируемыхДвижений = мТаблицаСторнируемыхДвижений.НайтиСтроки(мОтборИдентификаторМесяц);
					Для Каждого мСторнируемаяСтрока Из мСтрокиСторнируемыхДвижений Цикл
						мСторнируемаяЗапись = мНаборЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(мСторнируемаяЗапись, мСторнируемаяСтрока);
						ИнвертироватьЗначимыеРеквизиты(мСторнируемаяЗапись);
						мСторнируемаяЗапись.Регистратор = Ссылка;
						мСторнируемаяЗапись.ДокументЛота = СторнируемыйЛот;
						//мЗаписьОтсторнирована = Истина;
					КонецЦикла;
					мОтборИдентификаторМесяц = Новый Структура("ИдентификаторСтрокиЛота, НачалоМесяца", мНоваяЗапись.Идентификатор, мНоваяЗапись.МесяцЛота);
					мСтрокиСторнируемыхЗаписей = мТаблицаСторнируемыхЗаписейРазнарядки.НайтиСтроки(мОтборИдентификаторМесяц);
					Для Каждого мСторнируемаяСтрока Из мСтрокиСторнируемыхДвижений Цикл
						мСторнируемаяЗапись = мНаборЗаписейДополнительныеСведенияЗаявок.Добавить();
						ЗаполнитьЗначенияСвойств(мСторнируемаяЗапись, мСторнируемаяСтрока);
						мСторнируемаяЗапись.КоличествоТС = -1;
						мСторнируемаяЗапись.Регистратор = Ссылка;
						мСторнируемаяЗапись.ИдентификаторСтрокиЛота = мСтрокаТекущихДанных.ИдентификаторСтрокиЛота;
						мСторнируемаяЗапись.ДокументЛота = Ссылка;
						//мЗаписьОтсторнирована = Истина;
					КонецЦикла;
				КонецЕсли;
				
				мНоваяЗапись.Контрагент = Контрагент;
				мНоваяЗапись.Договор = Договор;
				
				ЗаполнитьЗначенияСвойств(мНоваяЗапись, мСтрокаТекущихДанных);
				
				мНоваяЗапись.Сменность = мСтрокаТекущихДанных["Сменность"];
				мНоваяЗапись.КоличествоТС = мСтрокаТекущихДанных["КоличествоТС"];
				мНоваяЗапись.ДнейВРаботеЗаСмену = мСтрокаТекущихДанных["ДнейВРаботеЗаСмену" + Итр];
				мСменоДней = мНоваяЗапись.Сменность * мНоваяЗапись.КоличествоТС * мНоваяЗапись.ДнейВРаботеЗаСмену;
				
				Если мСтрокаТекущихДанных["КоличествоТС"] = 0 Или мСтрокаТекущихДанных["ДнейВРаботеЗаСмену" + Итр] = 0 Или мСтрокаТекущихДанных["Сменность"] = 0 Или мСтрокаТекущихДанных.ТарифЧасовой < 1 Тогда
					мНоваяЗапись.СуммаЧасы = 1;
				Иначе
					мНоваяЗапись.СуммаЧасы = мСтрокаТекущихДанных.ТарифЧасовой * мСтрокаТекущихДанных.ЧасыРаботы * мСменоДней;
					мНоваяЗапись.СуммаУслуги = мСтрокаТекущихДанных.ТарифУслуга1 * мСтрокаТекущихДанных.КоличествоУслуга1 * мСменоДней
					+ мСтрокаТекущихДанных.ТарифУслуга2 * мСтрокаТекущихДанных.КоличествоУслуга2 * мСменоДней
					+ мСтрокаТекущихДанных.ТарифУслуга3 * мСтрокаТекущихДанных.КоличествоУслуга2 * мСменоДней;
				
					мНоваяЗапись.СуммаПробег = мСтрокаТекущихДанных.ТарифПробег * мСтрокаТекущихДанных.Пробег * мСменоДней;
				КонецЕсли;
				мНоваяЗапись.Номенклатура1 = Номенклатура1;
				мНоваяЗапись.Номенклатура2 = Номенклатура2;
				мНоваяЗапись.Номенклатура3 = Номенклатура3;
				
				мНоваяЗапись.ДокументЛота = Ссылка;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	мМассивИспользованныхИдентификаторов = Новый Массив;
	Для Каждого мСтрока Из ТаблицаЛотов Цикл
		Если мМассивИспользованныхИдентификаторов.Найти(мСтрока.ИдентификаторСтрокиЛота) <> Неопределено Тогда
			мСтрока.ИдентификаторСтрокиЛота = СокрЛП(Новый УникальныйИдентификатор);
		КонецЕсли;
		мМассивИспользованныхИдентификаторов.Добавить(мСтрока.ИдентификаторСтрокиЛота);
		Если мСтрока.ОграничениеПоВозрастуТС = 0 Тогда
			мСтрока.ОграничениеПоВозрастуТС = ОграничениеПоВозрастуТС;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Для Каждого мСтрокаСостава из ТаблицаЛотов Цикл
		мСтрокаСостава.ИдентификаторСтрокиЛота = Новый УникальныйИдентификатор;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьСторнируемыеИдентификаторыРазнарядки(пМассивИдентификаторов, пСторнируемыйЛот, пДата)
	мЗапрос = Новый Запрос("ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ДополнительныеСведенияЗаявок.Период, МЕСЯЦ) КАК НачалоМесяца,
	|	ДополнительныеСведенияЗаявок.Период КАК Период,
	|	ДополнительныеСведенияЗаявок.ИдентификаторСтрокиЗаявки КАК ИдентификаторСтрокиЗаявки,
	|	ДополнительныеСведенияЗаявок.КоличествоТС КАК КоличествоТС,
	|	ДополнительныеСведенияЗаявок.Комментарий КАК Комментарий,
	|	ДополнительныеСведенияЗаявок.МестоРаботы КАК МестоРаботы,
	|	ДополнительныеСведенияЗаявок.Ответственный КАК Ответственный,
	|	ДополнительныеСведенияЗаявок.ВремяПодачи КАК ВремяПодачи,
	|	ДополнительныеСведенияЗаявок.РежимРаботы КАК РежимРаботы,
	|	ДополнительныеСведенияЗаявок.СуточныйПробег КАК СуточныйПробег,
	|	ДополнительныеСведенияЗаявок.ПричинаОтмены КАК ПричинаОтмены,
	|	ДополнительныеСведенияЗаявок.Контрагент КАК Контрагент,
	|	ДополнительныеСведенияЗаявок.ТипТС КАК ТипТС,
	|	ДополнительныеСведенияЗаявок.ЦехМаршрут КАК ЦехМаршрут,
	|	ДополнительныеСведенияЗаявок.ПозицияПП КАК ПозицияПП,
	|	ДополнительныеСведенияЗаявок.ВремяВозврата КАК ВремяВозврата,
	|	ДополнительныеСведенияЗаявок.ИсходныеДанные КАК ИсходныеДанные,
	|	ДополнительныеСведенияЗаявок.ИдентификаторСтрокиЛота КАК ИдентификаторСтрокиЛота,
	|	ДополнительныеСведенияЗаявок.МоментВремени КАК МоментВремени
	|ИЗ
	|	РегистрНакопления.ДополнительныеСведенияЗаявок КАК ДополнительныеСведенияЗаявок
	|ГДЕ
	|	ДополнительныеСведенияЗаявок.ИдентификаторСтрокиЛота В(&МассивИдентификаторов) И ДополнительныеСведенияЗаявок.Регистратор = &СторнируемыйЛот
	|	И НАЧАЛОПЕРИОДА(ДополнительныеСведенияЗаявок.Период, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)");
	
	мЗапрос.УстановитьПараметр("МассивИдентификаторов", пМассивИдентификаторов);
	мЗапрос.УстановитьПараметр("СторнируемыйЛот", пСторнируемыйЛот);
	мЗапрос.УстановитьПараметр("Дата", пДата);
	
	мРезультат = мЗапрос.Выполнить().Выгрузить();
	Возврат мРезультат;
КонецФункции

Функция ПолучитьСторнируемыеДвижения(пМассивИдентификаторов, пСторнируемыйЛот)
	мЗапрос = Новый Запрос("ВЫБРАТЬ
	|	ЛотыПроизводственнойПрограммы.Идентификатор КАК Идентификатор,
	|	ЛотыПроизводственнойПрограммы.Период КАК Период,
	|	ЛотыПроизводственнойПрограммы.МесяцЛота КАК МесяцЛота,
	|	ЛотыПроизводственнойПрограммы.СуммаЧасы КАК СуммаЧасы,
	|	ЛотыПроизводственнойПрограммы.СуммаУслуги КАК СуммаУслуги,
	|	ЛотыПроизводственнойПрограммы.СуммаПробег КАК СуммаПробег,
	|	ЛотыПроизводственнойПрограммы.ГрупповойТип КАК ГрупповойТип,
	|	ЛотыПроизводственнойПрограммы.ТипТС КАК ТипТС,
	|	ЛотыПроизводственнойПрограммы.НаименованиеТипаКонтрагента КАК НаименованиеТипаКонтрагента,
	|	ЛотыПроизводственнойПрограммы.Контрагент КАК Контрагент,
	|	ЛотыПроизводственнойПрограммы.Договор КАК Договор,
	|	ЛотыПроизводственнойПрограммы.ТарифЧасовой КАК ТарифЧасовой,
	|	ЛотыПроизводственнойПрограммы.ТарифПробег КАК ТарифПробег,
	|	ЛотыПроизводственнойПрограммы.ТарифУслуга1 КАК ТарифУслуга1,
	|	ЛотыПроизводственнойПрограммы.ТарифУслуга2 КАК ТарифУслуга2,
	|	ЛотыПроизводственнойПрограммы.ТарифУслуга3 КАК ТарифУслуга3,
	|	ЛотыПроизводственнойПрограммы.ЧасыРаботы КАК ЧасыРаботы,
	|	ЛотыПроизводственнойПрограммы.КоличествоУслуга1 КАК КоличествоУслуга1,
	|	ЛотыПроизводственнойПрограммы.КоличествоУслуга2 КАК КоличествоУслуга2,
	|	ЛотыПроизводственнойПрограммы.КоличествоУслуга3 КАК КоличествоУслуга3,
	|	ЛотыПроизводственнойПрограммы.Пробег КАК Пробег,
	|	ЛотыПроизводственнойПрограммы.Сменность КАК Сменность,
	|	ЛотыПроизводственнойПрограммы.КоличествоТС КАК КоличествоТС,
	|	ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену КАК ДнейВРаботеЗаСмену,
	|	ЛотыПроизводственнойПрограммы.ОграничениеПоВозрастуТС КАК ОграничениеПоВозрастуТС,
	|	ЛотыПроизводственнойПрограммы.Номенклатура1 КАК Номенклатура1,
	|	ЛотыПроизводственнойПрограммы.Номенклатура2 КАК Номенклатура2,
	|	ЛотыПроизводственнойПрограммы.Номенклатура3 КАК Номенклатура3,
	|	ЛотыПроизводственнойПрограммы.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	ЛотыПроизводственнойПрограммы.РежимРаботы КАК РежимРаботы,
	|	ЛотыПроизводственнойПрограммы.МесторождениеСтрокой КАК МесторождениеСтрокой
	|ИЗ
	|	РегистрНакопления.ЛотыПроизводственнойПрограммы КАК ЛотыПроизводственнойПрограммы
	|ГДЕ ЛотыПроизводственнойПрограммы.Регистратор = &СторнируемыйЛот
	|	И ЛотыПроизводственнойПрограммы.Идентификатор В(&МассивИдентификаторов)");
	
	мЗапрос.УстановитьПараметр("МассивИдентификаторов", пМассивИдентификаторов);
	мЗапрос.УстановитьПараметр("СторнируемыйЛот", пСторнируемыйЛот);
	
	мРезультат = мЗапрос.Выполнить().Выгрузить();
	Возврат мРезультат;
КонецФункции

Функция ИнвертироватьЗначимыеРеквизиты(пЗапись)
	//инвертируем суммы для обнуления оборотов
	пЗапись.СуммаЧасы = пЗапись.СуммаЧасы * -1;
	пЗапись.СуммаУслуги = пЗапись.СуммаУслуги * -1;
	пЗапись.СуммаПробег = пЗапись.СуммаПробег * -1;
	//инвертируем самый важный реквизит, по которому ведется пересчет
	пЗапись.ДнейВРаботеЗаСмену = пЗапись.ДнейВРаботеЗаСмену * -1;
КонецФункции

Функция ПолучитьСтруктуруКалендаряГода(пДата)
	вСоответствие = Новый Соответствие;
	Для Итр = Месяц(пДата) По 12 Цикл
		мДатаМесяца = ДобавитьМесяц(НачалоГода(пДата), (Итр - 1));
		мРезультатСтруктура = ПолучитьСтруктуруКалендаряМесяца(мДатаМесяца);
		вСоответствие.Вставить(Итр, мРезультатСтруктура);
	КонецЦикла;
	Возврат вСоответствие;
КонецФункции

Функция ПолучитьСтруктуруКалендаряМесяца(пДата)
	//монструозное преобразование столбцов в строки, пока так... сильно не ругайте, но так быстрее и проще...
	мЗапрос = Новый Запрос("ВЫБРАТЬ
	|	5 КАК РабочихДнейВНеделе,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 0) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д1,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 1) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д2,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 2) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д3,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 3) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д4,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 4) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д5,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 5) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 6) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д7,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 7) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д8,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 8) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д9,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 9) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д10,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 10) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д11,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 11) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д12,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 12) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д13,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 13) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д14,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 14) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д15,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 15) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д16,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 16) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д17,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 17) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д18,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 18) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д19,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 19) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д20,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 20) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д21,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 21) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д22,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 22) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д23,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 23) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д24,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 24) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д25,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 25) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д26,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 26) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д27,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 27) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д28,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 28) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д29,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 29) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д30,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 30) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д31,
	|	Пятидневка КАК ВсегоДней
	|ИЗ
	|	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 0) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д1,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 1) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д2,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 2) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д3,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 3) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д4,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 4) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д5,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 5) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 6) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д7,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 7) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д8,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 8) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д9,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 9) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д10,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 10) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д11,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 11) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д12,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 12) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д13,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 13) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д14,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 14) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д15,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 15) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д16,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 16) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д17,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 17) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д18,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 18) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д19,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 19) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д20,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 20) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д21,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 21) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д22,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 22) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д23,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 23) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д24,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 24) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д25,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 25) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д26,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 26) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д27,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 27) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д28,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 28) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д29,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 29) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д30,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 30) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д31,
	|	Шестидневка
	|ИЗ
	|	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 0) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д1,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 1) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д2,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 2) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д3,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 3) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д4,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 4) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д5,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 5) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 6) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д7,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 7) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д8,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 8) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д9,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 9) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д10,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 10) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д11,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 11) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д12,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 12) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д13,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 13) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д14,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 14) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д15,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 15) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д16,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 16) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д17,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 17) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д18,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 18) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д19,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 19) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д20,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 20) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д21,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 21) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д22,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 22) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д23,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 23) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д24,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 24) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д25,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 25) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д26,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 26) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д27,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 27) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д28,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 28) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д29,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 29) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д30,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 30) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д31,
	|	КалендарныеДни
	|ИЗ
	|	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	8,	//Праздники
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 0) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д1,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 1) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д2,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 2) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д3,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 3) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д4,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 4) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д5,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 5) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 6) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д7,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 7) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д8,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 8) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д9,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 9) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д10,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 10) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д11,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 11) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д12,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 12) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д13,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 13) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д14,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 14) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д15,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 15) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д16,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 16) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д17,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 17) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д18,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 18) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д19,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 19) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д20,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 20) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д21,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 21) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д22,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 22) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д23,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 23) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д24,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 24) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д25,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 25) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д26,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 26) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д27,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 27) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д28,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 28) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д29,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 29) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д30,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 30) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д31,
	|	ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ
	|ИЗ
	|	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	9,	//Праздники + Выходные
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 0) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д1,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 1) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д2,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 2) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д3,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 3) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д4,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 4) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д5,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 5) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 6) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д7,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 7) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д8,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 8) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д9,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 9) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д10,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 10) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д11,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 11) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д12,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 12) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д13,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 13) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д14,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 14) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д15,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 15) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д16,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 16) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д17,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 17) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д18,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 18) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д19,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 19) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д20,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 20) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д21,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 21) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д22,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 22) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д23,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 23) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д24,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 24) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д25,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 25) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д26,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 26) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д27,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 27) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д28,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 28) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д29,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 29) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д30,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 30) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д31,
	|	ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ
	|ИЗ
	|	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	7,	//Весь месяц
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 0) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д1,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 1) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д2,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 2) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д3,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 3) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д4,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 4) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д5,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 5) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 6) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д7,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 7) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д8,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 8) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д9,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 9) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д10,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 10) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д11,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 11) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д12,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 12) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д13,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 13) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д14,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 14) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д15,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 15) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д16,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 16) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д17,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 17) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д18,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 18) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д19,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 19) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д20,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 20) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д21,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 21) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д22,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 22) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д23,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 23) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д24,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 24) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д25,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 25) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д26,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 26) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д27,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 27) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д28,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 28) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д29,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 29) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д30,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 30) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д31,
	|	ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ
	|ИЗ
	|	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)");
	
	мСтрокаДней = "д1,д2,д3,д4,д5,д6,д7,д8,д9,д10,д11,д12,д13,д14,д15,д16,д17,д18,д19,д20,д21,д22,д23,д24,д25,д26,д27,д28,д29,д30,д31";
	мЗапрос.УстановитьПараметр("Дата", НачалоМесяца(пДата));
	мРезультат = мЗапрос.Выполнить().Выгрузить();
	мРезультат.Свернуть("РабочихДнейВНеделе", "" + мСтрокаДней + ",ВсегоДней");
	
	вСтруктура = Новый Структура;
	Для Каждого мСтрока Из мРезультат Цикл
		мСтруктура = Новый Структура("РабочихДнейВНеделе," + мСтрокаДней + ",ВсегоДней");
		ЗаполнитьЗначенияСвойств(мСтруктура, мСтрока);
		вСтруктура.Вставить("Режим" + Строка(мСтрока.РабочихДнейВНеделе), мСтруктура);
	КонецЦикла;
	
	Возврат вСтруктура;
КонецФункции