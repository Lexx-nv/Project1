
&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Закрыть(СформироватьСтруктуруЗакрытия());
КонецПроцедуры

&НаКлиенте
Функция СформироватьСтруктуруЗакрытия()
	вСтруктура = Новый Структура;
	вСтруктура.Вставить("МассивСтрок", ПреобразоватьТаблицуВМассивСтруктурНаКлиенте(фТаблицаРазбиения, "ИдентификаторСтрокиЗаявки, ЦехМаршрут, ВремяПодачи, ВремяВозврата, ПозицияПП, МестоРаботы"));
	вСтруктура.Вставить("ПереносВДругойДокумент", фПереносВДругойДокумент);
	вСтруктура.Вставить("СтруктураПереноса", фСтруктураПереноса);
	Возврат вСтруктура;
КонецФункции

&НаКлиенте
Функция ПреобразоватьТаблицуВМассивСтруктурНаКлиенте(пТаблица, пСтрокаИменКолонок)
	вМассив = Новый Массив;
	Для Каждого мСтрока Из пТаблица Цикл
		мСтруктура = Новый Структура(пСтрокаИменКолонок);
		ЗаполнитьЗначенияСвойств(мСтруктура, мСтрока);
		вМассив.Добавить(мСтруктура);
	КонецЦикла;
	
	Возврат вМассив;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("Контрагент", фКонтрагент);
	Если Параметры.Свойство("ТаблицаРазбиения") Тогда
		фТаблицаРазбиения.Очистить();
		Для Каждого мЭлемент Из Параметры.ТаблицаРазбиения Цикл
			мНоваяСтрокаРазбиения = фТаблицаРазбиения.Добавить();
			ЗаполнитьЗначенияСвойств(мНоваяСтрокаРазбиения, мЭлемент);
		КонецЦикла;
	Иначе
		Отказ = Истина;
	КонецЕсли;
	Если Параметры.Свойство("СтруктураПереноса") Тогда
		фСтруктураПереноса = Параметры.СтруктураПереноса;
		Элементы.фТаблицаРазбивкиВставкаПереноса.Заголовок = "Вставить задание";
	Иначе
		фСтруктураПереноса = Неопределено;
		Элементы.фТаблицаРазбивкиВставкаПереноса.Заголовок = "Вырезать задание";
	КонецЕсли;
	Если Не Отказ Тогда
		Элементы.фТаблицаРазбивкиИдентификаторСтрокиЗаявки.Видимость = РольДоступна("уатАдминистратор");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура фТаблицаРазбивкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Или Копирование Тогда
		Элементы.фТаблицаРазбивки.ТекущиеДанные.ИдентификаторСтрокиЗаявки = СокрЛП(Новый УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВставкаПереноса(Команда)
	Если фСтруктураПереноса <> Неопределено Тогда
		мНоваяСтрокаРазбиения = фТаблицаРазбиения.Добавить();
		ЗаполнитьЗначенияСвойств(мНоваяСтрокаРазбиения, фСтруктураПереноса);
		фСтруктураПереноса = Неопределено;
		Элементы.фТаблицаРазбивкиВставкаПереноса.Доступность = Ложь;
		Элементы.фТаблицаРазбивкиПереносВДругойДокумент.Доступность = Истина;
	ИначеЕсли Элементы.фТаблицаРазбивки.ТекущиеДанные <> Неопределено Тогда
		фСтруктураПереноса = Новый Структура("ИдентификаторСтрокиЗаявки, ЦехМаршрут, ВремяПодачи, ВремяВозврата, ПозицияПП, МестоРаботы");
		ЗаполнитьЗначенияСвойств(фСтруктураПереноса, Элементы.фТаблицаРазбивки.ТекущиеДанные);
		
		фТаблицаРазбиения.Удалить(Элементы.фТаблицаРазбивки.ТекущиеДанные.ПолучитьИдентификатор());
		Элементы.фТаблицаРазбивкиВставкаПереноса.Доступность = Ложь;
		Элементы.фТаблицаРазбивкиПереносВДругойДокумент.Доступность = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПереносВДругойДокумент(Команда)
	Если Элементы.фТаблицаРазбивки.ТекущиеДанные <> Неопределено И фСтруктураПереноса = Неопределено Тогда
		//заполянем фСтруктураПереноса только если уже не заполнено (остается возможность перенести в другой док, если структура уже вырезана и носилась между строками разбивки текущего документа и подходящие строки не были найдены - можно зайти в любую разбивку и выполнить перенос подбором
		фСтруктураПереноса = Новый Структура("ИдентификаторСтрокиЗаявки, ЦехМаршрут, ВремяПодачи, ВремяВозврата, ПозицияПП, МестоРаботы");
		ЗаполнитьЗначенияСвойств(фСтруктураПереноса, Элементы.фТаблицаРазбивки.ТекущиеДанные);
		фТаблицаРазбиения.Удалить(Элементы.фТаблицаРазбивки.ТекущиеДанные.ПолучитьИдентификатор());
		Элементы.фТаблицаРазбивкиВставкаПереноса.Доступность = Ложь;
	КонецЕсли;
	фПереносВДругойДокумент = Истина;
	Закрыть(СформироватьСтруктуруЗакрытия());
КонецПроцедуры
