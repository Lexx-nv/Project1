////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБЪЕКТА

Перем Права Экспорт; // Переменная объекта - ссылка на коллекцию прав, настроек и переменных окружения.
Перем ТаблицаПоБилетам;


////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

Процедура ПроверитьЗаполнениеДокумента(СтруктураШапкиДокумента,Отказ, Заголовок)
	
	СтруктураПолей = Новый Структура("Организация, Автостанция, ТС, Сотрудник");
	уатОбщегоНазначенияТиповые.уатПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект,СтруктураПолей, Отказ, Заголовок);
	Если Отказ Тогда Возврат КонецЕсли;
	
КонецПроцедуры

// Процедура рассчитывает в строке табличной части суммовое значение комиссии автостанции
//
// Параметры:
//  СтрокаТабличнойЧасти - строка табличной части , требующая пересчёта
// 
Процедура ПересчетКомиссии(СтрокаТабличнойЧасти) Экспорт
	
	СтрокаТабличнойЧасти.КомиссияАвтостанции = СтрокаТабличнойЧасти.Сумма * Автостанция.Комиссия / 100;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА


#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Функция списания материалов с регистра ТоварыНаСкладе
//
Функция ФормированиеДвиженийПоВыручке(Отказ, Заголовок, РежимПроведения)
	
	НаборДвижений   = Движения.уатВыручка;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Для Каждого ТекСтрока Из Билеты Цикл
		НоваяСтрока 					= ТаблицаДвижений.Добавить();
		НоваяСтрока.Период 				= Дата;
		НоваяСтрока.Сотрудник 			= Сотрудник;
		НоваяСтрока.Организация 		= Организация;
		НоваяСтрока.ПутевойЛист 		= ТекСтрока.ПутевойЛист;
		НоваяСтрока.ТС 					= ТС;
		НоваяСтрока.Автостанция 		= Автостанция;
		НоваяСтрока.Маршрут 			= ТекСтрока.Маршрут;
		НоваяСтрока.Билет 				= ТекСтрока.Билет;
		НоваяСтрока.Количество 			= ТекСтрока.Количество;
		НоваяСтрока.Сумма 				= ТекСтрока.Сумма - ТекСтрока.КомиссияАвтостанции;
		НоваяСтрока.КомиссияАвтостанции	= ТекСтрока.КомиссияАвтостанции;
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	НаборДвижений.УстановитьАктивность(Истина);

КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(Ссылка);
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	ПроверитьЗаполнениеДокумента(СтруктураШапкиДокумента,Отказ, Заголовок);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ФормированиеДвиженийПоВыручке(Отказ, "", РежимПроведения);
	
КонецПроцедуры
	
Процедура ОбработкаЗаполнения(Основание)
	Если ТипЗнч(Основание) = Тип("Форма") ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.уатПутевойЛист") Тогда
		Организация = Основание.Организация;
		Ответственный = Основание.Ответственный;
		ТС = Основание.ТранспортноеСредство;
		Сотрудник = Основание.Водитель1;
		
		Если Не ЗначениеЗаполнено(Дата) Тогда
			Дата = Основание.ДатаВыезда;
		КонецЕсли;
		
		//добавим основной ТС
		НоваяСтрока 				= Билеты.Добавить();
		НоваяСтрока.ПутевойЛист 	= Основание.Ссылка;
		//
		Для Каждого ТекСтрока Из Основание.Задание Цикл
			Если ЗначениеЗаполнено(ТекСтрока.Маршрут) Тогда
				НоваяСтрока.Маршрут = ТекСтрока.Маршрут;
				Прервать
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

#КонецЕсли

// Процедура вызывается перед записью документа 
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	уатОбщегоНазначения.уатПроверкаПравПередЗаписьюВДокументах(ЭтотОбъект, Отказ, , Права);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	
	
	СуммаДокумента = Билеты.Итог("Сумма");
	
КонецПроцедуры // ПередЗаписью

////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

// сохранение ссылки на коллекцию прав, настроек и окружения
Права = Неопределено;
#Если Клиент Тогда
	Права = глПраваУАТ;	
#КонецЕсли
