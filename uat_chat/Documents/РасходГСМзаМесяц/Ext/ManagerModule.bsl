
//Функция проверяет закрытие всех путевых листов за месяц,
//по которым работа осуществлялась "на себя"
//Возвращает "Истина", если хотя бы один путевой лист не закрыт
Функция ПроверкаРаботыНаСебя(ДокСсылка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РаботаТСОстатки.Контрагент,
		|	РаботаТСОстатки.ПутевойЛист,
		|	РаботаТСОстатки.ТалонОстаток
		|ИЗ
		|	РегистрНакопления.РаботаТС.Остатки(&КонецПериода, ) КАК РаботаТСОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.ксНашаОрганизация КАК ксНашаОрганизация
		|		ПО РаботаТСОстатки.Контрагент = ксНашаОрганизация.Значение
		|ГДЕ
		|	РаботаТСОстатки.ТалонОстаток <> 0
		|	И РаботаТСОстатки.ПутевойЛист.Дата МЕЖДУ &НачалоПериода И &КонецПериода";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДокСсылка.Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ДокСсылка.Дата));
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой()Тогда
		Таб = Новый ("ТабличныйДокумент");
		Макет = Документы.РасходГСМзаМесяц.ПолучитьМакет("МакетПроверкаРаботыНаСебя");
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Строка = Макет.ПолучитьОбласть("Строка");
		Подвал = Макет.ПолучитьОбласть("Подвал");
		
		Шапка.Параметры.Заполнить(ДокСсылка.Ссылка.ПолучитьОбъект());
		Таб.вывести(Шапка);

		Счетчик = 1;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Строка.Параметры.Заполнить(Выборка);
			Строка.Параметры.Счетчик = Счетчик;
			Таб.вывести(Строка);
			Счетчик = Счетчик + 1;
		КонецЦикла;
		
		Таб.вывести(Подвал);
		
		Таб.ТолькоПросмотр = Истина;
		Таб.ОтображатьЗаголовки = Ложь;
		Таб.ОтображатьСетку = Ложь;
		Таб.Показать();
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции	

//Функция проверяет наличие "красноты" в отчете "Отчет по ГСМ" на конец месяца
//и если краснота есть, выводим отчет и блокируем проведение документа
Функция КрасныйОтчетПоГСМ(ДокСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Тбл.ТС,
		|	Тбл.ТС.ГаражныйНомер,
		|	ЕСТЬNULL(ТблПЛ.Кол, СУММА(Тбл.КоличествоОстаток)) КАК КонПЛ,
		|	СУММА(Тбл.КоличествоОстаток + Тбл.КоличествоПриходПЛ + Тбл.КоличествоПриходПЛ1 + Тбл.КоличествоПриходСливПЛ + Тбл.КоличествоПриходСливПЛ1 - Тбл.Расход - Тбл.РасходСлив - Тбл.РасходСливСклад) КАК КонРС,
		|	СУММА(Тбл.КоличествоОстаток + Тбл.КоличествоПриходПЛ + Тбл.КоличествоПриходПЛ1 + Тбл.КоличествоПриходСливПЛ + Тбл.КоличествоПриходСливПЛ1 - Тбл.Расход - Тбл.РасходСлив - Тбл.РасходСливСклад) - ЕСТЬNULL(ТблПЛ.Кол, СУММА(Тбл.КоличествоОстаток)) КАК Разница
		|ИЗ
		|	(ВЫБРАТЬ
		|		уатОстаткиГСМнаТСОстатки.ТС КАК ТС,
		|		уатОстаткиГСМнаТСОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|		0 КАК КоличествоПриход,
		|		0 КАК КоличествоПриход1,
		|		0 КАК КоличествоПриходПЛ,
		|		0 КАК КоличествоПриходПЛ1,
		|		0 КАК Расход,
		|		0 КАК Норма,
		|		0 КАК КоличествоПриходСлив,
		|		0 КАК КоличествоПриходСлив1,
		|		0 КАК КоличествоПриходСливПЛ,
		|		0 КАК КоличествоПриходСливПЛ1,
		|		0 КАК РасходСливСклад,
		|		0 КАК РасходСлив
		|	ИЗ
		|		РегистрНакопления.уатОстаткиГСМнаТС.Остатки(&НачПер, ) КАК уатОстаткиГСМнаТСОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		уатОстаткиГСМнаТСОбороты.ТС,
		|		0,
		|		ВЫБОР
		|			КОГДА уатОстаткиГСМнаТСОбороты.БакОсновной
		|				ТОГДА уатОстаткиГСМнаТСОбороты.КоличествоПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА уатОстаткиГСМнаТСОбороты.БакОсновной
		|				ТОГДА 0
		|			ИНАЧЕ уатОстаткиГСМнаТСОбороты.КоличествоПриход
		|		КОНЕЦ,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		РегистрНакопления.уатОстаткиГСМнаТС.Обороты(&НачПер, &КонПер, , ) КАК уатОстаткиГСМнаТСОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		уатОстаткиГСМнаТСОбороты.ТС,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА уатОстаткиГСМнаТСОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					И уатОстаткиГСМнаТСОбороты.БакОсновной
		|				ТОГДА уатОстаткиГСМнаТСОбороты.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА уатОстаткиГСМнаТСОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					И уатОстаткиГСМнаТСОбороты.БакОсновной = ЛОЖЬ
		|				ТОГДА уатОстаткиГСМнаТСОбороты.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА уатОстаткиГСМнаТСОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|					И уатОстаткиГСМнаТСОбороты.Слив = 2
		|				ТОГДА уатОстаткиГСМнаТСОбороты.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА уатОстаткиГСМнаТСОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|					И уатОстаткиГСМнаТСОбороты.Слив = 1
		|				ТОГДА уатОстаткиГСМнаТСОбороты.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.уатОстаткиГСМнаТС КАК уатОстаткиГСМнаТСОбороты
		|	ГДЕ
		|		уатОстаткиГСМнаТСОбороты.Слив <> 0
		|		И уатОстаткиГСМнаТСОбороты.Период >= &НачПер
		|		И уатОстаткиГСМнаТСОбороты.Период <= &КонПер
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		уатПутевойЛист.ТранспортноеСредство,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА ДокЗап.ОборудованиеРабота = ЗНАЧЕНИЕ(Справочник.ОборудованиеРаботыГСМ.ПустаяССылка)
		|					И ДокЗап.АЗС <> ЗНАЧЕНИЕ(Справочник.уатАЗС.Слив)
		|				ТОГДА ДокЗап.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ДокЗап.ОборудованиеРабота <> ЗНАЧЕНИЕ(Справочник.ОборудованиеРаботыГСМ.ПустаяССылка)
		|					И ДокЗап.АЗС <> ЗНАЧЕНИЕ(Справочник.уатАЗС.Слив)
		|				ТОГДА ДокЗап.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА ДокЗап.ОборудованиеРабота = ЗНАЧЕНИЕ(Справочник.ОборудованиеРаботыГСМ.ПустаяССылка)
		|					И ДокЗап.АЗС = ЗНАЧЕНИЕ(Справочник.уатАЗС.Слив)
		|				ТОГДА ДокЗап.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ДокЗап.ОборудованиеРабота <> ЗНАЧЕНИЕ(Справочник.ОборудованиеРаботыГСМ.ПустаяССылка)
		|					И ДокЗап.АЗС = ЗНАЧЕНИЕ(Справочник.уатАЗС.Слив)
		|				ТОГДА ДокЗап.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		0,
		|		0
		|	ИЗ
		|		Документ.уатПутевойЛист КАК уатПутевойЛист
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.уатПутевойЛист.Заправки КАК ДокЗап
		|			ПО (ДокЗап.Ссылка = уатПутевойЛист.Ссылка)
		|	ГДЕ
		|		уатПутевойЛист.Дата >= &НачПер
		|		И уатПутевойЛист.Дата <= &КонПер
		|		И уатПутевойЛист.Проведен = ИСТИНА
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		уатРасходГСМнаТСОбороты.ТС,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		уатРасходГСМнаТСОбороты.РасходПоФактуОборот,
		|		уатРасходГСМнаТСОбороты.РасходПоНормеОборот,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		РегистрНакопления.уатРасходГСМнаТС.Обороты(&НачПер, &КонПер, , ) КАК уатРасходГСМнаТСОбороты) КАК Тбл
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			уатСчетчикиТССрез1.ТС КАК ТС,
		|			уатСчетчикиТССрез1.ОстатокТопливаВозврат + уатСчетчикиТССрез1.ОстатокТопливаВозврат1 КАК Кол
		|		ИЗ
		|			РегистрСведений.уатСчетчикиТС.СрезПоследних(&КонПер, ) КАК уатСчетчикиТССрез1) КАК ТблПЛ
		|		ПО (ТблПЛ.ТС = Тбл.ТС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			уатСчетчикиТССрез2.ТС КАК ТС,
		|			уатСчетчикиТССрез2.ОстатокТопливаВыезд + уатСчетчикиТССрез2.ОстатокТопливаВыезд1 КАК Кол
		|		ИЗ
		|			РегистрСведений.уатСчетчикиТС.СрезПервых(&НачПер, ) КАК уатСчетчикиТССрез2
		|		ГДЕ
		|			уатСчетчикиТССрез2.Период <= &КонПер) КАК ТблПЛнач
		|		ПО (ТблПЛнач.ТС = Тбл.ТС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Рег.ТС КАК ТС,
		|			СУММА(Рег.Количество) КАК Пробег
		|		ИЗ
		|			РегистрНакопления.уатВыработкаТС КАК Рег
		|		ГДЕ
		|			Рег.Период >= &НачПер
		|			И Рег.Период <= &КонПер
		|			И Рег.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ПробегОбщий)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Рег.ТС) КАК ТблПрб
		|		ПО (ТблПрб.ТС = Тбл.ТС)
		|
		|СГРУППИРОВАТЬ ПО
		|	Тбл.ТС,
		|	ТблПЛ.Кол,
		|	ТблПЛнач.Кол,
		|	ЕСТЬNULL(ТблПрб.Пробег, 0),
		|	Тбл.ТС.ГаражныйНомер
		|
		|ИМЕЮЩИЕ
		|	СУММА(Тбл.КоличествоОстаток + Тбл.КоличествоПриходПЛ + Тбл.КоличествоПриходПЛ1 + Тбл.КоличествоПриходСливПЛ + Тбл.КоличествоПриходСливПЛ1 - Тбл.Расход - Тбл.РасходСлив - Тбл.РасходСливСклад) - ЕСТЬNULL(ТблПЛ.Кол, СУММА(Тбл.КоличествоОстаток)) <> 0";
	
	
	Запрос.УстановитьПараметр("НачПер", НачалоМесяца(ДокСсылка.Дата));
	Запрос.УстановитьПараметр("КонПер", КонецМесяца(ДокСсылка.Дата));
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой()Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции	

//Функция проверяет наличие галочки "выполнен" в документе "Ремонтный лист"
//при этом зата окончания ремонта входит в текущий период
Функция КонтрольВыполненияРемЛистов(ДокСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	уатРемонтныйЛист.Ссылка
		|ИЗ
		|	Документ.уатРемонтныйЛист КАК уатРемонтныйЛист
		|ГДЕ
		|	уатРемонтныйЛист.ДатаОкончания МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И уатРемонтныйЛист.Выполнен = ЛОЖЬ
		|	И уатРемонтныйЛист.ПометкаУдаления = ЛОЖЬ";
	
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(ДокСсылка.Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ДокСсылка.Дата));
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой()Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции	

