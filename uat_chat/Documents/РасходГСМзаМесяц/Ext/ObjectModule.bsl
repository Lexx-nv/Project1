Процедура ЗаполнитьТабЧасть() Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТС,
	               |	БакОсновной,
	               |	Партия,
	               |	ДокПартии,
	               |	ГСМ,
	               |	Инд,
	               |	СУММА(Кол) КАК Кол
				   |	
				   |FROM	
				   |(	
				   |ВЫБРАТЬ	
	               |	уатОстаткиГСМнаТСОстатки.ТС КАК ТС,
	               |	уатОстаткиГСМнаТСОстатки.БакОсновной КАК БакОсновной,
	               |	уатОстаткиГСМнаТСОстатки.Партия КАК Партия,
	               |	уатОстаткиГСМнаТСОстатки.ДокПартии КАК ДокПартии,
	               |	уатОстаткиГСМнаТСОстатки.ГСМ КАК ГСМ,
	               |	СУММА(уатОстаткиГСМнаТСОстатки.КоличествоОстаток) КАК Кол,
				   |    уатОстаткиГСМнаТСОстатки.ДокПартии.Дата Инд
	               |ИЗ
	               |	РегистрНакопления.уатОстаткиГСМнаТС.Остатки(&Дт, ) КАК уатОстаткиГСМнаТСОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	уатОстаткиГСМнаТСОстатки.ТС,
	               |	уатОстаткиГСМнаТСОстатки.БакОсновной,
	               |	уатОстаткиГСМнаТСОстатки.Партия,
	               |	уатОстаткиГСМнаТСОстатки.ДокПартии,
	               |	уатОстаткиГСМнаТСОстатки.ГСМ
				   |
				   |UNION ALL
				   |
				   |ВЫБРАТЬ
				   |	уатОстаткиГСМнаТСОбороты.ТС,
				   |	уатОстаткиГСМнаТСОбороты.БакОсновной,
				   |	уатОстаткиГСМнаТСОбороты.Партия,
				   |	уатОстаткиГСМнаТСОбороты.ДокПартии,
				   |	уатОстаткиГСМнаТСОбороты.ГСМ,
				   |	СУММА(уатОстаткиГСМнаТСОбороты.КоличествоПриход-уатОстаткиГСМнаТСОбороты.КоличествоРасход),
				   |	уатОстаткиГСМнаТСОбороты.ДокПартии.Дата Инд
				   |ИЗ
				   |	РегистрНакопления.уатОстаткиГСМнаТС.Обороты(&Дт, &конПер, , ) КАК уатОстаткиГСМнаТСОбороты
	               |СГРУППИРОВАТЬ ПО
				   |	уатОстаткиГСМнаТСОбороты.ТС,
				   |	уатОстаткиГСМнаТСОбороты.БакОсновной,
				   |	уатОстаткиГСМнаТСОбороты.Партия,
				   |	уатОстаткиГСМнаТСОбороты.ДокПартии,
				   |	уатОстаткиГСМнаТСОбороты.ГСМ
				   |
				   |) WWW
	               |СГРУППИРОВАТЬ ПО
	               |	ТС,
	               |	БакОсновной,
	               |	Партия,
	               |	ДокПартии,
	               |	ИНд,
	               |	ГСМ
				   |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТС,
	               |	БакОсновной,
	               |	Инд,
	               |	ДокПартии,
	               |	Партия,
	               |	ГСМ
				   |
				   |";
				   
				   
				   
				   Запрос.УстановитьПараметр("Дт",НачалоМЕсяца(Дата));
				   Запрос.УстановитьПараметр("КонПер",КонецМесяца(Дата));
				   
		тбПрх = Запрос.Выполнить().Выгрузить();
		
		
		Запрос.Текст = "
		               | ВЫБРАТЬ
		               |	уатМестонахождениеТССрезПоследних.ТС,
		               |	уатМестонахождениеТССрезПоследних.Подразделение,
		               |	уатМестонахождениеТССрезПоследних.Период
		               |	INTO ВРТбл
		               |ИЗ
		               |	РегистрСведений.уатМестонахождениеТС.СрезПоследних(&НачПер) КАК уатМестонахождениеТССрезПоследних
		               |	
		               |UNION ALL
		               |	
		               |ВЫБРАТЬ
		               |	уатМестонахождениеТС.ТС,
		               |	уатМестонахождениеТС.Подразделение,
		               |	уатМестонахождениеТС.Период
		               |ИЗ
		               |	РегистрСведений.уатМестонахождениеТС КАК уатМестонахождениеТС
		               |	WHERE Период > &НачПер и Период < &КонПер
		               |;
		               |	
		               |SELECT  DISTINCT
		               |	Тбл.ТС,
		               |	Тбл.Подразделение,
		               |	Тбл.Период,
		               |	MIN(ISNULL(Т.Период,&КонПер)) ПериодКон,
		               |	Тбл.Период изначДт
		               |INTO ВРТбл1	
		               |FROM ВРТбл Тбл 
		               |LEFT OUTER JOIN ВРТбл Т ON Т.ТС = Тбл.ТС и Т.Период > Тбл.Период
					   |GROUP BY		
		               |	Тбл.ТС,
		               |	Тбл.Подразделение,
		               |	Тбл.Период
		               |;	
		               |SELECT DISTINCT
		               |	Тбл.ТС,
		               |	Тбл.Подразделение,
		               |	Тбл.Период,
		               |	Тбл.ПериодКон
		               |INTO ВРПодр
		               |FROM ВРТбл1 Тбл
					   |INNER JOIN (SELECT ТС,Период, MAX(изначДт) изначДТ FROM ВРТбл1 Т1 GROUP BY ТС,Период) Т ON Т.ТС = ТБл.ТС и Т.ИзначДт = Тбл.ИзначДт и Т.Период = Тбл.Период
		               |
		               |;
		               |//////////////////////////////////////////////////////
		               |
		               |
		               |ВЫБРАТЬ
		               |    Тбл.Подразделение,
		               |    НачалоПериода(уатРасходГСМнаТСОбороты.Период,День) ДтПер,
		               |	уатРасходГСМнаТСОбороты.ТС КАК ТС,
		               |	уатРасходГСМнаТСОбороты.Оборудование КАК Оборудование,
		               |	уатРасходГСМнаТСОбороты.Контрагент КАК Контрагент,
		               |	уатРасходГСМнаТСОбороты.Цех КАК Цех,
		               |	СУММА(уатРасходГСМнаТСОбороты.РасходПоФакту) КАК Кол,
		               |	СУММА(уатРасходГСМнаТСОбороты.РасходПоНорме) КАК Норма,
		               |	уатРасходГСМнаТСОбороты.Оборудование.ЕстьБак КАК ЕстьБак
		               |ИЗ
		               |	РегистрНакопления.уатРасходГСМнаТС КАК уатРасходГСМнаТСОбороты
		               |LEFT OUTER JOIN ВРПодр Тбл ON Тбл.ТС = уатРасходГСМнаТСОбороты.ТС и уатРасходГСМнаТСОбороты.Период >= Тбл.Период и  уатРасходГСМнаТСОбороты.Период < Тбл.ПериодКон
		               |WHERE уатРасходГСМнаТСОбороты.Период >= &НачПер
		               |    и уатРасходГСМнаТСОбороты.Период <  &КонПер
		               |
		               |СГРУППИРОВАТЬ ПО
		               |    Тбл.Подразделение,
		               |    НачалоПериода(уатРасходГСМнаТСОбороты.Период,День) ,
		               |	уатРасходГСМнаТСОбороты.ТС,
		               |	уатРасходГСМнаТСОбороты.Оборудование,
		               |	уатРасходГСМнаТСОбороты.Контрагент,
		               |	уатРасходГСМнаТСОбороты.Цех,
		               |	уатРасходГСМнаТСОбороты.Оборудование.ЕстьБак
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ТС,
		               |    ДтПер,
		               |	Контрагент,
		               |	Оборудование";
					   
					   Запрос.УстановитьПараметр("НачПер",НачалоМЕсяца(Дата));
					   Запрос.УстановитьПараметр("КонПер",КонецМЕсяца(Дата)+1);
					   тбРсх = Запрос.Выполнить().Выгрузить();
					   
	ТБл = РАсходГСМ.ВыгрузитьКолонки();					   
					   
   Для каждого стРсх из тбРсх Цикл
	   
	   итРсх = стРсх.Кол;
	   итНор = стРсх.Норма;
	   
	   Мас = тбПрх.НайтиСтроки(Новый Структура("ТС,БакОсновной",стРсх.ТС,Не стРсх.ЕстьБак));
	   Если Мас<>Неопределено ТОгда
		   Для каждого эл из Мас Цикл
			   
			   Если итРсх=0 Тогда ПРервать; КонецЕСЛИ;
			   
			   Стр = Тбл.Добавить();
			   ЗаполнитьЗначенияСвойств(Стр,стРсх);
			   Стр.Количество = Мин(итРсх,Эл.Кол);
			   Стр.КоличествоНорма = ?(Стр.Количество = итРсх,итНор,ОКР(стРсх.Норма * (Стр.Количество / стРсх.Кол),3,1));
			   Стр.ГСМ = Эл.ГСМ;
			   Стр.Партия = Эл.Партия;
			   Стр.ДокПартии = Эл.ДокПартии;
			   Стр.БакОсновной = Эл.БакОсновной;
			   
			   итРСх  = итРсх-Стр.Количество;
			   итНор  = итНор-Стр.КоличествоНорма;
			   
			   Эл.Кол = Эл.Кол - Стр.Количество;
			   
			   Если Эл.Кол = 0 Тогда 
				   тбПрх.Удалить(Эл); 
			   КонецЕСЛИ;
			   
		   КонецЦикла;
	   КонецеСЛИ;
	   
	   Если итРсх<>0 Тогда
		   Стр = Тбл.Добавить();
		   ЗаполнитьЗначенияСвойств(Стр,стРсх);
		   Стр.Количество = итРсх;
		   Сообщить("Недостаточно топлива для списания по "+стРсх.ТС.ГаражныйНомер+" - "+стРсх.ТС+" - "+стРсх.ТС.ГосударственныйНомер);
	   КонецЕСЛИ;
	   
	   
   КонецЦиклА;
   
   Тбл.свернуть("ТС,Оборудование,Контрагент,ГСМ,Партия,БакОсновной,Подразделение,Цех,ДокПартии","Количество,КоличествоНорма");
   
   РасходГСМ.Загрузить(Тбл);
	
КонецПроцедуры

//При обмене с перф. базой могут появиться пустые ПЛ
Функция ПроверкаПЛбезРасхода()
	БезОшибок=Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	уатПутевойЛист.Ссылка,
	               |	уатПутевойЛист.ОстатокТопливаВыезд + уатПутевойЛист.ОстатокТопливаВыезд1 + уатПутевойЛист.ВыданоГСМ + уатПутевойЛист.ВыданоГСМ1 - уатПутевойЛист.ОстатокТопливаВозврат - уатПутевойЛист.ОстатокТопливаВозврат1 КАК Рсх
	               |ИЗ
	               |	Документ.уатПутевойЛист КАК уатПутевойЛист
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.уатРасходГСМнаТС КАК уатРасходГСМнаТС
	               |		ПО (уатРасходГСМнаТС.Регистратор = уатПутевойЛист.Ссылка)
				   |   LEFT OUTER JOIN РегистрСведений.уатМестонахождениеТС.СрезПоследних() Рег ON Рег.ТС = уатПутевойЛист.ТранспортноеСредство
				   |
	               |ГДЕ
	               |	уатПутевойЛист.Проведен = ИСТИНА
	               |	И уатПутевойЛист.Дата >= &Дт1
	               |	И уатПутевойЛист.Дата <  &Дт2
				   |    и Рег.Состояние <> Значение(Справочник.уатСостояниеТС.Привлеченный)
	               |	И уатПутевойЛист.ОстатокТопливаВыезд + уатПутевойЛист.ОстатокТопливаВыезд1 + уатПутевойЛист.ВыданоГСМ + уатПутевойЛист.ВыданоГСМ1 - уатПутевойЛист.ОстатокТопливаВозврат - уатПутевойЛист.ОстатокТопливаВозврат1 <> 0
	               |	И уатРасходГСМнаТС.Регистратор ЕСТЬ NULL ";
				   Запрос.УстановитьПараметр("Дт1",НачалоМесяца(Дата));
				   Запрос.УстановитьПараметр("Дт2",КонецМесяца(Дата)+1);
				   
		Тбл = Запрос.Выполнить().Выгрузить();
		Для каждого Стр из Тбл Цикл
			Сообщить("Ошибка расхода ГСМ в докумете "+Стр.ссылка);	
			БезОшибок = Ложь;
		КонецЦикла;
		
		Возврат БезОшибок;
		
	КонецФункции
	
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//Если у пользователя в регистре сведений "уатПраваИНастройки" для права "Пользователь является администратором системы" стоит "Истина", то никаких проверок делать не будем
	ФлагАдминистраторСистемы = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ПараметрыСеанса.ТекущийПользователь, ПланыВидовХарактеристик.уатПраваИНастройки.ПользовательАдминистратор);
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроверкаПЛбезРасхода()=Ложь Тогда
		Отказ = Истина;
		Возврат;
	КонЕЦЕСЛИ;
	
	ЗаполнитьТабЧасть();	
	Записать();
	
	ТБл = РасходГСМ.Выгрузить();
	Тбл.Колонки.Добавить("ВидДвижения");
	Тбл.Колонки.Добавить("Период");
	Тбл.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход,"ВидДВижения");
	Тбл.ЗаполнитьЗначения(КонецМЕсяца(Дата),"Период");
	Движения.уатОстаткиГСМнаТС.Загрузить(Тбл);
	Движения.уатОстаткиГСМнаТС.Записать();
	
	ЕСли ЕстьОтрицательныеОстатки() ТОгда
		Отказ = Истина;
	КонецЕСлИ;
	
	//Проверим, а есть ли "краснота" на конец текущего месяца в отчете "Отчет по ГСМ"
	//и если есть, то балалайка
	ЕСли Документы.РасходГСМзаМесяц.КрасныйОтчетПоГСМ(Ссылка) И (Не ФлагАдминистраторСистемы) ТОгда
		Сообщить("За текущий месяц обнаружена ""краснота"" в отчете ""Отчет по ГСМ"" на конец месяца. Исправьте ситуацию и возвращайтесь к закрытию ГСМ!!!");
		Отказ = Истина;
	КонецЕСлИ;
	
	//Проверим, а закрыт ли период по субподряду за прошлый месяц
	//И если не закрыт, то поругаемся!!!
	Если Не глОбщий.ЗакрытПериодПоСубподряду(ДобавитьМесяц(Дата,-1)) И (Не ФлагАдминистраторСистемы) Тогда
		Сообщить("За прошлый период не обнаружен проведенный документ ""Закрытие периода по субподряду"". Исправьте ситуацию и возвращайтесь к закрытию ГСМ!!!");
		Отказ = Истина;
	КонецЕсли;	
	
	//Проверим, а у всех ли ремонтных листов, дата окончания которых была в текущем месяце поставлена галочка "Выполнен"
	//И если такие есть, то поругаемся!!!
	Если Документы.РасходГСМзаМесяц.КонтрольВыполненияРемЛистов(Ссылка) И (Не ФлагАдминистраторСистемы) Тогда
		Сообщить("За текущий месяц есть окончившиеся рем. листы у которых не стоит галочка ""Выполнен""!!!");
		Отказ = Истина;
	КонецЕсли;	
	
КонецПроцедуры

Функция ЕстьОтрицательныеОстатки()    
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	уатОстаткиГСМнаТСОстатки.ТС,
	               |	уатОстаткиГСМнаТСОстатки.ГСМ,
	               |	уатОстаткиГСМнаТСОстатки.Партия,
	               |	уатОстаткиГСМнаТСОстатки.Партия.Контрагент_Склад Контрагент,
	               |	уатОстаткиГСМнаТСОстатки.ДокПартии,
	               |	уатОстаткиГСМнаТСОстатки.БакОсновной,
	               |	-SUM(уатОстаткиГСМнаТСОстатки.КоличествоОстаток) Количество
	               |ИЗ
	               |	РегистрНакопления.уатОстаткиГСМнаТС.Остатки(&Дт,) КАК уатОстаткиГСМнаТСОстатки
				   |GROUP BY
	               |	уатОстаткиГСМнаТСОстатки.ТС,
	               |	уатОстаткиГСМнаТСОстатки.ГСМ,
	               |	уатОстаткиГСМнаТСОстатки.Партия,
	               |	уатОстаткиГСМнаТСОстатки.Партия.Контрагент_Склад,
	               |	уатОстаткиГСМнаТСОстатки.ДокПартии,
	               |	уатОстаткиГСМнаТСОстатки.БакОсновной
				   |
				   |HAVING SUM(уатОстаткиГСМнаТСОстатки.КоличествоОстаток)<0
				   |";
   Запрос.УстановитьПараметр("Дт",КонецМесяца(Дата)+1);
   ТБл =Запрос.Выполнить().Выгрузить();
   
   Рез = Ложь;
   Для каждого Стр из ТБл Цикл
	   
	   Сообщить("Есть отрицательные остатки по "+Стр.ТС.ГаражныйНомер+" "+Стр.ТС+" : "+Стр.Количество+" л.");
	   Рез = Истина;
   КонецЦикла;
   
   Возврат Рез;
   
КонецФункции

//Если за указанный месяц есть проведенный документ "ЗакрытиеПериодаПоСубподряду"
//редактирование этого документа ЗАПРЕЩЕНО
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//Если у пользователя в регистре сведений "уатПраваИНастройки" для права "Пользователь является администратором системы" стоит "Истина", то никаких проверок делать не будем
	ФлагАдминистраторСистемы = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ПараметрыСеанса.ТекущийПользователь, ПланыВидовХарактеристик.уатПраваИНастройки.ПользовательАдминистратор);
	Если ФлагАдминистраторСистемы Тогда
		Возврат;
	КонецЕсли;	
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	Если глОбщий.ЗакрытПериодПоСубподряду(Дата) ТОгда
		Сообщить("В текущем месяце есть проведенный документ ""Закрытие периода по субподряду"". Редактирование производственных документов запрещено!");
		Отказ = Истина;
		ВозвраТ;
	КонецЕСЛИ;
КонецПроцедуры
