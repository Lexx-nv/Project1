////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБЪЕКТА

Перем Права Экспорт; // Переменная объекта - ссылка на коллекцию прав, настроек и переменных окружения.


//=================================================================================
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
	
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(НазваниеМакета = "", КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не ?(Права = Неопределено, Ложь, уатПраваИНастройки.уатПраво("ПечатьНепроведенных", Права)) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;
	
	Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(НазваниеМакета) = Тип("СправочникСсылка.ВнешниеОбработки") Тогда
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ОбъектВнешнейФормы = НазваниеМакета.ПолучитьОбъект();
		Если ОбъектВнешнейФормы = Неопределено Тогда
			Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;			
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Попытка
			Обработка.СсылкаНаОбъект = Ссылка;
			ТабДокумент = Обработка.Печать();
			уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Права);
		Исключение
			Сообщить("Ошибка формата внешней обработки. Возможно выбрана обработка не для печати.", СтатусСообщения.Важное);
		КонецПопытки;
		
	КонецЕсли;		
КонецПроцедуры

#КонецЕсли


//=================================================================================
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ,РежимЗаписи , РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначения.уатПроверкаПравПередЗаписьюВДокументах(ЭтотОбъект, Отказ, , Права);
КонецПроцедуры // ПередЗаписью

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	Документы.уатОтклонениеГруза.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	уатПроведение.ОтразитьЗаказыНаТС(ДополнительныеСвойства, Движения, Отказ);
	уатПроведение.ОтразитьПричиныЗакрытияЗаказов(ДополнительныеСвойства, Движения, Отказ);
	
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	Документы.уатОтклонениеГруза.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументОбъект.уатЗаказГрузоотправителя") Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатЗаказГрузоотправителя") Тогда
		Дата = ТекущаяДата();
		Организация = ДанныеЗаполнения.Организация;
		Заказчик = ДанныеЗаполнения.Контрагент;
		НоваяСтрока = Заказы.Добавить();
		НоваяСтрока.ЗаказНаТС = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
	
	//проверяем не был ли уже закрыт заказ
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	уатПричиныОтклоненияЗаказов.Регистратор,
	|	уатПричиныОтклоненияЗаказов.ПричинаЗакрытияЗаказа,
	|	уатПричиныОтклоненияЗаказов.Заказ
	|ИЗ
	|	РегистрСведений.уатПричиныОтклоненияЗаказов КАК уатПричиныОтклоненияЗаказов
	|ГДЕ
	|	уатПричиныОтклоненияЗаказов.Заказ В(&СписокЗаказов)
	|	И уатПричиныОтклоненияЗаказов.Регистратор <> &Ссылка");
	Запрос.УстановитьПараметр("СписокЗаказов", Заказы.ВыгрузитьКолонку("ЗаказНаТС"));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	тблЗакрытиеЗаказов = Запрос.Выполнить().Выгрузить();
	Если тблЗакрытиеЗаказов.Количество() > 0 Тогда
		СтрокаСообщения = "В табличной части ""Заказы"" присутствуют уже закрытые заказы:";
		Для Каждого ТекСтрока Из тблЗакрытиеЗаказов Цикл
			СтрокаСообщения = СтрокаСообщения + "
			|	""" + ТекСтрока.Заказ + """, закрыт документом """ + ТекСтрока.Регистратор + """, по причине """ + ТекСтрока.ПричинаЗакрытияЗаказа + """";
		КонецЦикла;
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщения, Отказ, Заголовок);
	КонецЕсли;
КонецПроцедуры


// сохранение ссылки на коллекцию прав, настроек и окружения
Права = Неопределено;
#Если Клиент Тогда
	Права = глПраваУАТ;
#КонецЕсли
