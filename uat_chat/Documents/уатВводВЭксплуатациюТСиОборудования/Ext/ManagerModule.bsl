// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	СформироватьТаблицуТС(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСостояниеТС(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицуТС(ДокументСсылка, СтруктураДополнительныеСвойства)
	тблМестонахожденияТС = Новый ТаблицаЗначений;
	тблМестонахожденияТС.Колонки.Добавить("Регистратор");
	тблМестонахожденияТС.Колонки.Добавить("Период");
	тблМестонахожденияТС.Колонки.Добавить("ТС");
	тблМестонахожденияТС.Колонки.Добавить("Организация");
	тблМестонахожденияТС.Колонки.Добавить("Подразделение");
	тблМестонахожденияТС.Колонки.Добавить("Колонна");
	тблМестонахожденияТС.Колонки.Добавить("Состояние");
	тблМестонахожденияТС.Колонки.Добавить("Владелец");
	
	Для Каждого ТекСтрокаТС Из ДокументСсылка.ТС Цикл
		НоваяСтрока = тблМестонахожденияТС.Добавить();
		НоваяСтрока.Период = ТекСтрокаТС.ДатаВвода;
		НоваяСтрока.Регистратор = ДокументСсылка;
		НоваяСтрока.ТС = ТекСтрокаТС.ТС;
		НоваяСтрока.Организация = ДокументСсылка.Организация;
		НоваяСтрока.Подразделение = ДокументСсылка.Подразделение;
		НоваяСтрока.Колонна = ДокументСсылка.Колонна;
		НоваяСтрока.Состояние = ТекСтрокаТС.Состояние;
		Если ТекСтрокаТС.Состояние = Справочники.уатСостояниеТС.Привлеченный ТОгда
			НоваяСтрока.Владелец = ТекСтрокаТС.Владелец;
		ИНАче
			НоваяСтрока.Владелец = ДокументСсылка.Организация;
		КонецЕСЛИ;
	КонецЦикла;
	
	//управляемая блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.уатМестонахождениеТС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = тблМестонахожденияТС;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ТС", "ТС");
	Блокировка.Заблокировать();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаМестонахожденияТС", тблМестонахожденияТС);
КонецПроцедуры // СформироватьТаблицуАгрегатыТС()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	//Зарезервировано
КонецПроцедуры

Процедура СформироватьТаблицаСостояниеТС(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	тблДвижений = Новый ТаблицаЗначений;
	тблДвижений.Колонки.Добавить("Регистратор");
	тблДвижений.Колонки.Добавить("Период");
	тблДвижений.Колонки.Добавить("ДатаОкончания");
	тблДвижений.Колонки.Добавить("ТС");
	тблДвижений.Колонки.Добавить("Состояние");
	тблДвижений.Колонки.Добавить("Контрагент");
	
	Для Каждого ТекСтрокаТС Из ДокументСсылка.ТС Цикл
		Если ЗначениеЗаполнено(ТекСтрокаТС.Состояние)=Ложь Тогда Продолжить; КонецеСЛИ;
		НоваяСтрока = тблДвижений.Добавить();
		НоваяСтрока.ТС = ТекСтрокаТС.ТС;
		НоваяСтрока.Период = ТекСтрокаТС.ДатаВвода;
		НоваяСтрока.Регистратор = ДокументСсылка;
		НоваяСтрока.Состояние = ТекСтрокаТС.Состояние;
	КонецЦикла;
		
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСостоянийТС", тблДвижений);
КонецПроцедуры // СформироватьТаблицаСостояниеТС()
