
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Объект.Дата = НачалоМесяца(Объект.Дата);
	фСтруктураСтруктурДней = ЗаполнитьСтруктурыДнейМесяца(Объект.Дата);
	фДеревоРаспределения.ПолучитьЭлементы().Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Дата = НачалоГода(ТекущаяДата());
		//Объект.Дата = НайтиПервыйНеактуальныйМесяц();	//TODO: переписать на определение первой неактуальной даты
	КонецЕсли;
	фСтруктураСтруктурДней = ЗаполнитьСтруктурыДнейМесяца(Объект.Дата);
	Если Объект.Проведен И Не ПроверитьАктуальность(Параметры.Ключ) Тогда
		Объект.ТаблицаРасчет.Очистить();	//?
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	Если Объект.ТаблицаРасчет.Количество() > 0 Тогда
		////заполняем с учетом имеющегося распределения
		Заполнить(Неопределено);
	КонецЕсли;
	
	//фСтруктураСтруктурДней.Режим5.ВсегоДней - 5-ти дневка
	//фСтруктураСтруктурДней.Режим6.ВсегоДней - 6-ти дневка
	//фСтруктураСтруктурДней.Режим7.ВсегоДней - календарные дни
	//фСтруктураСтруктурДней.Режим9.ВсегоДней - выхондые и праздники
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Если ЗначениеЗаполнено(Объект.Дата) Тогда
		фЕстьЗаписиВДокументе = Объект.ТаблицаРасчет.Количество() > 0;
		
		ЗаполнитьДеревоНаСервере();
		ДатаЗаполнения = ТекущаяДата();
	Иначе
		ПоказатьПредупреждение( , "Не заполнен Месяц документа");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоНаСервере()
	мДанныеЗаполнения = ПолучитьТаблицуЛотов(КонецМесяца(Объект.Дата));
	мТаблицаТС = мДанныеЗаполнения.ТаблицаТС;
	мТаблицаТиповТС = мДанныеЗаполнения.ТаблицаТиповТС;
	
	фТаблицаТС.Очистить();
	Для Каждого мЭлемент Из мТаблицаТС Цикл
		мНоваяСтрокаТаблицыТС = фТаблицаТС.Добавить();
		ЗаполнитьЗначенияСвойств(мНоваяСтрокаТаблицыТС, мЭлемент);
	КонецЦикла;
	
	фТаблицаГруппТипов.Очистить();
	Для Каждого мЭлемент Из мТаблицаТиповТС Цикл
		мНоваяСтрокаТаблицыГруппТипов = фТаблицаГруппТипов.Добавить();
		ЗаполнитьЗначенияСвойств(мНоваяСтрокаТаблицыГруппТипов, мЭлемент);
	КонецЦикла;
	
	мКопияТаблицыРасчета = Объект.ТаблицаРасчет.Выгрузить();
	мКопияТаблицыРасчета.Индексы.Добавить("ИдентификаторСтрокиЛота");
	//заполняем дерево
	фДеревоРаспределения.ПолучитьЭлементы().Очистить();
	Для Каждого мСтрокаЛота Из мДанныеЗаполнения.ТаблицаЛотов Цикл
		мНоваяСтрокаДерева = фДеревоРаспределения.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(мНоваяСтрокаДерева, мСтрокаЛота, "Контрагент, Договор, ГруппаТипов, ИдентификаторСтрокиЛота, СуммаВыручки, Номенклатура1, Номенклатура2, Номенклатура3, РежимРаботы, КомментарийДокумента, КоличествоТС, НаименованиеТипаКонтрагента");
		мДетиСтроки = мНоваяСтрокаДерева.ПолучитьЭлементы();
		Для Итр = 1 По мСтрокаЛота.КоличествоТС Цикл
			мНоваяСтрокаТС = мДетиСтроки.Добавить();
			ЗаполнитьЗначенияСвойств(мНоваяСтрокаТС, мСтрокаЛота, "Контрагент, Договор, ГруппаТипов, ИдентификаторСтрокиЛота, ЧасыРаботы, Пробег, ДнейВРаботеЗаСмену, Сменность, ОграничениеПоВозрастуТС, КоличествоУслуга1, КоличествоУслуга2, КоличествоУслуга3, КомментарийДокумента");
			
			мОтборПоИдентификаторуЛота = Новый Структура("ИдентификаторСтрокиЛота", мСтрокаЛота.ИдентификаторСтрокиЛота);
			мЗаписиПоИдентификатору = мКопияТаблицыРасчета.НайтиСтроки(мОтборПоИдентификаторуЛота);
			Если мЗаписиПоИдентификатору.Количество() >= Итр И мЗаписиПоИдентификатору[Итр - 1].ТСУказаноВРучную Тогда
				ЗаполнитьЗначенияСвойств(мНоваяСтрокаТС, мЗаписиПоИдентификатору[Итр - 1]);
				УвеличитьДниЗанятости(мНоваяСтрокаТС.ТС, мСтрокаЛота.ДнейВРаботеЗаСмену);
			Иначе
				мНоваяСтрокаТС.ТС = ПолучитьТСНаСервере(фСтруктураСтруктурДней, мСтрокаЛота.ГруппаТипов, мСтрокаЛота.ЧасыРаботы, мСтрокаЛота.ДнейВРаботеЗаСмену, мСтрокаЛота.Сменность, мСтрокаЛота.ОграничениеПоВозрастуТС, Истина);
				Если мНоваяСтрокаТС.ТС = ПредопределенноеЗначение("Справочник.уатТС.ПустаяСсылка") Тогда
					//если у нас больше нет свободных ТС нужного типа...
					мНоваяСтрокаТС.Субподряд = Истина;
				Иначе
					мНоваяСтрокаТС.Субподряд = Не ПолучитьРеквизитТаблицыТСНаСервере(мНоваяСтрокаТС.ТС, "СобственноеТС");
				КонецЕсли;
			КонецЕсли;
			мНоваяСтрокаТС.сУровень = 1;
			мНоваяСтрокаТС.СуммаВыручки = мСтрокаЛота.СуммаВыручки / мСтрокаЛота.КоличествоТС;
			РассчитатьСтрокуНаСервере(мНоваяСтрокаТС, Ложь);
		КонецЦикла;
		РассчитатьРодителяНаСервере(мНоваяСтрокаДерева);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура УвеличитьДниЗанятости(пТС, пДнейВРаботеЗаСмену)
	мОтборПоТС = Новый Структура("ТС", пТС);
	мСтрокиТСИзТаблицы = фТаблицаТС.НайтиСтроки(мОтборПоТС);
	Если мСтрокиТСИзТаблицы.Количество() > 0 Тогда
		мСтрокаТСИзТаблицы = мСтрокиТСИзТаблицы[0];
		мСтрокаТСИзТаблицы.ДнейЗанятоВМесяце = мСтрокаТСИзТаблицы.ДнейЗанятоВМесяце + пДнейВРаботеЗаСмену;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСтроку(пСтрока, пВместеСРодителем = Истина)
	пСтрокаРодителя = пСтрока.ПолучитьРодителя();
	пСтрока.СуммаСубподряд = пСтрока.ТарифСубподрядЧасовой * пСтрока.ЧасыРаботы * пСтрока.ДнейВРаботеЗаСмену * пСтрока.Сменность + пСтрока.ТарифСубподрядПробег * пСтрока.Пробег * пСтрока.ДнейВРаботеЗаСмену * пСтрока.Сменность + пСтрока.ТарифСубподрядУслуга1 * пСтрока.КоличествоУслуга1 * пСтрока.ДнейВРаботеЗаСмену * пСтрока.Сменность + пСтрока.ТарифСубподрядУслуга2 * пСтрока.КоличествоУслуга2 * пСтрока.ДнейВРаботеЗаСмену * пСтрока.Сменность + пСтрока.ТарифСубподрядУслуга3 * пСтрока.КоличествоУслуга3 * пСтрока.ДнейВРаботеЗаСмену * пСтрока.Сменность;
	пСтрока.Прибыль	= пСтрока.СуммаВыручки - пСтрока.СуммаСубподряд;
	Если пВместеСРодителем Тогда
		РассчитатьРодителя(пСтрокаРодителя);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура РассчитатьСтрокуНаСервере(пСтрока, пВместеСРодителем = Истина)
	пСтрокаРодителя = пСтрока.ПолучитьРодителя();
	пСтрока.СуммаСубподряд = пСтрока.ТарифСубподрядЧасовой * пСтрока.ЧасыРаботы * пСтрока.ДнейВРаботеЗаСмену * пСтрока.Сменность + пСтрока.ТарифСубподрядПробег * пСтрока.Пробег * пСтрока.ДнейВРаботеЗаСмену * пСтрока.Сменность + пСтрока.ТарифСубподрядУслуга1 * пСтрока.КоличествоУслуга1 * пСтрока.ДнейВРаботеЗаСмену * пСтрока.Сменность + пСтрока.ТарифСубподрядУслуга2 * пСтрока.КоличествоУслуга2 * пСтрока.ДнейВРаботеЗаСмену * пСтрока.Сменность + пСтрока.ТарифСубподрядУслуга3 * пСтрока.КоличествоУслуга3 * пСтрока.ДнейВРаботеЗаСмену * пСтрока.Сменность;
	пСтрока.Прибыль	= пСтрока.СуммаВыручки - пСтрока.СуммаСубподряд;
	Если пВместеСРодителем Тогда
		РассчитатьРодителяНаСервере(пСтрокаРодителя);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьРодителя(пРодитель)
	мДети = пРодитель.ПолучитьЭлементы();
	пРодитель.СуммаВыручки = ПосчитатьСуммуПоДетям(мДети, "СуммаВыручки");
	пРодитель.СуммаСубподряд = ПосчитатьСуммуПоДетям(мДети, "СуммаСубподряд");
	пРодитель.Прибыль = ПосчитатьСуммуПоДетям(мДети, "Прибыль");
	пРодитель.ТСУказаноВручную = ПроверитьИстинностьПоДетям(мДети, "ТСУказаноВручную");
КонецПроцедуры

&НаСервере
Процедура РассчитатьРодителяНаСервере(пРодитель)
	мДети = пРодитель.ПолучитьЭлементы();
	пРодитель.СуммаВыручки = ПосчитатьСуммуПоДетямНаСервере(мДети, "СуммаВыручки");
	пРодитель.СуммаСубподряд = ПосчитатьСуммуПоДетямНаСервере(мДети, "СуммаСубподряд");
	пРодитель.Прибыль = ПосчитатьСуммуПоДетямНаСервере(мДети, "Прибыль");
	пРодитель.ТСУказаноВручную = ПроверитьИстинностьПоДетямНаСервере(мДети, "ТСУказаноВручную");
КонецПроцедуры

&НаКлиенте
Функция ПроверитьИстинностьПоДетям(пДети, пИмяКолонки)
	мРезультат = Истина;
	Для Каждого мСтрока Из пДети Цикл
		мРезультат = мРезультат И мСтрока[пИмяКолонки];
	КонецЦикла;
	Возврат мРезультат;
Конецфункции

&НаСервере
Функция ПосчитатьСуммуПоДетямНаСервере(пДети, пИмяКолонки)
	мСумма = 0;
	Для Каждого мСтрока Из пДети Цикл
		мСумма = мСумма + мСтрока[пИмяКолонки];
	КонецЦикла;
	Возврат мСумма;
Конецфункции

&НаСервере
Функция ПроверитьИстинностьПоДетямНаСервере(пДети, пИмяКолонки)
	мРезультат = Истина;
	Для Каждого мСтрока Из пДети Цикл
		мРезультат = мРезультат И мСтрока[пИмяКолонки];
	КонецЦикла;
	Возврат мРезультат;
Конецфункции

&НаКлиенте
Функция ПосчитатьСуммуПоДетям(пДети, пИмяКолонки)
	мСумма = 0;
	Для Каждого мСтрока Из пДети Цикл
		мСумма = мСумма + мСтрока[пИмяКолонки];
	КонецЦикла;
	Возврат мСумма;
Конецфункции
	
&НаКлиенте
Процедура Распределить(Команда)
	//получаем дерево и таблицу ТС
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьАктуальность(пСсылка)
	Возврат Истина;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТаблицуЛотов(пДата)
	
	мЗапрос = Новый Запрос("ВЫБРАТЬ // 0 - Отсторнированные лоты, движения которых не должны попадать как детальные строки регистра ДополнительныеСведенияЗаявок
	|ЛотыПроизводственнойПрограммы.Идентификатор КАК Идентификатор,
	|ЛотыПроизводственнойПрограммы.ДокументЛота КАК ДокументЛота
	|ПОМЕСТИТЬ ОтсторнированныеДокументы
	|ИЗ РегистрНакопления.ЛотыПроизводственнойПрограммы КАК ЛотыПроизводственнойПрограммы
	|ГДЕ ЛотыПроизводственнойПрограммы.ДокументЛота <> ЗНАЧЕНИЕ(Документ.юкЛот.ПустаяСсылка) И ЛотыПроизводственнойПрограммы.ДокументЛота <> ЛотыПроизводственнойПрограммы.Регистратор
	|;
	|ВЫБРАТЬ // 1
	|	ЛотыПроизводственнойПрограммыОбороты.Идентификатор КАК Идентификатор,
	|	ЛотыПроизводственнойПрограммы.МесяцЛота КАК МесяцЛота,
	|	ЛотыПроизводственнойПрограммы.ДокументЛота КАК ДокументЛота,
	|	СУММА(ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену) КАК ДнейВРаботеЗаСмену
	|ПОМЕСТИТЬ ОстаткиСИдентификаторами
	|ИЗ
	|	РегистрНакопления.ЛотыПроизводственнойПрограммы.Обороты(НАЧАЛОПЕРИОДА(&МесяцЛота, ГОД), КОНЕЦПЕРИОДА(&МесяцЛота, ГОД), , ) КАК ЛотыПроизводственнойПрограммыОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЛотыПроизводственнойПрограммы КАК ЛотыПроизводственнойПрограммы
	|		ПО ЛотыПроизводственнойПрограммыОбороты.Идентификатор = ЛотыПроизводственнойПрограммы.Идентификатор
	|			И (НАЧАЛОПЕРИОДА(ЛотыПроизводственнойПрограммы.МесяцЛота, ГОД) = НАЧАЛОПЕРИОДА(&МесяцЛота, ГОД))
	|			И ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.Идентификатор В(ВЫБРАТЬ ОтсторнированныеДокументы.Идентификатор ИЗ ОтсторнированныеДокументы) Тогда НЕ ЛотыПроизводственнойПрограммы.Регистратор В(ВЫБРАТЬ ОтсторнированныеДокументы.ДокументЛота ИЗ ОтсторнированныеДокументы) ИНАЧЕ ИСТИНА КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЛотыПроизводственнойПрограммыОбороты.Идентификатор,
	|	ЛотыПроизводственнойПрограммы.МесяцЛота,
	|	ЛотыПроизводственнойПрограммы.ДокументЛота
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену) > 0
	|;
	|ВЫБРАТЬ // 2
	|	ЛотыПроизводственнойПрограммыОбороты.Идентификатор КАК ИдентификаторСтрокиЛота,
	|	ЛотыПроизводственнойПрограммы.Контрагент КАК Контрагент,
	|	ЛотыПроизводственнойПрограммы.Договор КАК Договор,
	|	ЛотыПроизводственнойПрограммы.ТипТС КАК ТипТС,
	|	ЛотыПроизводственнойПрограммы.ГрупповойТип КАК ГруппаТипов,
	|	МАКСИМУМ(ЛотыПроизводственнойПрограммы.ЧасыРаботы) КАК ЧасыРаботы,
	|	МАКСИМУМ(ЛотыПроизводственнойПрограммы.КоличествоУслуга1) КАК КоличествоУслуга1,
	|	МАКСИМУМ(ЛотыПроизводственнойПрограммы.КоличествоУслуга2) КАК КоличествоУслуга2,
	|	МАКСИМУМ(ЛотыПроизводственнойПрограммы.КоличествоУслуга3) КАК КоличествоУслуга3,
	|	МАКСИМУМ(ЛотыПроизводственнойПрограммы.Пробег) КАК Пробег,
	|	МАКСИМУМ(ЛотыПроизводственнойПрограммы.Сменность) КАК Сменность,
	|	МАКСИМУМ(ЛотыПроизводственнойПрограммы.КоличествоТС) КАК КоличествоТС,
	|	ЛотыПроизводственнойПрограммы.Номенклатура1.Наименование КАК Номенклатура1,
	|	ЛотыПроизводственнойПрограммы.Номенклатура2.Наименование КАК Номенклатура2,
	|	ЛотыПроизводственнойПрограммы.Номенклатура3.Наименование КАК Номенклатура3,
	|	ЛотыПроизводственнойПрограммы.НаименованиеТипаКонтрагента КАК НаименованиеТипаКонтрагента,
	|	МАКСИМУМ(ЛотыПроизводственнойПрограммы.ДокументЛота.Комментарий) КАК КомментарийДокумента,
	|	ЛотыПроизводственнойПрограммы.ОграничениеПоВозрастуТС КАК ОграничениеПоВозрастуТС,
	|	ЛотыПроизводственнойПрограммы.РежимРаботы КАК РежимРаботы,
	|	СУММА(ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену) КАК ДнейВРаботеЗаСмену,
	|	СУММА(ВЫБОР
	|			КОГДА ЛотыПроизводственнойПрограммы.СуммаЧасы = 1
	|				ТОГДА 0
	|			ИНАЧЕ ЛотыПроизводственнойПрограммы.СуммаЧасы + ЛотыПроизводственнойПрограммы.СуммаУслуги + ЛотыПроизводственнойПрограммы.СуммаПробег
	|		КОНЕЦ) КАК СуммаВыручки
	|ИЗ
	|	РегистрНакопления.ЛотыПроизводственнойПрограммы.Обороты(НАЧАЛОПЕРИОДА(&МесяцЛота, ГОД), КОНЕЦПЕРИОДА(&МесяцЛота, ГОД), , ) КАК ЛотыПроизводственнойПрограммыОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиСИдентификаторами КАК ОстаткиСИдентификаторами
	|		ПО (ОстаткиСИдентификаторами.Идентификатор = ЛотыПроизводственнойПрограммыОбороты.Идентификатор)
	|			И (НАЧАЛОПЕРИОДА(ОстаткиСИдентификаторами.МесяцЛота, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ЛотыПроизводственнойПрограммыОбороты.МесяцЛота, МЕСЯЦ))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЛотыПроизводственнойПрограммы КАК ЛотыПроизводственнойПрограммы
	|		ПО (ОстаткиСИдентификаторами.Идентификатор = ЛотыПроизводственнойПрограммы.Идентификатор)
	|			И (ОстаткиСИдентификаторами.ДокументЛота = ЛотыПроизводственнойПрограммы.Регистратор)
	|			И (ЛотыПроизводственнойПрограммы.ДокументЛота = ЛотыПроизводственнойПрограммы.Регистратор)
	|			И (НАЧАЛОПЕРИОДА(ОстаткиСИдентификаторами.МесяцЛота, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ЛотыПроизводственнойПрограммы.МесяцЛота, МЕСЯЦ))
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(ЛотыПроизводственнойПрограммыОбороты.МесяцЛота, ГОД) = НАЧАЛОПЕРИОДА(&МесяцЛота, ГОД)
	|	И (ЛотыПроизводственнойПрограммыОбороты.СуммаЧасыОборот > 0
	|			ИЛИ ЛотыПроизводственнойПрограммыОбороты.СуммаУслугиОборот > 0
	|			ИЛИ ЛотыПроизводственнойПрограммыОбороты.СуммаПробегОборот > 0)
	|  И Не ЛотыПроизводственнойПрограммы.КоличествоТС ЕСТЬ NULL
	|СГРУППИРОВАТЬ ПО
	|	ЛотыПроизводственнойПрограммыОбороты.Идентификатор,
	|	ЛотыПроизводственнойПрограммы.Контрагент,
	|	ЛотыПроизводственнойПрограммы.Договор,
	|	ЛотыПроизводственнойПрограммы.ТипТС,
	|	ЛотыПроизводственнойПрограммы.ГрупповойТип,
	|	ЛотыПроизводственнойПрограммы.Номенклатура1.Наименование,
	|	ЛотыПроизводственнойПрограммы.Номенклатура2.Наименование,
	|	ЛотыПроизводственнойПрограммы.Номенклатура3.Наименование,
	|	ЛотыПроизводственнойПрограммы.НаименованиеТипаКонтрагента,
	|	ЛотыПроизводственнойПрограммы.ОграничениеПоВозрастуТС,
	|	ЛотыПроизводственнойПрограммы.РежимРаботы
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЛотыПроизводственнойПрограммыОбороты.Идентификатор
	|;
	|ВЫБРАТЬ // 3
	|	юкГруппыТипов.Ссылка КАК ГруппаТипов,
	|	юкГруппыТипов.ТипТС КАК ТипТС
	|ИЗ
	|	Справочник.юкГруппыТипов.СписокТипов КАК юкГруппыТипов
	|ГДЕ
	|	НЕ юкГруппыТипов.ТипТС = ЗНАЧЕНИЕ(Справочник.уатТипыТС.ПустаяСсылка)
	|	И НЕ юкГруппыТипов.Ссылка.ПометкаУдаления
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ // 4
	|	уатМестонахождениеТС.ТС КАК ТС,
	|	уатМестонахождениеТС.ТС.ТипТС КАК ТипТС,
	|	(ВЫРАЗИТЬ(уатМестонахождениеТС.Владелец КАК Справочник.Организации)) = уатМестонахождениеТС.Владелец КАК СобственноеТС,
	|	ВЫРАЗИТЬ(уатМестонахождениеТС.Подразделение КАК Справочник.ПодразделенияОрганизаций) КАК КолоннаТС,
	|	0 КАК ДнейЗанятоВМесяце,
	|	ВЫБОР
	|		КОГДА уатМестонахождениеТС.ТС.ГодВыпуска <> 0
	|			ТОГДА ГОД(&МесяцЛота) - уатМестонахождениеТС.ТС.ГодВыпуска
	|		КОГДА уатМестонахождениеТС.ТС.ДатаВводаВЭксплуатацию <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ГОД(&МесяцЛота) - ГОД(уатМестонахождениеТС.ТС.ДатаВводаВЭксплуатацию)
	|		ИНАЧЕ 999
	|	КОНЕЦ КАК ВозрастТС
	|ИЗ
	|	РегистрСведений.уатМестонахождениеТС.СрезПоследних(КОНЕЦПЕРИОДА(&МесяцЛота, МЕСЯЦ), ) КАК уатМестонахождениеТС
	|ГДЕ
	|	уатМестонахождениеТС.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	И уатМестонахождениеТС.ТС <> ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка)
	|	И НЕ уатМестонахождениеТС.Состояние.ЗапретитьВыпискуПЛ
	|	И НЕ уатМестонахождениеТС.ТС.ТипТС.НеВыводитьВТабельТС");
	мЗапрос.УстановитьПараметр("МесяцЛота", пДата);
	
	мРезультат = мЗапрос.ВыполнитьПакет();
	вМассивСтруктурТаблицыЛотов = ПреобразоватьТаблицуВМассивСтруктур(мРезультат[2].Выгрузить());
	вМассивСтруктурТаблицыТиповТС = ПреобразоватьТаблицуВМассивСтруктур(мРезультат[3].Выгрузить());
	вМассивСтруктурТаблицыТС = ПреобразоватьТаблицуВМассивСтруктур(мРезультат[4].Выгрузить());
	вСтруктура = Новый Структура("ТаблицаЛотов, ТаблицаТС, ТаблицаТиповТС", вМассивСтруктурТаблицыЛотов, вМассивСтруктурТаблицыТС, вМассивСтруктурТаблицыТиповТС);
	Возврат вСтруктура;
КонецФункции

&НаСервереБезКонтекста
Функция ПреобразоватьТаблицуВМассивСтруктур(пТаблица)
	вМассив = Новый Массив;
	мСтрокаИменКолонок = "";
	Для Каждого мКолонка Из пТаблица.Колонки Цикл
		мСтрокаИменКолонок = мСтрокаИменКолонок + ", " + мКолонка.Имя;
	КонецЦикла;
	мСтрокаИменКолонок = Сред(мСтрокаИменКолонок, 2);
	
	Для Каждого мСтрока Из пТаблица Цикл
		мСтруктура = Новый Структура(мСтрокаИменКолонок);
		ЗаполнитьЗначенияСвойств(мСтруктура, мСтрока);
		вМассив.Добавить(мСтруктура);
	КонецЦикла;
	
	Возврат вМассив;
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//закидываем дерево в табличную часть документа
	Объект.ТаблицаРасчет.Очистить();
	Для Каждого мЭлемент Из фДеревоРаспределения.ПолучитьЭлементы() Цикл
		мСтроки = мЭлемент.ПолучитьЭлементы();
		Для Каждого мСтрока Из мСтроки Цикл
			Если ЗначениеЗаполнено(мСтрока.ТС) Или мСтрока.Субподряд Или мСтрока.ТСУказаноВручную Тогда
				мНоваяСтрокаТаблицы = Объект.ТаблицаРасчет.Добавить();
				ЗаполнитьЗначенияСвойств(мНоваяСтрокаТаблицы, мСтрока);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТС(пСтруктураСтруктурДней, пГрупповойТип, пЧасыРаботы, пДнейВРаботеЗаСмену, пСменность, пОграничениеПоВозрасту, пТолькоСобственные = Истина)
	мДнейВМесяцеВсего = пСтруктураСтруктурДней.Режим7.ВсегоДней;
	мДней5Дневка = пСтруктураСтруктурДней.Режим5.ВсегоДней;
	//мДней6Дневка = пСтруктураСтруктурДней.Режим6.ВсегоДней;
	//мДнейВыходные = пСтруктураСтруктурДней.Режим9.ВсегоДней;
	
	вТС = ПредопределенноеЗначение("Справочник.уатТС.ПустаяСсылка");
	мОтборПоГрупповомуТипу = Новый Структура("ГруппаТипов", пГрупповойТип);
	мСтрокиГруппыТипов = фТаблицаГруппТипов.НайтиСтроки(мОтборПоГрупповомуТипу);
	Для Каждого мТип Из мСтрокиГруппыТипов Цикл
		мОтборПоТипу = Новый Структура("ТипТС", мТип.ТипТС);
		Если пТолькоСобственные Тогда
			мОтборПоТипу.Вставить("СобственноеТС", пТолькоСобственные);
		КонецЕсли;
		мСтрокиПоТипу = фТаблицаТС.НайтиСтроки(мОтборПоТипу);
		Если мСтрокиПоТипу.Количество() > 0 Тогда
			Для Каждого мСтрокаТС из мСтрокиПоТипу Цикл
				Если пОграничениеПоВозрасту > 0 И мСтрокаТС.ВозрастТС > пОграничениеПоВозрасту Тогда
					//Сообщить("Не подошло по возрасту: " + мСтрокаТС.ТС);
					Продолжить;
				КонецЕсли;
				//сменность?
				//режим работы?
				////пока что просто по дням
				//	21 - 10 > 3  ===  (рабочие дни месяца по 5-дневке) - (дни в лоте) > (уже занято по данному ТС)
				//Если пЧасыРаботы < 4 Тогда
				//	//TODO: заполнение таких строк - потом, чтобы не засорять таблицу ТС этими микрозаявками
				//	Продолжить;
				//КонецЕсли;
				Если мДней5Дневка - пДнейВРаботеЗаСмену > мСтрокаТС.ДнейЗанятоВМесяце Тогда
					УвеличитьДниЗанятости(мСтрокаТС.ТС, пДнейВРаботеЗаСмену);
					Возврат мСтрокаТС.ТС;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
		
	Возврат вТС;
КонецФункции

&НаСервере
Функция ПолучитьТСНаСервере(пСтруктураСтруктурДней, пГрупповойТип, пЧасыРаботы, пДнейВРаботеЗаСмену, пСменность, пОграничениеПоВозрасту, пТолькоСобственные = Истина)
	мДнейВМесяцеВсего = пСтруктураСтруктурДней.Режим7.ВсегоДней;
	мДней5Дневка = пСтруктураСтруктурДней.Режим5.ВсегоДней;
	//мДней6Дневка = пСтруктураСтруктурДней.Режим6.ВсегоДней;
	//мДнейВыходные = пСтруктураСтруктурДней.Режим9.ВсегоДней;
	
	вТС = ПредопределенноеЗначение("Справочник.уатТС.ПустаяСсылка");
	мОтборПоГрупповомуТипу = Новый Структура("ГруппаТипов", пГрупповойТип);
	мСтрокиГруппыТипов = фТаблицаГруппТипов.НайтиСтроки(мОтборПоГрупповомуТипу);
	Для Каждого мТип Из мСтрокиГруппыТипов Цикл
		мОтборПоТипу = Новый Структура("ТипТС", мТип.ТипТС);
		Если пТолькоСобственные Тогда
			мОтборПоТипу.Вставить("СобственноеТС", пТолькоСобственные);
		КонецЕсли;
		мСтрокиПоТипу = фТаблицаТС.НайтиСтроки(мОтборПоТипу);
		Если мСтрокиПоТипу.Количество() > 0 Тогда
			Для Каждого мСтрокаТС из мСтрокиПоТипу Цикл
				Если пОграничениеПоВозрасту > 0 И мСтрокаТС.ВозрастТС > пОграничениеПоВозрасту Тогда
					//Сообщить("Не подошло по возрасту: " + мСтрокаТС.ТС);
					Продолжить;
				КонецЕсли;
				//сменность?
				//режим работы?
				////пока что просто по дням
				//	21 - 10 > 3  ===  (рабочие дни месяца по 5-дневке) - (дни в лоте) > (уже занято по данному ТС)
				//Если пЧасыРаботы < 4 Тогда
				//	//TODO: заполнение таких строк - потом, чтобы не засорять таблицу ТС этими микрозаявками
				//	Продолжить;
				//КонецЕсли;
				Если мДней5Дневка - пДнейВРаботеЗаСмену > мСтрокаТС.ДнейЗанятоВМесяце Тогда
					УвеличитьДниЗанятости(мСтрокаТС.ТС, пДнейВРаботеЗаСмену);
					Возврат мСтрокаТС.ТС;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
		
	Возврат вТС;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРеквизит(пОбъект, пРеквизит)
	Возврат пОбъект[пРеквизит];
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЗаполнитьСтруктурыДнейМесяца(пДата)
	Возврат ПолучитьСтруктуруДней(пДата);
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруДней(пДата)
	//монструозное преобразование столбцов в строки, пока так... сильно не ругайте, но так быстрее и проще...
	мЗапрос = Новый Запрос("ВЫБРАТЬ
	|	5 КАК РабочихДнейВНеделе,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 0) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д1,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 1) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д2,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 2) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д3,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 3) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д4,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 4) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д5,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 5) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 6) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д7,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 7) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д8,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 8) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д9,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 9) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д10,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 10) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д11,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 11) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д12,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 12) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д13,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 13) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д14,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 14) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д15,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 15) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д16,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 16) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д17,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 17) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д18,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 18) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д19,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 19) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д20,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 20) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д21,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 21) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д22,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 22) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д23,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 23) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д24,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 24) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д25,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 25) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д26,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 26) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д27,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 27) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д28,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 28) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д29,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 29) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д30,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 30) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Пятидневка ИНАЧЕ 0 КОНЕЦ КАК Д31,
	|	Пятидневка КАК ВсегоДней
	|ИЗ
	|	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 0) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д1,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 1) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д2,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 2) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д3,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 3) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д4,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 4) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д5,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 5) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 6) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д7,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 7) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д8,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 8) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д9,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 9) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д10,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 10) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д11,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 11) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д12,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 12) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д13,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 13) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д14,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 14) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д15,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 15) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д16,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 16) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д17,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 17) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д18,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 18) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д19,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 19) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д20,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 20) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д21,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 21) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д22,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 22) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д23,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 23) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д24,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 24) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д25,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 25) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д26,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 26) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д27,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 27) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д28,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 28) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д29,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 29) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д30,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 30) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА Шестидневка ИНАЧЕ 0 КОНЕЦ КАК Д31,
	|	Шестидневка
	|ИЗ
	|	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 0) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д1,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 1) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д2,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 2) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д3,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 3) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д4,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 4) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д5,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 5) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 6) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д7,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 7) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д8,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 8) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д9,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 9) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д10,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 10) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д11,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 11) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д12,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 12) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д13,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 13) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д14,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 14) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д15,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 15) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д16,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 16) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д17,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 17) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д18,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 18) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д19,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 19) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д20,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 20) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д21,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 21) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д22,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 22) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д23,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 23) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д24,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 24) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д25,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 25) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д26,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 26) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д27,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 27) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д28,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 28) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д29,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 29) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д30,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 30) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА КалендарныеДни ИНАЧЕ 0 КОНЕЦ КАК Д31,
	|	КалендарныеДни
	|ИЗ
	|	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	8,	//Праздники
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 0) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д1,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 1) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д2,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 2) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д3,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 3) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д4,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 4) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д5,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 5) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 6) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д7,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 7) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д8,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 8) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д9,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 9) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д10,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 10) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д11,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 11) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д12,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 12) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д13,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 13) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д14,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 14) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д15,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 15) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д16,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 16) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д17,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 17) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д18,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 18) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д19,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 19) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д20,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 20) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д21,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 21) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д22,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 22) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д23,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 23) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д24,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 24) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д25,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 25) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д26,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 26) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д27,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 27) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д28,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 28) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д29,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 29) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д30,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 30) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д31,
	|	ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ
	|ИЗ
	|	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	9,	//Праздники + Выходные
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 0) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д1,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 1) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д2,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 2) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д3,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 3) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д4,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 4) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д5,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 5) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 6) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д7,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 7) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д8,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 8) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д9,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 9) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д10,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 10) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д11,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 11) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д12,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 12) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д13,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 13) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д14,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 14) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д15,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 15) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д16,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 16) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д17,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 17) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д18,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 18) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д19,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 19) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д20,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 20) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д21,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 21) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д22,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 22) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д23,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 23) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д24,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 24) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д25,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 25) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д26,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 26) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д27,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 27) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д28,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 28) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д29,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 29) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д30,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 30) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д31,
	|	ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ИЛИ ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Воскресенье) Или ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Суббота) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ
	|ИЗ
	|	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	7,	//Весь месяц
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 0) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д1,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 1) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д2,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 2) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д3,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 3) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д4,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 4) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д5,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 5) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д6,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 6) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д7,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 7) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д8,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 8) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д9,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 9) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д10,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 10) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д11,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 11) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д12,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 12) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д13,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 13) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д14,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 14) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д15,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 15) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д16,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 16) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д17,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 17) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д18,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 18) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д19,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 19) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д20,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 20) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д21,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 21) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д22,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 22) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д23,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 23) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д24,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 24) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д25,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 25) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д26,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 26) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д27,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 27) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д28,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 28) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д29,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 29) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д30,
	|	ВЫБОР КОГДА ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, 30) = уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря ТОГДА ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ ИНАЧЕ 0 КОНЕЦ КАК Д31,
	|	ВЫБОР КОГДА ВидДня = ЗНАЧЕНИЕ(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ КалендарныеДни КОНЕЦ
	|ИЗ
	|	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)");
	
	мСтрокаДней = "д1,д2,д3,д4,д5,д6,д7,д8,д9,д10,д11,д12,д13,д14,д15,д16,д17,д18,д19,д20,д21,д22,д23,д24,д25,д26,д27,д28,д29,д30,д31";
	мЗапрос.УстановитьПараметр("Дата", НачалоМесяца(пДата));
	мРезультат = мЗапрос.Выполнить().Выгрузить();
	мРезультат.Свернуть("РабочихДнейВНеделе", "" + мСтрокаДней + ",ВсегоДней");
	
	вСтруктура = Новый Структура;
	Для Каждого мСтрока Из мРезультат Цикл
		мСтруктура = Новый Структура("РабочихДнейВНеделе," + мСтрокаДней + ",ВсегоДней");
		ЗаполнитьЗначенияСвойств(мСтруктура, мСтрока);
		вСтруктура.Вставить("Режим" + Строка(мСтрока.РабочихДнейВНеделе), мСтруктура);
	КонецЦикла;
	
	Возврат вСтруктура;
КонецФункции

&НаКлиентеНаСервере
Процедура РассчитатьТекущуюСтроку()
	мСтрокаТекущихДанных = Элементы.мДеревоРаспределения.ТекущиеДанные;
	Если мСтрокаТекущихДанных <> Неопределено И мСтрокаТекущихДанных.сУровень = 1 Тогда
		РассчитатьСтроку(мСтрокаТекущихДанных);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура мДеревоРаспределенияТарифСубподрядРаботаПриИзменении(Элемент)
	РассчитатьТекущуюСтроку();
КонецПроцедуры

&НаКлиенте
Процедура мДеревоРаспределенияТарифСубподрядПробегПриИзменении(Элемент)
	РассчитатьТекущуюСтроку();
КонецПроцедуры

&НаКлиенте
Процедура мДеревоРаспределенияТарифСубподрядРВОПриИзменении(Элемент)
	РассчитатьТекущуюСтроку();
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	Объект.ТаблицаРасчет.Очистить();
	фДеревоРаспределения.ПолучитьЭлементы().Очистить();
КонецПроцедуры

&НаКлиенте
Процедура мДеревоРаспределенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "мДеревоРаспределенияПолеБлокировки" Тогда
		СтандартнаяОбработка = Ложь;
		Элементы.мДеревоРаспределения.ТекущиеДанные.ТСУказаноВручную = Не Элементы.мДеревоРаспределения.ТекущиеДанные.ТСУказаноВручную;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура мДеревоРаспределенияКолоннаТСПриИзменении(Элемент)
	мСтрокаТекущихДанных = Элементы.мДеревоРаспределения.ТекущиеДанные;
	Если мСтрокаТекущихДанных <> Неопределено Тогда
		мСтрокаТекущихДанных.тСУказаноВручную = ЗначениеЗаполнено(мСтрокаТекущихДанных.ТС) Или ЗначениеЗаполнено(мСтрокаТекущихДанных.КолоннаТС);
		Если мСтрокаТекущихДанных.сУровень = 1 И ЗначениеЗаполнено(мСтрокаТекущихДанных.КолоннаТС) И Не ЗначениеЗаполнено(мСтрокаТекущихДанных.ТС) Тогда
			мСтрокаТекущихДанных.Субподряд = Истина;
		ИначеЕсли мСтрокаТекущихДанных.сУровень = 0 Или (ЗначениеЗаполнено(мСтрокаТекущихДанных.ТС) Или Не ЗначениеЗаполнено(мСтрокаТекущихДанных.КолоннаТС)) Тогда
			мСтрокаТекущихДанных.Субподряд = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура мДеревоРаспределенияТСПриИзменении(Элемент)
	мСтрокаТекущихДанных = Элементы.мДеревоРаспределения.ТекущиеДанные;
	Если мСтрокаТекущихДанных <> Неопределено Тогда
		мСтрокаТекущихДанных.тСУказаноВручную = ЗначениеЗаполнено(мСтрокаТекущихДанных.ТС) Или ЗначениеЗаполнено(мСтрокаТекущихДанных.КолоннаТС);
		Если ЗначениеЗаполнено(мСтрокаТекущихДанных.ТС) Тогда
			мСтрокаТекущихДанных.Субподряд = Не ПолучитьРеквизитТаблицыТС(мСтрокаТекущихДанных.ТС, "СобственноеТС");
			Если мСтрокаТекущихДанных.Субподряд Тогда
				мСтрокаТекущихДанных.КолоннаТС = ПолучитьРеквизитТаблицыТС(мСтрокаТекущихДанных.ТС, "КолоннаТС");
			Иначе
				мСтрокаТекущихДанных.КолоннаТС = ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьРеквизитТаблицыТСНаСервере(пТС, пРеквизит)
	мОтборПоТС = Новый Структура("ТС", пТС);
	мСтрокиТСИзТаблицы = фТаблицаТС.НайтиСтроки(мОтборПоТС);
	Если мСтрокиТСИзТаблицы.Количество() > 0 Тогда
		мСтрокаТСИзТаблицы = мСтрокиТСИзТаблицы[0];
		Возврат мСтрокаТСИзТаблицы[пРеквизит];
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция ПолучитьРеквизитТаблицыТС(пТС, пРеквизит)
	мОтборПоТС = Новый Структура("ТС", пТС);
	мСтрокиТСИзТаблицы = фТаблицаТС.НайтиСтроки(мОтборПоТС);
	Если мСтрокиТСИзТаблицы.Количество() > 0 Тогда
		мСтрокаТСИзТаблицы = мСтрокиТСИзТаблицы[0];
		Возврат мСтрокаТСИзТаблицы[пРеквизит];
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура мДеревоРаспределенияПередНачаломИзменения(Элемент, Отказ)
	мСтрокаТекущихДанных = Элементы.мДеревоРаспределения.ТекущиеДанные;
	Если мСтрокаТекущихДанных <> Неопределено  И мСтрокаТекущихДанных.сУровень = 0 Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура мДеревоРаспределенияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Не ОтменаРедактирования Тогда
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры
