////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБЪЕКТА

Перем Права Экспорт; // Переменная объекта - ссылка на коллекцию прав, настроек и переменных окружения
Перем мВалютаРегламентированногоУчета Экспорт; // Переменная хранит значение валюты регламентированного учёта,
                                               //полученное из констант.


#Если Клиент Тогда											   
	
// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
//Функция ПолучитьСписокПечатныхФорм() Экспорт
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	
	Попытка
		Макет = ПолучитьОбщийМакет("М2");
		СтруктураМакетов.Вставить("М2","Доверенность (М-2)");
		СтруктураМакетов.Вставить("М2а","Доверенность (М-2а)");
	Исключение
	КонецПопытки;

	Возврат СтруктураМакетов ;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()



Функция ПечатьДоверенности(НазваниеМакета)

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доверенность.Номер КАК НомерДокумента,
	|	Доверенность.Дата КАК ДатаДокумента,
	|	Доверенность.Организация КАК Руководители,
	|	Доверенность.Организация,
	|	Доверенность.Сотрудник,
	|	Доверенность.Сотрудник.Наименование КАК ФамилияИмяОтчествоДоверенного,
	|	Доверенность.БанковскийСчетОрганизации КАК БанковскийСчет,
	|	Доверенность.Контрагент КАК Поставщик,
	|	Доверенность.НаПолучениеОт КАК ПоставщикПредставление,
	|	Доверенность.ДатаДействия КАК СрокДействия,
	|	Доверенность.ПоДокументу КАК РеквизитыДокументаНаПолучение,
	|	Доверенность.Товары.(
	|		НомерСтроки КАК Номер,
	|		НаименованиеТовара КАК Ценности,
	|		НаименованиеТовара КАК ЦенностиПредставление,
	|		ЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	|		ЕдиницаПоКлассификатору.Представление КАК ЕдиницаИзмеренияПредставление,
	|		Количество
	|	)
	|ИЗ
	|	Документ.уатДоверенность КАК Доверенность
	|ГДЕ
	|	Доверенность.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Доверенность_М2";

	Макет = ПолучитьОбщийМакет("М2");

	ДанныеОФизЛице = уатОбщегоНазначенияТиповые.ДанныеФизЛица(Организация, Сотрудник.ФизЛицо, Дата);
	
	ФамилияИмяОтчествоДоверенного = СокрЛП(ДанныеОФизЛице.Фамилия) + " " + СокрЛП(ДанныеОФизЛице.Имя) + " " + СокрЛП(ДанныеОФизЛице.Отчество);
	Должность                    = СокрЛП(ДанныеОФизЛице.Должность);

	Если НазваниеМакета = "М2" тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Отрез");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.НомерДокумента = уатОбщегоНазначенияТиповые.уатПолучитьНомерНаПечать(ЭтотОбъект);
		ОбластьМакета.Параметры.ФИОДоверенного = "" + ?(ПустаяСтрока(Должность), "", Должность + ", " + Символы.ПС) + (ФамилияИмяОтчествоДоверенного);
		ТабДокумент.Вывести(ОбластьМакета);
		НазваниеФормы = "Типовая межотраслевая форма № М-2";
	Иначе
		НазваниеФормы = "Типовая межотраслевая форма № М-2а";
	КонецЕсли;

	Руководители = уатОбщегоНазначенияТиповые.уатОтветственныеЛицаОрганизации(Организация, Дата);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;

	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента,, Шапка.БанковскийСчет);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.НомерДокумента               = уатОбщегоНазначенияТиповые.уатПолучитьНомерНаПечать(ЭтотОбъект);
	ОбластьМакета.Параметры.НазваниеФормы                = НазваниеФормы;
	ОбластьМакета.Параметры.ОрганизацияПредставление     = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	ОбластьМакета.Параметры.РеквизитыСчета               = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета,Банк,БИК,КоррСчет,");
	ОбластьМакета.Параметры.РеквизитыПотребителя         = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	Попытка //попытка сделана для корректной работе в УПП, т.к. там обе области называются РеквизитыПотребителя
		ОбластьМакета.Параметры.РеквизитыПлательщика         = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	Исключение
	КонецПопытки;
	ОбластьМакета.Параметры.ОрганизацияКодПоОКПО         = СведенияОбОрганизации.КодПоОКПО;
	ОбластьМакета.Параметры.ПаспортСерия                 = ДанныеОФизЛице.ДокументСерия;
	ОбластьМакета.Параметры.ПаспортНомер                 = ДанныеОФизЛице.ДокументНомер;
	ОбластьМакета.Параметры.ПаспортВыдан                 = ДанныеОФизЛице.ДокументКемВыдан;
	ОбластьМакета.Параметры.ПаспортДатаВыдачи            = ДанныеОФизЛице.ДокументДатаВыдачи;
	ОбластьМакета.Параметры.ФамилияИмяОтчествоДоверенного = ФамилияИмяОтчествоДоверенного;
	ОбластьМакета.Параметры.ДолжностьДоверенного         = Должность;
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Строка");

	Пока ВыборкаСтрокТовары.Следующий() Цикл

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.КоличествоПрописью = ?(ВыборкаСтрокТовары.Количество = 0,
		                                               "",
		                                               Строка(ВыборкаСтрокТовары.Количество) + " (" + 
		                                               ФормированиеПечатныхФорм.КоличествоПрописью(ВыборкаСтрокТовары.Количество) + ")");
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла;

	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(Шапка);

	Если ЗначениеЗаполнено(Руководитель) Тогда
		ОбластьМакета.Параметры.ФИОРуководителя       = Руководитель;
		ОбластьМакета.Параметры.Руководитель          = Руководитель;
	КонецЕсли;

	Если ЗначениеЗаполнено(Бухгалтер) Тогда
		ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = Бухгалтер;
		ОбластьМакета.Параметры.ГлавныйБухгалтер      = Бухгалтер;
	КонецЕсли;

	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции // ПечатьДоверенности()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(НазваниеМакета = "", КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не ?(Права = Неопределено, Ложь, уатПраваИНастройки.уатПраво("ПечатьНепроведенных", Права)) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;
	
	Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(НазваниеМакета) = Тип("СправочникСсылка.ВнешниеОбработки") Тогда
				
				ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
				ОбъектВнешнейФормы = НазваниеМакета.ПолучитьОбъект();
				Если ОбъектВнешнейФормы = Неопределено Тогда
					Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
					Возврат;
				КонецЕсли;			
				ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
				ДвоичныеДанные.Записать(ИмяФайла);
				Обработка = ВнешниеОбработки.Создать(ИмяФайла);
				Попытка
					Обработка.СсылкаНаОбъект = Ссылка;
					ТабДокумент = Обработка.Печать();
					уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Права);
				Исключение
					Сообщить("Ошибка формата внешней обработки. Возможно выбрана обработка не для печати.", СтатусСообщения.Важное);
				КонецПопытки;
   	Иначе
	
		Если НазваниеМакета = "М2" или НазваниеМакета = "М2а" Тогда
			ТабДокумент = ПечатьДоверенности(НазваниеМакета);
			уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект), Права);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // Печать()
						   
#КонецЕсли

											   
//////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначения.уатПроверкаПравПередЗаписьюВДокументах(ЭтотОбъект, Отказ, , Права);
	
	//проверка на ведение складского учета средствами УАТ
	Если НЕ уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Организация, ПланыВидовХарактеристик.уатПраваИНастройки.ВестиСкладскойУчетУАТ) Тогда
		Сообщить("Для организации """ + Организация + """ отключена возможность ведения складского учета документами УАТ!", СтатусСообщения.Внимание);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") тогда
		Возврат;	
	КонецЕсли;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

// сохранение ссылки на коллекцию прав, настроек и окружения
Права = Неопределено;
#Если Клиент Тогда
	Права = глПраваУАТ;
#КонецЕсли

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();