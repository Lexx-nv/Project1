////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБЪЕКТА

Перем Права Экспорт; // Переменная объекта - ссылка на коллекцию прав, настроек и переменных окружения.


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Процедура чтения работы из табличную часть
Функция ЧтениеРаботы(Номер, Стр)
	Возврат Стр["Л" + СокрЛП(Строка(Номер))];
КонецФункции

// Процедура чтения отклонений из табличную часть
Функция ЧтениеОтклонений(Номер, Стр)
	Возврат Стр["О" + СокрЛП(Строка(Номер))];	
КонецФункции

#Если Клиент Тогда
	
	// Функция возвращает табельный номер по физическому лицу
	//
	// Параметры:
	//		ИмяМакета - имя макета печати
	//
	// Возвращаемое значение:
	//		Табличный документ
	Функция ПолучитьТабНомер(Сотрудник) Экспорт
		тВозвр = "";
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	Сотрудники.Код
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВЫБОР
		|			КОГДА НаНачалоМесяца.Сотрудник ЕСТЬ NULL 
		|				ТОГДА ЗаМесяц.Сотрудник
		|			ИНАЧЕ НаНачалоМесяца.Сотрудник
		|		КОНЕЦ КАК Сотрудник,
		|		ВЫБОР
		|			КОГДА НаНачалоМесяца.Сотрудник ЕСТЬ NULL 
		|				ТОГДА ЗаМесяц.ТабельныйНомер
		|			ИНАЧЕ НаНачалоМесяца.ТабельныйНомер
		|		КОНЕЦ КАК Код
		|	ИЗ
		|		(ВЫБРАТЬ
		|			уатСведенияОСотрудникахСрезПоследних.Сотрудник КАК Сотрудник,
		|			уатСведенияОСотрудникахСрезПоследних.ТабельныйНомер КАК ТабельныйНомер
		|		ИЗ
		|			РегистрСведений.уатСведенияОСотрудниках.СрезПоследних(&ДатаНачала, ) КАК уатСведенияОСотрудникахСрезПоследних
		|		ГДЕ
		|			уатСведенияОСотрудникахСрезПоследних.Сотрудник = &Сотрудник) КАК НаНачалоМесяца
		|			ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				уатСведенияОСотрудниках.Сотрудник КАК Сотрудник,
		|				уатСведенияОСотрудниках.ТабельныйНомер КАК ТабельныйНомер
		|			ИЗ
		|				РегистрСведений.уатСведенияОСотрудниках КАК уатСведенияОСотрудниках
		|			ГДЕ
		|				уатСведенияОСотрудниках.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|				И уатСведенияОСотрудниках.Сотрудник = &Сотрудник) КАК ЗаМесяц
		|			ПО НаНачалоМесяца.Сотрудник = ЗаМесяц.Сотрудник) КАК Сотрудники
		|
		|СГРУППИРОВАТЬ ПО
		|	Сотрудники.Сотрудник,
		|	Сотрудники.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник";
		Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(Дата));
		Запрос.УстановитьПараметр("ДатаОкончания",КонецМесяца(Дата));
		//Запрос.УстановитьПараметр("Организация",Организация);
		//Запрос.УстановитьПараметр("Подразделение",Подразделение);
		Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			тВозвр = Выборка.Код;
		КонецЕсли;
		Возврат тВозвр;
		
	КонецФункции	
	
	// Функция выводит на печать форму "Табель"
	//
	// Параметры:
	//		ИмяМакета - имя макета печати
	//
	// Возвращаемое значение:
	//		Табличный документ
	Функция ПечатьТабеля(ИмяМакета) Экспорт
		
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ФормированиеТабеля";
		
		Макет = ПолучитьМакет(ИмяМакета);
		
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДокумент.ПолеСверху = 0;
		ТабДокумент.ПолеСлева = 0;
		ТабДокумент.ПолеСнизу = 0;
		ТабДокумент.ПолеСправа = 0;
		ФорматДаты      = "ДФ='дд.ММ.гггг'";
		
		Обл   = Макет.ПолучитьОбласть("Шапка");
		Обл.Параметры.ИмяОрганизации = Организация;
		Обл.Параметры.ИмяПодразделения = Подразделение;
		Обл.Параметры.ДатаНач 		 = Формат(НачалоМесяца(Дата),ФорматДаты);
		Обл.Параметры.ДатаКон 		 = Формат(КонецМесяца(Дата),ФорматДаты);
		Обл.Параметры.НомерДокумента = Номер;
		Обл.Параметры.ДатаДокумента  = Дата;
		ТабДокумент.Вывести(Обл);
		Обл   = Макет.ПолучитьОбласть("Колонтитул");
		ТабДокумент.Вывести(Обл);
		
		Для Каждого ТекСтрока Из ОсновнаяТаблица Цикл
			Обл   = Макет.ПолучитьОбласть("Строка");
			Обл.Параметры.НомерПП = ТекСтрока.НомерСтроки;
			Обл.Параметры.Работник = ТекСтрока.Сотрудник;
			Обл.Параметры.ТабельныйНомер = ТекСтрока.Код;
			
			Обл.Параметры.Символ1 = ТекСтрока.Л1;
			Обл.Параметры.ДополнительноеЗначение1 = ТекСтрока.О1;
			
			Обл.Параметры.Символ2 = ТекСтрока.Л2;
			Обл.Параметры.ДополнительноеЗначение2 = ТекСтрока.О2;
			
			Обл.Параметры.Символ3 = ТекСтрока.Л3;
			Обл.Параметры.ДополнительноеЗначение3 = ТекСтрока.О3;
			
			Обл.Параметры.Символ4 = ТекСтрока.Л4;
			Обл.Параметры.ДополнительноеЗначение4 = ТекСтрока.О4;
			
			Обл.Параметры.Символ5 = ТекСтрока.Л5;
			Обл.Параметры.ДополнительноеЗначение5 = ТекСтрока.О5;
			
			Обл.Параметры.Символ6 = ТекСтрока.Л6;
			Обл.Параметры.ДополнительноеЗначение6 = ТекСтрока.О6;
			
			Обл.Параметры.Символ7 = ТекСтрока.Л7;
			Обл.Параметры.ДополнительноеЗначение7 = ТекСтрока.О7;
			
			Обл.Параметры.Символ8 = ТекСтрока.Л8;
			Обл.Параметры.ДополнительноеЗначение8 = ТекСтрока.О8;
			
			Обл.Параметры.Символ9 = ТекСтрока.Л9;
			Обл.Параметры.ДополнительноеЗначение9 = ТекСтрока.О9;
			
			Обл.Параметры.Символ10 = ТекСтрока.Л10;
			Обл.Параметры.ДополнительноеЗначение10 = ТекСтрока.О10;
			
			Обл.Параметры.Символ11 = ТекСтрока.Л11;
			Обл.Параметры.ДополнительноеЗначение11 = ТекСтрока.О11;
			
			Обл.Параметры.Символ12 = ТекСтрока.Л12;
			Обл.Параметры.ДополнительноеЗначение12 = ТекСтрока.О12;
			
			Обл.Параметры.Символ13 = ТекСтрока.Л13;
			Обл.Параметры.ДополнительноеЗначение13 = ТекСтрока.О13;
			
			Обл.Параметры.Символ14 = ТекСтрока.Л14;
			Обл.Параметры.ДополнительноеЗначение14 = ТекСтрока.О14;
			
			Обл.Параметры.Символ15 = ТекСтрока.Л15;
			Обл.Параметры.ДополнительноеЗначение15 = ТекСтрока.О15;
			
			Обл.Параметры.Символ16 = ТекСтрока.Л16;
			Обл.Параметры.ДополнительноеЗначение16 = ТекСтрока.О16;
			
			Обл.Параметры.Символ17 = ТекСтрока.Л17;
			Обл.Параметры.ДополнительноеЗначение17 = ТекСтрока.О17;
			
			Обл.Параметры.Символ18 = ТекСтрока.Л18;
			Обл.Параметры.ДополнительноеЗначение18 = ТекСтрока.О18;
			
			Обл.Параметры.Символ19 = ТекСтрока.Л19;
			Обл.Параметры.ДополнительноеЗначение19 = ТекСтрока.О19;
			
			Обл.Параметры.Символ20 = ТекСтрока.Л20;
			Обл.Параметры.ДополнительноеЗначение20 = ТекСтрока.О20;
			
			Обл.Параметры.Символ21 = ТекСтрока.Л21;
			Обл.Параметры.ДополнительноеЗначение21 = ТекСтрока.О21;
			
			Обл.Параметры.Символ22 = ТекСтрока.Л22;
			Обл.Параметры.ДополнительноеЗначение22 = ТекСтрока.О22;
			
			Обл.Параметры.Символ23 = ТекСтрока.Л23;
			Обл.Параметры.ДополнительноеЗначение23 = ТекСтрока.О23;
			
			Обл.Параметры.Символ24 = ТекСтрока.Л24;
			Обл.Параметры.ДополнительноеЗначение24 = ТекСтрока.О24;
			
			Обл.Параметры.Символ25 = ТекСтрока.Л25;
			Обл.Параметры.ДополнительноеЗначение25 = ТекСтрока.О25;
			
			Обл.Параметры.Символ26 = ТекСтрока.Л26;
			Обл.Параметры.ДополнительноеЗначение26 = ТекСтрока.О26;
			
			Обл.Параметры.Символ27 = ТекСтрока.Л27;
			Обл.Параметры.ДополнительноеЗначение27 = ТекСтрока.О27;
			
			Обл.Параметры.Символ28 = ТекСтрока.Л28;
			Обл.Параметры.ДополнительноеЗначение28 = ТекСтрока.О28;
			
			Обл.Параметры.Символ29 = ТекСтрока.Л29;
			Обл.Параметры.ДополнительноеЗначение29 = ТекСтрока.О29;
			
			Обл.Параметры.Символ30 = ТекСтрока.Л30;
			Обл.Параметры.ДополнительноеЗначение30 = ТекСтрока.О30;
			
			Обл.Параметры.Символ31 = ТекСтрока.Л31;
			Обл.Параметры.ДополнительноеЗначение31 = ТекСтрока.О31;
			
			Обл.Параметры.ДниПерваяПоловина = ТекСтрока.ЛинияДней15;
			Обл.Параметры.ДниВтораяПоловина = ТекСтрока.ЛинияДней31 - ТекСтрока.ЛинияДней15;
			Обл.Параметры.ДниЗаМесяц = ТекСтрока.ЛинияДней31;
			
			Обл.Параметры.ЧасыПерваяПоловина = Окр(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.ЛинияВремя15),2);
			Обл.Параметры.ЧасыВтораяПоловина = Окр(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.ЛинияВремя31 - ТекСтрока.ЛинияВремя15),2);
			Обл.Параметры.ЧасыЗаМесяц = Окр(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.ЛинияВремя31),2);
			
			Если Не Начисление1.Пустая() Тогда
				Если Начисление1.ПризнакДнейЧасов Тогда
					Обл.Параметры.НачислениеВремя1 = Окр(ТекСтрока.НачислениеДней1, 0);
					Обл.Параметры.Начисление1 = ?(ТекСтрока.НачислениеДней1 > 0, Начисление1.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НачислениеВремя1 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НачислениеВремя1), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Начисление1 = ?(ТекСтрока.НачислениеВремя1 > 0, Начисление1.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Начисление2.Пустая() Тогда
				Если Начисление2.ПризнакДнейЧасов Тогда
					Обл.Параметры.НачислениеВремя2 = Окр(ТекСтрока.НачислениеДней2, 0);
					Обл.Параметры.Начисление2 = ?(ТекСтрока.НачислениеДней2 > 0, Начисление2.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НачислениеВремя2 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НачислениеВремя2), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Начисление2 = ?(ТекСтрока.НачислениеВремя2 > 0, Начисление2.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Начисление3.Пустая() Тогда
				Если Начисление3.ПризнакДнейЧасов Тогда
					Обл.Параметры.НачислениеВремя3 = Окр(ТекСтрока.НачислениеДней3, 0);
					Обл.Параметры.Начисление3 = ?(ТекСтрока.НачислениеДней3 > 0, Начисление3.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НачислениеВремя3 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НачислениеВремя3), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Начисление3 = ?(ТекСтрока.НачислениеВремя3 > 0, Начисление3.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Начисление4.Пустая() Тогда
				Если Начисление4.ПризнакДнейЧасов Тогда
					Обл.Параметры.НачислениеВремя4 = Окр(ТекСтрока.НачислениеДней4, 0);
					Обл.Параметры.Начисление4 = ?(ТекСтрока.НачислениеДней4 > 0, Начисление4.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НачислениеВремя4 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НачислениеВремя4), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Начисление4 = ?(ТекСтрока.НачислениеВремя4 > 0, Начисление4.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Начисление5.Пустая() Тогда
				Если Начисление5.ПризнакДнейЧасов Тогда
					Обл.Параметры.НачислениеВремя5 = Окр(ТекСтрока.НачислениеДней5, 0);
					Обл.Параметры.Начисление5 = ?(ТекСтрока.НачислениеДней5 > 0, Начисление5.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НачислениеВремя5 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НачислениеВремя5), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Начисление5 = ?(ТекСтрока.НачислениеВремя5 > 0, Начисление5.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Начисление6.Пустая() Тогда
				Если Начисление6.ПризнакДнейЧасов Тогда
					Обл.Параметры.НачислениеВремя6 = Окр(ТекСтрока.НачислениеДней6, 0);
					Обл.Параметры.Начисление6 = ?(ТекСтрока.НачислениеДней6 > 0, Начисление6.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НачислениеВремя6 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НачислениеВремя6), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Начисление6 = ?(ТекСтрока.НачислениеВремя6 > 0, Начисление6.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Начисление7.Пустая() Тогда
				Если Начисление7.ПризнакДнейЧасов Тогда
					Обл.Параметры.НачислениеВремя7 = Окр(ТекСтрока.НачислениеДней7, 0);
					Обл.Параметры.Начисление7 = ?(ТекСтрока.НачислениеДней7 > 0, Начисление7.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НачислениеВремя7 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НачислениеВремя7), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Начисление7 = ?(ТекСтрока.НачислениеВремя7 > 0, Начисление7.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Начисление8.Пустая() Тогда
				Если Начисление8.ПризнакДнейЧасов Тогда
					Обл.Параметры.НачислениеВремя8 = Окр(ТекСтрока.НачислениеДней8, 0);
					Обл.Параметры.Начисление8 = ?(ТекСтрока.НачислениеДней8 > 0, Начисление8.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НачислениеВремя8 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НачислениеВремя8), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Начисление8 = ?(ТекСтрока.НачислениеВремя8 > 0, Начисление8.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			///
			Если Не Неявки1.Пустая() Тогда
				Если Неявки1.ПризнакДнейЧасов Тогда
					Обл.Параметры.НеявкиВремя1 = Окр(ТекСтрока.НеявкиДней1, 0);
					Обл.Параметры.Неявки1 = ?(ТекСтрока.НеявкиДней1 > 0, Неявки1.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НеявкиВремя1 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НеявкиВремя1), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Неявки1 = ?(ТекСтрока.НеявкиВремя1 > 0, Неявки1.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Неявки2.Пустая() Тогда
				Если Неявки2.ПризнакДнейЧасов Тогда
					Обл.Параметры.НеявкиВремя2 = Окр(ТекСтрока.НеявкиДней2, 0);
					Обл.Параметры.Неявки2 = ?(ТекСтрока.НеявкиДней2 > 0, Неявки2.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НеявкиВремя2 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НеявкиВремя2), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Неявки2 = ?(ТекСтрока.НеявкиВремя2 > 0, Неявки2.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Неявки3.Пустая() Тогда
				Если Неявки3.ПризнакДнейЧасов Тогда
					Обл.Параметры.НеявкиВремя3 = Окр(ТекСтрока.НеявкиДней3, 0);
					Обл.Параметры.Неявки3 = ?(ТекСтрока.НеявкиДней3 > 0, Неявки3.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НеявкиВремя3 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НеявкиВремя3), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Неявки3 = ?(ТекСтрока.НеявкиВремя3 > 0, Неявки3.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Неявки4.Пустая() Тогда
				Если Неявки4.ПризнакДнейЧасов Тогда
					Обл.Параметры.НеявкиВремя4 = Окр(ТекСтрока.НеявкиДней4, 0);
					Обл.Параметры.Неявки4 = ?(ТекСтрока.НеявкиДней4 > 0, Неявки4.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НеявкиВремя4 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НеявкиВремя4), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Неявки4 = ?(ТекСтрока.НеявкиВремя4 > 0, Неявки4.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Неявки5.Пустая() Тогда
				Если Неявки5.ПризнакДнейЧасов Тогда
					Обл.Параметры.НеявкиВремя5 = Окр(ТекСтрока.НеявкиДней5, 0);
					Обл.Параметры.Неявки5 = ?(ТекСтрока.НеявкиДней5 > 0, Неявки5.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НеявкиВремя5 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НеявкиВремя5), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Неявки5 = ?(ТекСтрока.НеявкиВремя5 > 0, Неявки5.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Неявки6.Пустая() Тогда
				Если Неявки6.ПризнакДнейЧасов Тогда
					Обл.Параметры.НеявкиВремя6 = Окр(ТекСтрока.НеявкиДней6, 0);
					Обл.Параметры.Неявки6 = ?(ТекСтрока.НеявкиДней6 > 0, Неявки6.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НеявкиВремя6 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НеявкиВремя6), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Неявки6 = ?(ТекСтрока.НеявкиВремя6 > 0, Неявки6.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Неявки7.Пустая() Тогда
				Если Неявки7.ПризнакДнейЧасов Тогда
					Обл.Параметры.НеявкиВремя7 = Окр(ТекСтрока.НеявкиДней7, 0);
					Обл.Параметры.Неявки7 = ?(ТекСтрока.НеявкиДней7 > 0, Неявки7.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НеявкиВремя7 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НеявкиВремя7), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Неявки7 = ?(ТекСтрока.НеявкиВремя7 > 0, Неявки7.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не Неявки8.Пустая() Тогда
				Если Неявки8.ПризнакДнейЧасов Тогда
					Обл.Параметры.НеявкиВремя8 = Окр(ТекСтрока.НеявкиДней8, 0);
					Обл.Параметры.Неявки8 = ?(ТекСтрока.НеявкиДней8 > 0, Неявки8.БуквенныйКод, "");
				Иначе
					Обл.Параметры.НеявкиВремя8 = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ТекСтрока.НеявкиВремя8), "ЧЦ=10; ЧДЦ=2; ЧРД=':'");
					Обл.Параметры.Неявки8 = ?(ТекСтрока.НеявкиВремя8 > 0, Неявки8.БуквенныйКод, "");
				КонецЕсли;	
			КонецЕсли;			
			
			//если таблица не умещается на страницу, тогда переносим на след. страницу с добавлением шапки с номерами колонок
			Если НЕ ТабДокумент.ПроверитьВывод(Обл) Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОблШапкаНомераКолонок = Макет.ПолучитьОбласть("КолонтитулНомераКолонок");
				ТабДокумент.Вывести(ОблШапкаНомераКолонок);
			КонецЕсли;
			
			ТабДокумент.Вывести(Обл);
		КонецЦикла;
		
		Обл = Макет.ПолучитьОбласть("Подвал");		
		ТабДокумент.Вывести(Обл);
		
		Возврат ТабДокумент;
		
	КонецФункции // 
	
	// Функция выводит на печать форму "Бланк"
	//
	// Параметры:
	//		ИмяМакета - имя макета печати
	//
	// Возвращаемое значение:
	//		Табличный документ
	Функция ПечатьБланка(ИмяМакета) Экспорт
		
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ФормированиеТабеля";
		
		Макет = ПолучитьМакет(ИмяМакета);
		
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДокумент.ПолеСверху = 0;
		ТабДокумент.ПолеСлева = 0;
		ТабДокумент.ПолеСнизу = 0;
		ТабДокумент.ПолеСправа = 0;
		ФорматДаты      = "ДФ='дд.ММ.гггг'";
		
		Обл   = Макет.ПолучитьОбласть("Шапка");
		Обл.Параметры.ИмяОрганизации = Организация;
		Обл.Параметры.ИмяПодразделения = Подразделение;
		Обл.Параметры.ДатаНач 		= Формат(НачалоМесяца(Дата),ФорматДаты);
		Обл.Параметры.ДатаКон 		= Формат(КонецМесяца(Дата),ФорматДаты);
		Обл.Параметры.НомерДокумента = Номер;
		Обл.Параметры.ДатаДокумента  = Дата;
		
		ТабДокумент.Вывести(Обл);
		Обл   = Макет.ПолучитьОбласть("Колонтитул");
		ТабДокумент.Вывести(Обл);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	уатСведенияОСотрудникахСрезПоследних.Сотрудник,
		|	уатСведенияОСотрудникахСрезПоследних.ТабельныйНомер
		|ИЗ
		|	РегистрСведений.уатСведенияОСотрудниках.СрезПоследних(&ДатаНач, ) КАК уатСведенияОСотрудникахСрезПоследних
		|ГДЕ
		|	уатСведенияОСотрудникахСрезПоследних.Организация = &Организация
		|	И уатСведенияОСотрудникахСрезПоследних.ПодразделениеОрганизации = &ПодразделениеОрганизации
		|
		|УПОРЯДОЧИТЬ ПО
		|	уатСведенияОСотрудникахСрезПоследних.Сотрудник.Наименование";
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", Подразделение);
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Дата));
		
		Выборка = Запрос.Выполнить().Выбрать();
		НПП = 0;
		Пока Выборка.Следующий() Цикл
			Обл   = Макет.ПолучитьОбласть("Строка");
			НПП = НПП + 1;
			Обл.Параметры.НомерПП = НПП;
			Обл.Параметры.Работник = Выборка.Сотрудник;
			Обл.Параметры.ТабельныйНомер = Выборка.ТабельныйНомер;
			
			ТабДокумент.Вывести(Обл);
			Если НПП/8 = Цел(НПП/8)	Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЦикла;	
		Обл   = Макет.ПолучитьОбласть("Подвал");		
		ТабДокумент.Вывести(Обл);
		
		Возврат ТабДокумент;
		
	КонецФункции // 
	
	// Функция выводит на печать форму "Невыясненные дни"
	//
	// Параметры:
	//		ИмяМакета - имя макета печати
	//
	// Возвращаемое значение:
	//		Табличный документ
	Функция ПечатьНевыясненныеДни(ИмяМакета) Экспорт
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НевыясненныеДни";
		
		Макет = ПолучитьМакет(ИмяМакета);
		
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабДокумент.ПолеСверху = 0;
		ТабДокумент.ПолеСлева = 0;
		ТабДокумент.ПолеСнизу = 0;
		ТабДокумент.ПолеСправа = 0;
		ФорматДаты      = "ДФ='дд.ММ.гггг'";
		
		Обл   = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(Обл);
		Для Каждого ТекСтрока Из ОсновнаяТаблица Цикл
			Обл   = Макет.ПолучитьОбласть("Строка");
			Обл.Параметры.Работник = ТекСтрока.Сотрудник;
			Обл.Параметры.ТабельныйНомер = ТекСтрока.Код;
			Стр = "";
			Для ЧислоМесяца = 1 по День(КонецМесяца(Дата)) Цикл
				Если ПустаяСтрока(ЧтениеРаботы(ЧислоМесяца, ТекСтрока)) и ПустаяСтрока(ЧтениеОтклонений(ЧислоМесяца, ТекСтрока)) Тогда
					Стр = Стр + Строка(ЧислоМесяца) + ",";
				КонецЕсли;
			КонецЦикла;	
			Обл.Параметры.Строки = Стр;
			ТабДокумент.Вывести(Обл);
		КонецЦикла;
		Возврат ТабДокумент;
	КонецФункции	
	
	// Процедура осуществляет печать документа. Можно направить печать на 
	// экран или принтер, а также распечатать необходимое количество копий.
	//
	//  Название макета печати передается в качестве параметра,
	// по переданному названию находим имя макета в соответствии.
	//
	// Параметры:
	//  НазваниеМакета - строка, название макета.
	//
	Процедура Печать(НазваниеМакета = "", КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
		
		Если ЭтоНовый() Тогда
			Предупреждение("Документ можно распечатать только после его записи");
			Возврат;
		ИначеЕсли Не ?(Права = Неопределено, Ложь, уатПраваИНастройки.уатПраво("ПечатьНепроведенных", Права)) Тогда
			Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
			Возврат;
		КонецЕсли;
		
		Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
			Возврат;
		КонецЕсли;
		
		Если НазваниеМакета = "Т13" тогда
			ТабДокумент = ПечатьТабеля(НазваниеМакета);
		ИначеЕсли НазваниеМакета = "Бланк" тогда
			ТабДокумент = ПечатьБланка("Т13");
		ИначеЕсли НазваниеМакета = "НевыясненныеДни" тогда
			ТабДокумент = ПечатьНевыясненныеДни(НазваниеМакета);
		ИначеЕсли ТипЗнч(НазваниеМакета) = Тип("СправочникСсылка.ВнешниеОбработки") Тогда
			
			ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
			ОбъектВнешнейФормы = НазваниеМакета.ПолучитьОбъект();
			Если ОбъектВнешнейФормы = Неопределено Тогда
				Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
				Возврат;
			КонецЕсли;
			
			ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
			ДвоичныеДанные.Записать(ИмяФайла);
			Обработка = ВнешниеОбработки.Создать(ИмяФайла);
			Попытка
				Обработка.СсылкаНаОбъект = Ссылка;
				ТабДокумент = Обработка.Печать();
			Исключение
				Сообщить("Ошибка формата внешней обработки. Возможно выбрана обработка не для печати.", СтатусСообщения.Важное);
			КонецПопытки;
			
		КонецЕсли;
		
		уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, ""), Права);
		
	КонецПроцедуры // Печать
	
	// Возвращает доступные варианты печати документа
	//
	// Возвращаемое значение:
	//  Структура, каждая строка которой соответствует одному из вариантов печати
	//  
	//Функция ПолучитьСписокПечатныхФорм() Экспорт
	Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
		
		СтруктураМакетов = Новый Структура;
		
		СтруктураМакетов.Вставить("Т13"            , "Унифицированная Форма Т-13");
		СтруктураМакетов.Вставить("Бланк"          , "Бланк");
		СтруктураМакетов.Вставить("НевыясненныеДни", "Невыясненные дни");
		
		Возврат СтруктураМакетов ;
		
	КонецФункции // ПолучитьСтруктуруПечатныхФорм()
	
	
	
#КонецЕсли


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ,РежимЗаписи , РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначения.уатПроверкаПравПередЗаписьюВДокументах(ЭтотОбъект, Отказ, , Права);
КонецПроцедуры // ПередЗаписью


////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

// сохранение ссылки на коллекцию прав, настроек и окружения
Права = Неопределено;
#Если Клиент Тогда
	Права = глПраваУАТ;
#КонецЕсли
