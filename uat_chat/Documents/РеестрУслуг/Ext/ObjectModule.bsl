
Функция Данные(СсылкаНаОбъект,сооКолонок,СтрСвр,НадоГЗ=Ложь)
	
	сооКолонок.Колонки.Добавить("Ключ");
	сооКолонок.Колонки.Добавить("Значение");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	               |
	               |ВЫБРАТЬ *, &сс как ССылка INTO врТбл FROM &ТБЛ Т;
	               |
	               |ВЫБРАТЬ
	               |
				   
				   //Блок по шапке реестра услуг
	               |	РеестрУслугУслуги.Ссылка,
	               |	РеестрУслугУслуги.Ссылка.Дата,
	               |	РеестрУслугУслуги.Ссылка.Номер,
				   |	CASE WHEN &НАдоГЗ THEN РеестрУслугУслуги.Ссылка.Контрагент.НаименованиеПолное
				   |         ELSE РеестрУслугУслуги.Ссылка.Организация.НаименованиеПолное 
				   |         END КАК Организация,
				   |	CASE WHEN &НАдоГЗ THEN РеестрУслугУслуги.Ссылка.Контрагент.КонтрагентНаПечать
				   |         ELSE РеестрУслугУслуги.Ссылка.Организация.Наименование 
				   |         END КАК ОрганизацияНаПечать,
				   
				   //Блок по путевому листу
	               |	РеестрУслугУслуги.ПутевойЛист КАК ПЛ,
	               |	РеестрУслугУслуги.ПутевойЛист.Номер КАК НомерПЛ,
	               |	РеестрУслугУслуги.ПутевойЛист.ПозицияПП КАК ПозицияПП,
	               |	РеестрУслугУслуги.ПутевойЛист.НомерПачки КАК НомерПачки,
				   |	РеестрУслугУслуги.ПутевойЛист.ДатаВыезда КАК ДатаВыезда,
	               |	НачалоПериода(РеестрУслугУслуги.ПутевойЛист.ДатаВыезда,День) КАК дтВзд,
				   |	РеестрУслугУслуги.ПутевойЛист.ДатаВозвращения Как ДатаВозвращения,
				   |	РеестрУслугУслуги.ПутевойЛист.Водитель1 КАК Водитель1,
				   |	РеестрУслугУслуги.ПутевойЛист.Водитель2 КАК Водитель2,
				   |    РеестрУслугУслуги.ПутевойЛист.НомерПачки Пачка,
				   
				   //Блок по контрагенту
	               |	CASE WHEN &НАдоГЗ THEN РеестрУслугУслуги.Ссылка.КонтрагентГенЗаказчик.НаименованиеПолное 
				   |         ELSE РеестрУслугУслуги.Ссылка.Контрагент.НаименованиеПолное 
				   |         END КАК Заказчик,
	               |
	               |	CASE WHEN &НАдоГЗ THEN РеестрУслугУслуги.Ссылка.КонтрагентГенЗаказчик 
				   |         ELSE РеестрУслугУслуги.Ссылка.Контрагент 
				   |         END КАК Контрагент,
				   |
	               |	CASE WHEN &НАдоГЗ THEN РеестрУслугУслуги.Ссылка.ДоговорГЗ 
				   |         ELSE РеестрУслугУслуги.Ссылка.Договор 
				   |         END КАК Договор,
	               |
	               |	CASE WHEN &НАдоГЗ THEN РеестрУслугУслуги.Ссылка.ДоговорГЗ.Номер 
				   |         ELSE РеестрУслугУслуги.Ссылка.Договор.Номер 
				   |         END КАК НомерДоговора,
	               |
				   |	РеестрУслугУслуги.ЦехКонтрагента.КодПоиска КАК ЦехКонтрагентаКод,
	               |	РеестрУслугУслуги.ЦехКонтрагента КАК ЦехКонтрагента,
	               |	РеестрУслугУслуги.ЦехКонтрагента.Код КАК грпЦехКонтрагента,
	               |	CASE WHEN ЦехКонтрагента.Родитель = Значение(Справочник.ЦехаКонтрагента.ПустаяССЫлка) или ЦехКонтрагента.Родитель.НеВыводитьВГруппировкахНаПечать=Истина THEN ЦехКонтрагента     ELSE ЦехКонтрагента.Родитель      END КАК    ЦехПапка,
	               |	CASE WHEN ЦехКонтрагента.Родитель = Значение(Справочник.ЦехаКонтрагента.ПустаяССЫлка) или ЦехКонтрагента.Родитель.НеВыводитьВГруппировкахНаПечать=Истина THEN ЦехКонтрагента.Код ELSE ЦехКонтрагента.Родитель.Код  END КАК грпЦехПапка,
				   
				   //Блок по цеху контрагента
				   |	РеестрУслугУслуги.ЦехКонтрагента.МВЗ КАК МВЗ,
				   |	РеестрУслугУслуги.ЦехКонтрагента.Месторождение КАК Месторождение,
				   |	РеестрУслугУслуги.ЦехКонтрагента.Месторождение.Код КАК грпМесторождение,
				   |	РеестрУслугУслуги.ЦехКонтрагента.ИмяНаПечать КАК ЦехКонтрагентаПН,
				   |	РеестрУслугУслуги.ЦехКонтрагента.Доп  КАК ЦехКонтрагентаДоп,
				   |	РеестрУслугУслуги.ЦехКонтрагента.Доп1 КАК ЦехКонтрагентаДоп1,
				   //У цеха получим реквизит номенклатура, а из номенклатуры - полное наименование, которое будет означать название Лицензионного участка
	               |	CASE WHEN ЦехКонтрагента <> Значение(Справочник.ЦехаКонтрагента.ПустаяССЫлка)
				   |	THEN
				   |		CASE WHEN ЦехКонтрагента.НоменклатураДляБухгалтерии <> Значение(Справочник.Номенклатура.ПустаяССЫлка)
				   |		THEN ЦехКонтрагента.НоменклатураДляБухгалтерии.Наименование
				   |    	Else """"
				   |		END
				   |    Else """"
				   |	END КАК НоменклатураДляБухгалтерии,
				   
				   //Блок по ТС и прицепу
				   //Здесь определяем параметр "ТС"
				   //Либо из РегистрСведений.ДопАналитикаПоТСдляКонтрагента как Рег    ON Рег.Модель    = РеестрУслугУслуги.ТС
				   //Либо из РегистрСведений.ДопАналитикаПоТСдляКонтрагента как РегТип ON РегТип.Модель = РеестрУслугУслуги.ТипТС
				   //Либо просто как Наименование ТС из карточки ТС
	               |	CASE WHEN ПодСтрока(ISNULL(Рег.ИмяТС,"" ""),1,1)<>"" ""   THEN Рег.ИмяТС
	               |	     WHEN ПодСтрока(ISNULL(РегТип.ИмяТС,"" ""),1,1)<>"" "" THEN РегТип.ИмяТС 
			       |         ELSE РеестрУслугУслуги.ТС END КАК ТС,
	               |
				   |	РеестрУслугУслуги.ТС КАК грпТС,
	               |	РеестрУслугУслуги.ТС.ГаражныйНомер КАК ГарНомер,
	               |	РеестрУслугУслуги.ТС.ГосударственныйНомер КАК ГосНомер,
				   |	РеестрУслугУслуги.ТС.Модель КАК МодельТС,
				   |	РеестрУслугУслуги.ТС.Модель КАК ТСМодель,
				   |	РеестрУслугУслуги.ТС.Модель.Код КАК ТСМодельКод,
				   |    РеестрУслугУслуги.ТС.Модель.Грузоподъемность КАК ГрузоподъемностьТС,
				   |	РеестрУслугУслуги.ТипТС.ВидТС КАК ВидТС,
	               |	РеестрУслугУслуги.ТипТС КАК ТипТС,
	               |	РеестрУслугУслуги.ТипТС КАК грпТипТС,
	               |	РеестрУслугУслуги.ТипТС.ПроизводственыйКод КАК ТипТСПрзКод,
				   |    РеестрУслугУслуги.Прицеп.Модель.Грузоподъемность КАК Грузоподъемность,
				   
				   |    0 КолСмен,
				   |    1 КолПЛ,
				   
				   |	РеестрУслугУслуги.Пробег КАК Пробег,
	               |	РеестрУслугУслуги.Количество  КАК Количество,
				   |	РеестрУслугУслуги.КоличествоКмГруз КАК КоличествоКмГруз,
	               |	РеестрУслугУслуги.КоличествоТонн КАК КоличествоТонн,
	               |	РеестрУслугУслуги.Количество + РеестрУслугУслуги.Количество1 + РеестрУслугУслуги.Количество2 + РеестрУслугУслуги.Количество3 + РеестрУслугУслуги.Количество4 КАК Часы,
				   
				   |	 CASE WHEN &НадоГЗ=false THEN Сумма  + СуммаКм + Сумма1 ELSE СуммаГЗ + СуммаКмГЗ + Сумма1ГЗ END + РеестрУслугУслуги.Сумма2 + РеестрУслугУслуги.Сумма3 + РеестрУслугУслуги.Сумма4 КАК итСумма,
	               |	 CASE WHEN &НадоГЗ=false THEN Сумма  + СуммаКм ELSE СуммаГЗ + СуммаКмГЗ END КАК итСуммаОсн,
	               |	(CASE WHEN &НадоГЗ=false THEN Сумма  + СуммаКм + Сумма1 ELSE СуммаГЗ + СуммаКмГЗ + Сумма1ГЗ END + РеестрУслугУслуги.Сумма2 + РеестрУслугУслуги.Сумма3 + РеестрУслугУслуги.Сумма4) * &СтавкаНДС КАК СуммаНДС,
				   |	(CASE WHEN &НадоГЗ=false THEN Сумма  + СуммаКм + Сумма1 ELSE СуммаГЗ + СуммаКмГЗ + Сумма1ГЗ END + РеестрУслугУслуги.Сумма2 + РеестрУслугУслуги.Сумма3 + РеестрУслугУслуги.Сумма4) * (1 + &СтавкаНДС) КАК СуммаСНДС,
				   |	   CASE WHEN &НадоГЗ=false THEN Тариф  when Количество<>0  THEN Выразить(СуммаГЗ/Количество как Число(9,2))   ELSE 0 END 
				   |     + CASE WHEN &НадоГЗ=false THEN Тариф1 when Количество1<>0 THEN Выразить(Сумма1ГЗ/Количество1 как Число(9,2)) ELSE 0 END + РеестрУслугУслуги.Тариф2 + РеестрУслугУслуги.Тариф3 + РеестрУслугУслуги.Тариф4 КАК ТарифЧасы,
				   
				   |	CASE WHEN СуммаКм=0   и &НадоГЗ=false  THEN 0 
	               |	     WHEN СуммакмГЗ=0 и &НадоГЗ=истина THEN 0 ELSE РеестрУслугУслуги.КоличествоКм END КАК КоличествоКм,
	               |
				   |	РеестрУслугУслуги.Количество1 КАК ДокКоличество1,
	               |	РеестрУслугУслуги.Количество2 КАК ДокКоличество2,
	               |	РеестрУслугУслуги.Количество3 КАК ДокКоличество3,
	               |	РеестрУслугУслуги.Количество4 КАК ДокКоличество4,
				   
				   |	CASE WHEN &НадоГЗ=false THEN РеестрУслугУслуги.Сумма   ELSE СуммаГЗ   END  КАК Сумма,
				   |	CASE WHEN &НадоГЗ=false THEN РеестрУслугУслуги.СуммаКм ELSE СуммакмГЗ END  КАК СуммаКм,
	               |	CASE WHEN &НадоГЗ=false THEN РеестрУслугУслуги.Сумма1  ELSE Сумма1ГЗ  END  КАК ДокСумма1,
	               |	CASE WHEN &НадоГЗ=false THEN РеестрУслугУслуги.Сумма2  ELSE 0 END          КАК ДокСумма2,
	               |	CASE WHEN &НадоГЗ=false THEN РеестрУслугУслуги.Сумма3  ELSE 0 END          КАК ДокСумма3,
	               |	CASE WHEN &НадоГЗ=false THEN РеестрУслугУслуги.Сумма4  ELSE 0 END          КАК ДокСумма4,
				   
				   |	РеестрУслугУслуги.Номенклатура  КАК Номенклатура,
	               |	РеестрУслугУслуги.Номенклатура1 КАК Номенклатура1,
	               |	РеестрУслугУслуги.Номенклатура2 КАК Номенклатура2,
	               |	РеестрУслугУслуги.Номенклатура3 КАК Номенклатура3,
				   |	РеестрУслугУслуги.Номенклатура4 КАК Номенклатура4,
				   
				   |	РеестрУслугУслуги.Номенклатура1.КОд КАК Код1,
	               |	РеестрУслугУслуги.Номенклатура2.КОд КАК Код2,
	               |	РеестрУслугУслуги.Номенклатура3.КОд КАК Код3,
				   |	РеестрУслугУслуги.Номенклатура4.КОд КАК Код4,
				   
				   |	CASE WHEN &НадоГЗ=false THEN Тариф    when Количество<>0    THEN Выразить(СуммаГЗ/Количество как Число(9,2))       ELSE 0 END КАК Тариф,
				   |	CASE WHEN &НадоГЗ=false THEN ТарифКм  when КоличествоКм<>0  THEN Выразить(СуммаКмГЗ/КоличествоКм как Число(9,2))   ELSE 0 END КАК ТарифКм,
				   |	CASE WHEN &НадоГЗ=false THEN Тариф1   when Количество1<>0   THEN Выразить(Сумма1ГЗ/Количество1 как Число(9,2))     ELSE 0 END КАК ДокТариф1,
				   
	               |	РеестрУслугУслуги.Тариф   КАК ДокТариф,
				   |	РеестрУслугУслуги.Тариф2  КАК ДокТариф2,
	               |	РеестрУслугУслуги.Тариф3  КАК ДокТариф3,
	               |	РеестрУслугУслуги.Тариф4  КАК ДокТариф4,
	               |	РеестрУслугУслуги.Тарифкм КАК ДокТарифКм,
				   
				   
	               |	ISNULL(ISNULL(РегТип.Зн, Рег.Зн) ,"" "")  КАК ДопЗн,
	               |	ISNULL(ISNULL(РегТип.Зн1,Рег.Зн1),"" "") КАК ДопЗн1,
	               |	ISNULL(ISNULL(РегТип.Зн1,Рег.Зн2),"" "") КАК ДопЗн2,
				   |    РегПодр.Подразделение.Код Подразделение,
				   |	ISNULL(тбЗаявки.НомерЗаявки,"""") КАК НомерЗаявки
				   |
				   |ИЗ
				   |	врТбл КАК РеестрУслугУслуги
				   |    LEFT OUTER JOIN РегистрСведений.ДопАналитикаПоТСдляКонтрагента как Рег    ON Рег.Модель    = РеестрУслугУслуги.ТС       и Рег.Контрагент    = РеестрУслугУслуги.Ссылка.Контрагент
				   |    LEFT OUTER JOIN РегистрСведений.ДопАналитикаПоТСдляКонтрагента как РегТип ON РегТип.Модель = РеестрУслугУслуги.ТипТС    и РегТип.Контрагент = РеестрУслугУслуги.Ссылка.Контрагент
				   |    LEFT OUTER JOIN РегистрСведений.уатМестонахождениеТС.СрезПоследних(&Дт, ТС в (SELECT DISTINCT Д.ТС FROM врТбл Д  )) РегПодр ON  РегПодр.ТС = РеестрУслугУслуги.ТС
				   |    LEFT OUTER JOIN (SELECT TOP 1    
				   |                        НомерЗаявки
				   |                      FROM Документ.ЗаявкаНаТС дкЗая
				   |                      WHERE дкЗая.дата >= НачалоПериода(&Дт,месяц)
				   |                          и дкЗая.дата <= КонецПериода( &Дт,месяц)
				   |                          и дкЗая.Контрагент = &КА 
				   |                          и дкЗая.ПометкаУдаления = Ложь
				   |                    ) тбЗаявки ON Истина
	               |
				   |";
				   
	   Запрос.УстановитьПараметр("сс",СсылкаНаОбъект);
	   Запрос.УстановитьПараметр("КА",Контрагент);
	   Запрос.УстановитьПараметр("ТБл",Услуги.Выгрузить());
	   Запрос.УстановитьПараметр("Дт",СсылкаНаОбъект.Дата);
	   Запрос.УстановитьПараметр("НадоГЗ",НадоГЗ);
	   Если СсылкаНаОбъект.Дата >= Дата('2019.01.01 00:00:00') Тогда
		   СтавкаНДС = 0.20;
	   Иначе
		   СтавкаНДС = 0.18;
	   КонецЕсли;
	   Запрос.УстановитьПараметр("СтавкаНДС",СтавкаНДС);
	   
	   Тбл =  Запрос.Выполнить().Выгрузить(); 
	   Тбл.Сортировать("ДатаВыезда");
	   
	   СТрСвр = "Пробег,Часы,КоличествоКмГруз,КоличествоТонн,итСумма,итСуммаОсн,СуммаНДС,СуммаСНДС,Количество,КоличествоКм,Сумма,СуммаКм,КолПЛ,ДокСумма1,ДокКоличество1";
	   Если Тбл.Итог("Сумма")<>0 Тогда
		   НовСтр = сооКолонок.Добавить();
		   НовСтр.Ключ = Справочники.Номенклатура.Автоуслуги;
		   НовСтр.Значение = "";
	   КонецЕСЛИ;
	   
	   Если Тбл.Итог("СуммаКм")<>0 Тогда
		   НовСтр = сооКолонок.Добавить();
		   НовСтр.Ключ = Справочники.Номенклатура.Пробег;
		   НовСтр.Значение = "Км";
	   КонецЕСЛИ;
	   
	   Для каждого стр из Тбл Цикл
		   Стр.КолСмен = МАКС(1,ОКР(стр.Часы/11,0));
		   Для а=1 по 4 Цикл
			   
			   Если Стр["ДокСумма"+а]=0 ТОгда ПродолжитЬ; КонецЕСЛИ;
			   
			   Если сооКолонок.Найти(Стр["Номенклатура"+а],"Ключ")=Неопределено Тогда
				   НовСтр = сооКолонок.Добавить();
				   НовСтр.Ключ = Стр["Номенклатура"+а];
				   НовСтр.Значение = СокрлП(Стр["Код"+а]);
				   Тбл.Колонки.Добавить("Количество"+СокрлП(Стр["Код"+а]),Новый ОписаниеТипов("Число"));
				   Тбл.Колонки.Добавить("Тариф"+СокрлП(Стр["Код"+а]),Новый ОписаниеТипов("Число"));
				   Тбл.Колонки.Добавить("Сумма"+СокрлП(Стр["Код"+а]),Новый ОписаниеТипов("Число"));
			   КонецЕСЛИ;
			   
			   Стр["Количество"+СокрлП(Стр["Код"+а])] 	= Стр["ДокКоличество"+а];
			   Стр["Тариф"+СокрлП(Стр["Код"+а])] 		= Стр["ДокТариф"+а];
			   Стр["Сумма"+СокрлП(Стр["Код"+а])] 		= Стр["ДокСумма"+а];
			   СтрСвр = СтрСвр+",Количество"+СокрлП(Стр["Код"+а])+",Сумма"+СокрлП(Стр["Код"+а]);
		   КонецЦикла;
		   
	   КонецЦикла;
	   
	   сооКолонок.Сортировать("Значение");
	   
	   Возврат Тбл;		   
				   
КонецФункции

Функция ДанныеПроверка(СсылкаНаОбъект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	               |
	               |ВЫБРАТЬ *, &сс как ССылка INTO врТбл FROM &ТБЛ Т;
	               |
	               |ВЫБРАТЬ
	               |	РеестрУслугУслуги.Ссылка.Организация.НаименованиеПолное КАК Организация,
	               |	РеестрУслугУслуги.ПутевойЛист.Ссылка ПутевойЛист,
	               |	РеестрУслугУслуги.Ссылка.Номер,
	               |	РеестрУслугУслуги.Ссылка.Дата,
	               |	РеестрУслугУслуги.Ссылка.Контрагент.НаименованиеПолное КАК Заказчик,
	               |	РеестрУслугУслуги.ПутевойЛист.Номер КАК НомерПЛ,
	               |	РеестрУслугУслуги.ПутевойЛист.НомерПачки КАК НомерПачки,
	               |	НачалоПериода(РеестрУслугУслуги.ПутевойЛист.ДатаВыезда,День) КАК ДатаВыезда,
	               |	РеестрУслугУслуги.ПутевойЛист.ДатаВозвращения КАК ДатаВозвращения,
	               |	РеестрУслугУслуги.ЦехКонтрагента.Код КАК ЦехКонтрагентаКод,
	               |	РеестрУслугУслуги.ЦехКонтрагента КАК ЦехКонтрагента,
	               |	РеестрУслугУслуги.ТС КАК ТС,
	               |	РеестрУслугУслуги.ТС.ТипТС КАК ТипТС,
	               |	РеестрУслугУслуги.ТС.ГаражныйНомер КАК ГарНомер,
	               |	РеестрУслугУслуги.ТС.ГосударственныйНомер КАК ГосНомер,
	               |	РеестрУслугУслуги.Количество КАК Количество,
	               |	РеестрУслугУслуги.Сумма КАК Сумма,
	               |	РеестрУслугУслуги.Количество1 КАК Количество1,
	               |	РеестрУслугУслуги.СуммаКм КАК СуммаКм,
	               |	РеестрУслугУслуги.КоличествоКм КАК КоличествоКм,
	               |	РеестрУслугУслуги.Сумма1 КАК Сумма1,
	               |	РеестрУслугУслуги.Количество2 КАК Количество2,
	               |	РеестрУслугУслуги.Сумма2 КАК Сумма2,
	               |	РеестрУслугУслуги.Количество3 КАК Количество3,
	               |	РеестрУслугУслуги.Сумма3 КАК Сумма3,
	               |	РеестрУслугУслуги.Количество4 КАК Количество4,
	               |	РеестрУслугУслуги.Сумма4 КАК Сумма4,
	               |	РеестрУслугУслуги.Пробег КАК Пробег,
	               |	РеестрУслугУслуги.Тариф КАК Тариф,
	               |	РеестрУслугУслуги.ТарифКм КАК ТарифКм,
	               |	РеестрУслугУслуги.Тариф1 КАК Тариф1,
	               |	РеестрУслугУслуги.Тариф2 КАК Тариф2,
	               |	РеестрУслугУслуги.Тариф3 КАК Тариф3,
	               |	РеестрУслугУслуги.Тариф4 КАК Тариф4,
	               |	РеестрУслугУслуги.Количество1 + РеестрУслугУслуги.Количество2 + РеестрУслугУслуги.Количество3 КАК Часы,
	               |	РеестрУслугУслуги.Сумма + РеестрУслугУслуги.Сумма1 + РеестрУслугУслуги.Сумма2 + РеестрУслугУслуги.Сумма3 + РеестрУслугУслуги.Сумма4 КАК итСумма,
	               |	(РеестрУслугУслуги.Сумма + РеестрУслугУслуги.Сумма1 + РеестрУслугУслуги.Сумма2 + РеестрУслугУслуги.Сумма3 + РеестрУслугУслуги.Сумма4) * 0.18 КАК СуммаНДС,
	               |	(РеестрУслугУслуги.Сумма + РеестрУслугУслуги.Сумма1 + РеестрУслугУслуги.Сумма2 + РеестрУслугУслуги.Сумма3 + РеестрУслугУслуги.Сумма4) * 1.18 КАК СуммаСНДС,
	               |	РеестрУслугУслуги.ТС.Модель КАК ТСМодель,
	               |	РеестрУслугУслуги.ЦехКонтрагента.МВЗ КАК МВЗ,
	               |	РеестрУслугУслуги.Тариф1 + РеестрУслугУслуги.Тариф2 + РеестрУслугУслуги.Тариф3 КАК ТарифЧасы
	               |ИЗ
	               |	врТбл КАК РеестрУслугУслуги
				   //|	Документ.РеестрУслуг.Услуги КАК РеестрУслугУслуги
				   //|ГДЕ
				   //|	РеестрУслугУслуги.Ссылка = &СС
				   |ORDER BY
				   |  НомерПачки,
				   |  ТС.ГаражныйНомер,
				   |  ДатаВыезда,
				   |  НомерПЛ
	               |ИТОГИ
	               |	СУММА(Количество),
	               |	СУММА(Сумма),
	               |	СУММА(Количество1),
	               |	СУММА(Сумма1),
	               |	СУММА(Количество2),
	               |	СУММА(Сумма2),
	               |	СУММА(Количество3),
	               |	СУММА(Сумма3),
	               |	СУММА(Количество4),
	               |	СУММА(Сумма4),
	               |	СУММА(Пробег),
	               |	СРЕДНЕЕ(Тариф),
	               |	СРЕДНЕЕ(Тарифкм),
	               |	СРЕДНЕЕ(Тариф1),
	               |	СРЕДНЕЕ(Тариф2),
	               |	СРЕДНЕЕ(Тариф3),
	               |	СРЕДНЕЕ(Тариф4),
	               |	СУММА(Часы),
	               |	СУММА(итСумма),
	               |	СУММА(СуммаНДС),
	               |	СУММА(СуммаСНДС),
	               |	СУММА(ТарифЧасы)
	               |ПО
	               |	ОБЩИЕ,
	               |	Тариф,
	               |	ТипТС";
				   Запрос.УстановитьПараметр("сс",СсылкаНаОбъект);
				   Запрос.УстановитьПараметр("ТБл",Услуги.Выгрузить());
				   Возврат Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

Функция УбратьООО_ЗАО(Зн)
	
	Зн = СтрЗаменить(Зн,"  "," ");
	Зн = СтрЗаменить(Зн,"Общество с ограниченной ответственностью","ООО");
	Зн = СтрЗаменить(Зн,"Общество с Ограниченной Ответственностью","ООО");
	Зн = СтрЗаменить(Зн,"Открытое акционерное общество ","ОАО");
	Зн = СтрЗаменить(Зн,"Открытое Акционерное Общество ","ОАО");
	Зн = СтрЗаменить(Зн,"Закрытое акционерное общество ","ЗАО");
	Зн = СтрЗаменить(Зн,"Закрытое Акционерное Общество ","ЗАО");
	
	Возврат Зн;
	
КонецФункции

Процедура ПолучитьРуководителяПредприятия(итТбл)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОтвРук.ФизическоеЛицо  КАК ФизЛицо
				   |INTO врФЛ
	               |ИЗ
	               |	РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&ДатаСреза,ОтветственноеЛицо = Значение(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) КАК ОтвРук
				   |WHERE ОтвРук.СтруктурнаяЕдиница = &Организация
				   | ;
				   |
				   |SELECT
				   | ФизЛица.ФизЛицо.Наименование ФЛимя,
				   | Должность.Наименование ДЛж,
				   | РегФИО.Фамилия,
				   | РегФИО.Имя,
				   | РегФИО.Отчество
				   |
				   |
				   |FROM врФЛ ФизЛица
				   |
				   |ЛЕВОЕ СОЕДИНЕНИЕ 
				   |		(ВЫБРАТЬ 
				   |			РаботникиОрганизацийСрезПоследних.ТабельныйНомер КАК ТабельныйНомер,
				   |			РаботникиОрганизацийСрезПоследних.Период,
				   |			РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
				   |			РаботникиОрганизацийСрезПоследних.Должность КАК Должность,
				   |			РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации КАК ПодразделениеОрганизации
				   |		ИЗ
				   |			РегистрСведений.уатСведенияОСотрудниках.СрезПоследних(&ДатаСреза, Сотрудник.ФизЛицо IN (SELECT ФизЛицо ИЗ врФЛ Т ) 
				   |                                                                           и (Сотрудник.ДатаУвольнения = ДатаВремя(1,1,1) или Сотрудник.ДатаУвольнения >= &ДатаСреза)
				   |                                                                           И Организация = &Организация) КАК РаботникиОрганизацийСрезПоследних
				   |		) КАК РаботникиОрганизацийСрезПоследних
				   |	ПО ФизЛица.ФизЛицо = РаботникиОрганизацийСрезПоследних.Сотрудник.ФизЛицо
				   
				   |LEFT OUTER JoIN РегистрСведений.ФИОФизЛиц.СрезПоследних(, ФизЛицо IN (SELECT ФизЛицо ИЗ врФЛ Т )) РЕгФИО ON Истина
				   |
				   |";
				   Запрос.УстановитьПараметр("ДатаСреза",Дата);
				   Запрос.УстановитьПараметр("Организация",Организация);
				   тбл = запрос.Выполнить().Выгрузить();
				   
				   итТбл.Колонки.Добавить("РукОргДлж",Новый ОписаниеТипов("Строка"));
				   итТбл.Колонки.Добавить("РукОрг",Новый ОписаниеТипов("Строка"));
					   
				   Если ТБл.Количество()>0 Тогда
					   
					   Если СокрлП(ТБл[0].Фамилия)="" ТОгда
						   пИмя = Тбл[0].ФЛимя;
					   ИНаче
						   пИмя = СокрЛП(ТБл[0].Фамилия)+" "+Врег(Лев(ТБл[0].Имя,1))+"."+Врег(Лев(ТБл[0].Отчество,1))+".";
					   КонецесЛИ;
					   
					   итТбл[0].РукОргДлж = ТБл[0].Длж+Символы.ПС+СокрЛП(Организация);
					   итТбл[0].РукОрг = пИмя;
				   КонецЕсли;
				   
	
КонецПроцедуры

Функция ДанныеШапка(СсылкаНаОбъект,НадоГЗ=Ложь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	CASE WHEN &НАдоГЗ THEN РеестрУслугУслуги.Контрагент.НаименованиеПолное
				   |         ELSE РеестрУслугУслуги.Организация.НаименованиеПолное 
				   |         END КАК Организация,
				   
	               |	CASE WHEN &НАдоГЗ THEN РеестрУслугУслуги.КонтрагентГенЗаказчик.НаименованиеПолное 
				   |         ELSE РеестрУслугУслуги.Контрагент.НаименованиеПолное 
				   |         END КАК Заказчик,
				   
	               |	CASE WHEN &НАдоГЗ THEN РеестрУслугУслуги.КонтрагентГенЗаказчик 
				   |         ELSE РеестрУслугУслуги.Контрагент 
				   |         END КАК Контрагент,
				   
				   |	CASE WHEN &НАдоГЗ THEN РеестрУслугУслуги.КонтрагентГенЗаказчик.КонтрагентНаПечать
				   |         ELSE РеестрУслугУслуги.Контрагент.КонтрагентНаПечать
				   |         END КАК КонтрагентНаПечать,	// Алексей, 19.08.2020, РН-Бурение Ханты 3 вида реестров
				   
	               |	CASE WHEN &НАдоГЗ THEN ISNULL(ДокПод.ФИО,""       "") 
				   |         ELSE ISNULL(ДокИсп.Сотрудник,Значение(Справочник.уатСотрудники.ПустаяСсылка)) 
				   |         END КАК пГлОпер,
				   
	               |	CASE WHEN &НАдоГЗ THEN ISNULL(ДокГЗ.ФИО,""       "") 
				   |         ELSE ISNULL(ДокПод.ФИО,""       "") 
				   |         END КАК зкзРуководитель,
				   
	               |	CASE WHEN (&НАдоГЗ = true  и ПОДСТРОКА(ISNULL(ДокГЗ.Должность,"" ""),  1, 1) <> "" "")
				   |              THEN ДокГЗ.Должность
				   |         WHEN (&НАдоГЗ = false и ПОДСТРОКА(ISNULL(ДокПод.Должность,"" ""), 1, 1) <> "" "")
				   |              THEN ДокПод.Должность 
				   |         ELSE "" "" 
				   |         END КАК ЗкзТхт,
				   
	               |	CASE WHEN &НАдоГЗ THEN РеестрУслугУслуги.ДоговорГЗ 
				   |         ELSE РеестрУслугУслуги.Договор 
				   |         END КАК Договор,
				   
				   |	CASE WHEN &НАдоГЗ THEN РеестрУслугУслуги.Ссылка.ДоговорГЗ.Номер
				   |         ELSE РеестрУслугУслуги.Ссылка.Договор.Номер
				   |         END КАК НомерДоговора,	// Алексей, 19.08.2020, РН-Бурение Ханты 3 вида реестров
				   
				   |	CASE WHEN &НАдоГЗ THEN РеестрУслугУслуги.Ссылка.ДоговорГЗ.Дата 
				   |         ELSE РеестрУслугУслуги.Ссылка.Договор.Дата
				   |         END КАК ДатаДоговора,	// Алексей, 19.08.2020, РН-Бурение Ханты 3 вида реестров
				   
	               |	CASE WHEN (&НАдоГЗ и ПОДСТРОКА(ISNULL(ДокПод.Должность,"" ""), 1, 1) <> "" "")
				   |              THEN ДокПод.Должность 
				   |         ELSE ""                                                                                "" 
				   |         END КАК ДлжОпер,
				   
				   
	               |	РеестрУслугУслуги.Номер,
	               |	""                      "" Дата,
	               |	""                      "" максДата,
	               |	""                      "" минДата,
	               |	""                      "" ГлОпер,
	               |	""                                                                  "" Дов,
	               |	""                      "" Месяц,
				   |	""                      "" ДатаДоговораФ,	// Алексей, 19.08.2020, РН-Бурение Ханты 3 вида реестров
	               |	РеестрУслугУслуги.Дата Дт,
	               |	РеестрУслугУслуги.ЦО КАК ЦО,
	               |	КонтактнаяИнформация.Представление КАК Телефон,
	               |	РеестрУслугУслуги.Договор.ИмяЗаказчика ИмяЗаказчик,
	               |	РеестрУслугУслуги.Договор.ИмяИсполнителя ИмяИсполнитель,
	               |	РеестрУслугУслуги.Договор.ДопТекстВПодвал ДопТекстВПодвал,
				   |    ДокТб.МаксДт мкДт,
				   |    ДокТб.МинДт мнДт,
				   |    ""Кол-во часов"" ЧасыШапка
	               |ИЗ
	               |	Документ.РеестрУслуг КАК РеестрУслугУслуги
				   
				   |      LEFT OUTER JOIN (SELECT Ссылка, MAX(ПутевойЛист.ДатаВыезда) МаксДт,MIN(ПутевойЛист.ДатаВыезда) МинДт
				   |						 FROM Документ.РеестрУслуг.Услуги ДокТб 
				   |                        WHERE ДокТб.Ссылка = &СС
				   |					 GROUP BY Ссылка) ДокТб ON Истина
				   
				   |     LEFT OUTER JOIN Документ.РеестрУслуг.ПодписиЗаказчик ДокПод ON ДокПод.Ссылка = РеестрУслугУслуги.Ссылка и ДокПод.НомерСтроки = 1
				   
				   |     LEFT OUTER JOIN Документ.РеестрУслуг.ПодписиГенЗаказчик ДокГЗ ON ДокГЗ.Ссылка = РеестрУслугУслуги.Ссылка и ДокГЗ.НомерСтроки = 1
				   
				   |     LEFT OUTER JOIN Документ.РеестрУслуг.ПодписиИсполнитель ДокИсп  ON ДокИсп.Ссылка = РеестрУслугУслуги.Ссылка и ДокИсп.НомерСтроки = 1
				   
				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |		ПО ДокИсп.Сотрудник.ФизЛицо = КонтактнаяИнформация.Объект
	               |			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
	               |			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
				   |
	               |ГДЕ
	               |	РеестрУслугУслуги.Ссылка = &СС";
				   Запрос.УстановитьПараметр("сс",СсылкаНаОбъект);
				   Запрос.УстановитьПараметр("НадоГЗ",НадоГЗ);
				   
				   
				   ТБл = Запрос.Выполнить().Выгрузить();
				   Тбл.Колонки.Добавить("СуммаПрописью",Новый ОписаниеТипов("Строка"));
				   
				   Если Тбл.Количество()>0 Тогда
					   
					   Если НадоГЗ=ЛОжь ТОгда
						   С = уатОбщегоНазначенияТиповые.ДанныеФизЛица(Организация,Тбл[0].пГлОпер.ФизЛицо,Дата);
						   ТБл[0].длжОпер = ""+СокрЛП(С.Должность)+Символы.ПС+СокрЛП(Организация);
						   Тбл[0].ГлОпер = уатОбщегоНазначенияТиповые.уатФамилияИнициалыФизЛица(Тбл[0].пГлОпер.ФизЛицо);
						   Тбл[0].Дов =  СокрЛП(Тбл[0].пГлОпер.Доверенность);
					   ИНаче
						   ТБл[0].длжОпер = ""+СокрЛП(ТБл[0].длжОпер)+Символы.ПС+УбратьООО_ЗАО(СокрЛП(ТБл[0].Организация));
						   Тбл[0].ГлОпер = СокрЛП(Тбл[0].пГлОпер);
					   КонецЕСЛИ;
					   
					   //Сделаем красивый переход страницы для названия фирмы
					   пС = Тбл[0].ЗкзТхт;
					   номПС = МАКС(Найти(пС," ООО"),Найти(пС," ЗАО"),Найти(пС," ОАО"));
					   Если номПС<>0 ТОгда
						   Тбл[0].ЗкзТхт = Лев(пС,номПС-1)+Символы.ПС+Сред(пС,номПС);
					   КонецеСЛИ;
					   
					   //Добавим название заказчика в подвал
					   пС = Тбл[0].ЗкзТхт;
					   Если МАКС(Найти(пС," ООО"),Найти(пС," ЗАО"),Найти(пС," ОАО"),Найти(пС,СокрЛП(Тбл[0].Контрагент)))=0 ТОгда
						Тбл[0].ЗкзТхт = пС+Символы.ПС+УбратьООО_ЗАО(СокрЛП(Тбл[0].Заказчик));   
					   КонецеСЛИ;
					   
					   
					   Тбл[0].Дата = Формат(Тбл[0].Дт,"ДФ=dd.MM.yyyy");
					   Тбл[0].Месяц = Формат(Тбл[0].Дт,"ДФ='MMMM yyyy ""г.""'");
					   Тбл[0].МаксДата = Формат(Тбл[0].мкДт,"ДФ=dd.MM.yyyy");
					   Тбл[0].МинДата = Формат(Тбл[0].мнДт,"ДФ=dd.MM.yyyy");
					   Тбл[0].ДатаДоговораФ = Формат(Тбл[0].ДатаДоговора,"ДФ=dd.MM.yyyy");
					   
					   
					   Если СокрлП(Тбл[0].ИмяЗаказчик)="" ТОгда
						   Тбл[0].ИмяЗаказчик = "Заказчик";	
					   КонецеСЛИ;
					   Если СокрлП(Тбл[0].ИмяИсполнитель)="" ТОгда
						   Тбл[0].ИмяИсполнитель = "Исполнитель";	
					   КонецеСЛИ;
					   
					   ПолучитьРуководителяПредприятия(Тбл);
				   КонецеСЛИ;
				   
				   
				   Стк = новый Структура;
				   
				   Для каждого колТбл из Тбл.Колонки Цикл
						Стк.вставить(колТбл.Имя);   
				   КонецЦикла;
				   
				   
				   Если Тбл.Количество()<>0 ТОгда
					   ЗаполнитьЗначенияСвойств(Стк,ТБл[0]);
				   КонецеСЛИ;
				   
				   
				   
				   Возврат Стк;
	
КонецФункции

Процедура ВывестиТекОбл(Таб,ТекОбласть,НадоОчистить=Истина)
	Попытка
		Если Таб.ПроверитьВывод(ТекОБласть)=Ложь Тогда
			Таб.ВывестиГоризонтальныйРазделительСтраниц();
		КонецеСЛИ;
	Исключение 
		ХранилищеСистемныхНастроек.удалить(Таб.ИмяПараметровПечати,,ИмяПользователя());
	КонецПопытки;
	Таб.Вывести(ТекОбласть);
	
	Если НадоОчистить Тогда
		ТекОбласть.Очистить();
	КонецЕСЛИ;
	
КонецПроцедуры

Функция ПЕчатьИзВнешнегоОтчета(ХранилищеОБ)  Экспорт
	
	Результат = Ложь;
	
	ДвоичныеДанные = ХранилищеОб.Получить();
	Если ТипЗнч(ДвоичныеДанные) = Тип("ДвоичныеДанные") Тогда
		
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		ВнешняяОбработка = ВнешниеОбработки.Создать(ИмяФайла);
		УдалитьФайлы(ИмяФайла);
		
		ВнешняяОбработка.ССылкаНаОбъект = ссылка;
		ВнешняяОбработка.ПЕчать();
		
		Результат = Истина;
		
	КонецеСЛИ;
	
	Возврат Результат;
	
КонецФункции

Функция КомпоновкаМакетов(сооКолонок,ТекДог)
	
	Макет = ПолучитьМакет("Основной");
	Таб  = ПолучитьМакет("Основной");
	Таб.УдалитьОбласть(Таб.Область(,1,,Таб.ШиринаТаблицы),ТипСмещенияТабличногоДокумента.ПоВертикали);
	
	Таб.ВставитьОбласть(Макет.Область("й1"),Таб.Область(,1,,Макет.ПолучитьОбласть("й1").ШиринаТаблицы),,Ложь);
	
	
	Если ТекДог.ВывНомерЗаявки ТОгда
		Таб.ВставитьОбласть(Макет.Область("йНомерЗаявки"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("йНомерЗаявки").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Если ТекДог.ВывЛот ТОгда
		Таб.ВставитьОбласть(Макет.Область("йЛот"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("йЛот").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Если ТекДог.ВывПодр ТОгда
		Таб.ВставитьОбласть(Макет.Область("йПодр"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("йПодр").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Если ТекДог.ВывПачка ТОгда
		Таб.ВставитьОбласть(Макет.Область("йПачка"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("йПачка").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Если ТекДог.ВывВид ТОгда
		Таб.ВставитьОбласть(Макет.Область("Вид"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("Вид").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Если ТекДог.ВывТип ТОгда
		Таб.ВставитьОбласть(Макет.Область("йТип"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("йТип").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Если ТекДог.ВывПроизвКод ТОгда
		Таб.ВставитьОбласть(Макет.Область("ПроизвКод"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("ПроизвКод").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Если ТекДог.ВывГрп ТОгда
		Таб.ВставитьОбласть(Макет.Область("Грп"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("Грп").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Если ТекДог.ВывГрпПрц ТОгда
		Таб.ВставитьОбласть(Макет.Область("ГрпПрц"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("ГрпПрц").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Если ТекДог.ВывТонны ТОгда
		Таб.ВставитьОбласть(Макет.Область("ВывТонны"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("ВывТонны").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Если ТекДог.ВывНоменклатура ТОгда
		Таб.ВставитьОбласть(Макет.Область("ДопУслуга"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("ДопУслуга").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Если ТекДог.ВЫвПробег ТОгда
		Таб.ВставитьОбласть(Макет.Область("йПробег"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("йПробег").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Если ТекДог.ВЫвЧас или сооКолонок.Количество()=1 ТОгда
		Таб.ВставитьОбласть(Макет.Область("йЧасы"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("йЧасы").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Если сооКолонок.Количество()=1 ТОгда
		Таб.ВставитьОбласть(Макет.Область("йТариф"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("йТариф").ШиринаТаблицы),,Ложь);
	Иначе
		Для каждого Эл из сооКолонок Цикл
			
			ТабУсл = Макет.ПолучитьОбласть("облУслуга");
			Для аСтр=1 по ТабУсл.ВысотаТаблицы Цикл
				Для аКол=1 по ТабУсл.ШиринаТаблицы Цикл
					пПар = ТабУсл.Область(аСтр,аКол,аСтр,аКол).Параметр;
					Если Найти(",количество,тариф,сумма,",","+НреГ(пПар)+",")<>0 Тогда
						ТабУсл.Область(аСтр,аКол,аСтр,аКол).Параметр = пПар+Эл.Значение;
					ИНачеЕсли Нрег(ТабУсл.Область(аСтр,аКол,аСтр,аКол).Текст) = "усл.имя" ТОгда
						ТабУсл.Область(аСтр,аКол,аСтр,аКол).Текст = СокрЛП(Эл.Ключ);
					ИНачеЕсли Нрег(ТабУсл.Область(аСтр,аКол,аСтр,аКол).Текст) = "едусл" ТОгда
						ТабУсл.Область(аСтр,аКол,аСтр,аКол).Текст = СокрЛП(Эл.Ключ.БазоваяЕдиницаИзмерения.НаименованиеПолное);
					КонецЕСЛИ;
				КонецЦикла;
			КонецЦикла;
			
			Таб.ВставитьОбласть(ТабУсл.Область(,1,,ТабУсл.ШиринаТаблицы),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+ТабУсл.ШиринаТаблицы),,Ложь);
			
		КонецЦикла;
	КонецЕСЛИ;
	
	Таб.ВставитьОбласть(Макет.Область("й2"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("й2").ШиринаТаблицы),,Ложь);
	Если ТекДог.ВЫвЦО ТОгда
		Таб.ВставитьОбласть(Макет.Область("МВЗ"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("МВЗ").ШиринаТаблицы),,Ложь);
	КонецЕСЛИ;
	
	Таб.Область(8,Таб.ШиринаТаблицы,Таб.ВысотаТаблицы,Таб.ШиринаТаблицы).ГраницаСправа = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,2);
	
	Таб.УдалитьОбласть(Таб.Область("Подвал"),ТипСмещенияТабличногоДокумента.ПоВертикали);
	Таб.УдалитьОбласть(Таб.Область("Отв0"),ТипСмещенияТабличногоДокумента.ПоВертикали);
	Таб.ВставитьОбласть(Макет.Область("Подвал"),Таб.Область(Таб.ВысотаТаблицы+1,,Таб.ВысотаТаблицы+Макет.ПолучитьОбласть("Подвал").ВысотаТаблицы),,Ложь);
	Таб.ВставитьОбласть(Макет.Область("Отв0"),Таб.Область(Таб.ВысотаТаблицы+1,,Таб.ВысотаТаблицы+Макет.ПолучитьОбласть("Отв0").ВысотаТаблицы),,Ложь);
	Если СокрЛП(ТекДог.ДопТекстШапка) <> "" Тогда
		
		СтрСФ = НомерСФизбух();
		Если СокрЛП(стрСФ)="" ТОгда
			СтрсФ = "____________ от _____________";   
		КонецЕСЛИ;
		
		ТекОбл = Таб.Область(1,14,1,14);
		ТекОбл.Текст = СокрЛП(ТекДог.ДопТекстШапка)+СтрСФ;
		ТекОбл.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
	КонецЕСЛИ;
	
	//Таб.Показать();
	
	
	
	
	
	Возврат Таб;
	
КонецФункции

Процедура Печать(Элемент = неопределено,Индикатор1=0,НадоГЗ=Ложь) Экспорт
	
	Если ЗначениеЗаполнено(ССылка)=Ложь ТОгда
		
	ИначеЕсли Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПЕчатьИзВнешнегоОтчета(Ссылка.Договор.ХранилищеОб) Тогда Возврат; КонецеСЛИ;
	
	сооКолонок = Новый ТаблицаЗначений;
	СтрСвр="";
	Тбл = Данные(Ссылка,сооКолонок,СтрСвр,НадоГЗ);
	Если Тбл.Количество()=0 Тогда
		ПРедупреждение("Нет данных для вывода на печать!");
		Возврат;
	КонецЕСЛИ;
	
	СсылкаНаОбъект = ссылка;
	
	
	ГрпПап = СсылкаНаОбъект.Договор.ГрпПап;
	ГрпЦех = СсылкаНаОбъект.Договор.ГрпЦех;
	ГрпМод = СсылкаНаОбъект.Договор.ГрпМод;
	ГрпТС  = СсылкаНаОбъект.Договор.ГрпТС;
	ГрпТип = СсылкаНаОбъект.Договор.ГрпТип;
	ГрпМст = СсылкаНаОбъект.Договор.ГрпМст;
	ВыводитьПрочеркВПустыхЯчейках = СсылкаНаОбъект.Договор.ВыводитьПрочеркВПустыхЯчейках;	
	
	хрМакет = СсылкаНаОбъект.Договор.Хранилище.Получить();
	тпМакет = СсылкаНаОбъект.ТИпТС.Хранилище.Получить();
	
	Таб = Новый ТабличныйДокумент;
	Если СсылкаНаОбъект.ТИпТС.ОсновнаяФормаПечатиРеестра ТОгда
		Макет = КомпоновкаМакетов(сооКолонок,СсылкаНаОбъект.Договор);
		
	ИНачеЕсли ТипЗНч(тпМакет) = Тип("ТабличныйДокумент") ТОгда
		Макет = тпМакет;
		
	ИНачеЕсли ТипЗНч(хрМакет) = Тип("ТабличныйДокумент") ТОгда
		Макет = хрМакет;
		
	ИНачеЕсли  СокрЛП(СсылкаНаОбъект.Договор.МакетРеестра)="" или
		СокрЛП(СсылкаНаОбъект.Договор.МакетРеестра)="Основной" ТОгда
		
		Макет = КомпоновкаМакетов(сооКолонок,СсылкаНаОбъект.Договор);
		
	ИНАче
		Макет = ПолучитьМакет(СокрЛП(СсылкаНаОбъект.Договор.МакетРеестра));
	КонецЕСЛИ;
	
	
	СтрШапка =  ДанныеШапка(СсылкаНаОбъект,НадоГЗ);
	СтрШапка.СуммаПрописью = ЧислоПрописью(Тбл.Итог("итСумма"),,Константы.ВалютаРегламентированногоУчета.Получить().ПараметрыПрописиНаРусском);
	
	Если  ЕстьТакойПараметр(Макет,"ДанныеСФ") ТОгда
		СтрШапка.Вставить("ДанныеСФ",НомерСФизбух());
	КонецеСЛИ;
	
	
	//Заполним подвал
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Подвал.Параметры.Заполнить(СтрШапка);
	Если СокрлП(СтрШапка.ЗкзТхт)="" ТОгда
		Попытка
			Подвал.Область("ПодчеркЗаказчик").Очистить(Истина,Истина,Истина);
		Исключение КонецПопытки;
	КонецеСЛИ;    
	
	Если НадоГЗ ТОгда
		ДокТблИсполнитель = ПодписиЗаказчик;
		ДокТблЗаказчик = ПодписиГенЗаказчик;
	ИНАче
		ДокТблИсполнитель = ПодписиИсполнитель;
		ДокТблЗаказчик = ПодписиЗаказчик;
	КонецЕСЛИ;
	
	ДЛя а=1 по Макс(ДокТблЗаказчик.Количество()-1,ДокТблИсполнитель.Количество()-1) Цикл
		
		ОблОтвет = Макет.ПолучитьОбласть("Отв0");
		Если ДокТблИсполнитель.Количество()>а ТОгда
			Если НадоГЗ ТОгда
				облОтвет.Параметры.Заполнить(ДокТблИсполнитель[а]);
			ИНАче
				ОблОтвет.Параметры.Представитель = уатОбщегоНазначенияТиповые.уатФамилияИнициалыФизЛица(ДокТблИсполнитель[а].Сотрудник.ФизЛицо);
			КонецеСЛИ;
		ИНаче
			облОтвет.Область(1,1,2,7).Очистить(Истина,Истина,Истина);
		КонецесЛИ;
		
		Если ДокТблЗаказчик.Количество()>а ТОгда
			облОтвет.Параметры.Заполнить(ДокТблЗаказчик[а]);
		ИНаче
			облОтвет.Область(1,8,2,13).Очистить(Истина,Истина,Истина);
		КонецесЛИ;
		Подвал.Вывести(ОблОтвет);
		
	КонецЦиклА;
	
	
	
	
	Шапка  = Макет.ПолучитьОбласть("Шапка");
	Строка = Макет.ПолучитьОбласть("Строка");
	Итог   = Макет.ПолучитьОбласть("Итог");
	
	тбТС = Тбл.Скопировать();
	
	
	Если ГрпМст ТОгда 
		стрМст  = Макет.ПолучитьОбласть("Мст");
		ИтогМст = Макет.ПолучитьОбласть("итогМст");
	Иначе
		Тбл.ЗаполнитьЗначения(Неопределено,"грпМесторождение");
		тбТС.ЗаполнитьЗначения(Неопределено,"грпМесторождение,Месторождение");
	КонецеСЛИ;
	
	Если ГрпПап ТОгда 
		стрПап  = Макет.ПолучитьОбласть("ЦОпапка"); 
		ИтогПап = Макет.ПолучитьОбласть("итогЦОпапка"); 
	Иначе
		Тбл.ЗаполнитьЗначения(Неопределено,"грпЦехПапка");
		тбТС.ЗаполнитьЗначения(Неопределено,"грпЦехПапка,ЦехПапка")
	КонецеСЛИ;
	
	Если ГрпЦех ТОгда 
		стрЦО  = Макет.ПолучитьОбласть("ЦО"); 
		ИтогЦО = Макет.ПолучитьОбласть("итогЦО"); 
	Иначе
		Тбл.ЗаполнитьЗначения(Неопределено,"грпЦехКонтрагента");
		тбТС.ЗаполнитьЗначения(Неопределено,"грпЦехКонтрагента,ЦехКонтрагента,ЦехКонтрагентаКод")
	КонецеСЛИ;
	
	Если ГрпТип ТОгда 
		стрТип  = Макет.ПолучитьОбласть("Тип");
		ИтогТип = Макет.ПолучитьОбласть("итогТип");
	Иначе
		Тбл.ЗаполнитьЗначения(Неопределено,"грпТипТС");
		тбТС.ЗаполнитьЗначения(Неопределено,"грпТипТС,ТипТС");
	КонецеСЛИ;
	
	Если ГрпМод ТОгда 
		ИтогМод= Макет.ПолучитьОбласть("итогМод"); 
	Иначе
		Тбл.ЗаполнитьЗначения(Неопределено,"ТСМодель");
		тбТС.ЗаполнитьЗначения(Неопределено,"ТСМодель");
	КонецеСЛИ;
	
	Если ГрпТС ТОгда 
		стрТС  = Макет.ПолучитьОбласть("ТС");
		ИтогТС = Макет.ПолучитьОбласть("итогТС");
	Иначе
		Тбл.ЗаполнитьЗначения(Неопределено,"грпТС");
		тбТС.ЗаполнитьЗначения(Неопределено,"грпТС,ГосНомер,ГарНомер,ТС");
	КонецеСЛИ;
	
	Если  СсылкаНаОбъект.Договор.ВывПачка=Ложь ТОгда
		Тбл.ЗаполнитьЗначения(Неопределено,"НомерПачки");
		тбТС.ЗаполнитьЗначения(Неопределено,"НомерПачки");
	КонецЕСЛИ;
	
	Тбл.Сортировать("грпМесторождение,грпЦехПапка,грпЦехКонтрагента,грпЦехКонтрагента,грпТипТС,НомерПачки,дтВзд,НомерПЛ,ТСМодель,грпТС,ТС");
	тбТС.Сортировать("Месторождение,грпМесторождение,ЦехПапка,грпЦехПапка,грпЦехКонтрагента,грпЦехКонтрагента,грпТипТС,ТСМодель,грпТС,ТС");
	
	
	Шапка.Параметры.Заполнить(СтрШапка);
	Таб.Вывести(Шапка);
	Таб.ПовторятьПриПечатиСтроки = таб.Область(8,,9,);
	итКолПЛ=0;
	
	
	Таб.ИмяПараметровПечати = "ДекРеестрПеч_"+СокрЛП(СсылкаНаОбъект.Договор.МакетРеестра);
	
	ТекОбласть = Новый ТабличныйДокумент;
	
	тбТС.Свернуть("Месторождение,грпМесторождение,ЦехПапка,грпЦехПапка,ЦехКонтрагента,грпЦехКонтрагента,ЦехКонтрагентаКод,грпТипТС,ТипТС,ТСМодель,грпТС,ТС,ГарНомер,ГосНомер",СтрСвр);
	тбМод = тбТС.Скопировать();
	тбМод.Свернуть("Месторождение,грпМесторождение,ЦехПапка,грпЦехПапка,ЦехКонтрагента,грпЦехКонтрагента,ЦехКонтрагентаКод,грпТипТС,ТипТС,ТСМодель",СтрСвр);
	тбТип = тбМод.Скопировать();
	тбТип.Свернуть("Месторождение,грпМесторождение,ЦехПапка,грпЦехПапка,ЦехКонтрагента,грпЦехКонтрагента,ЦехКонтрагентаКод,грпТипТС,ТипТС",СтрСвр);
	тбЦО = тбТип.Скопировать();
	тбЦО.Свернуть("Месторождение,грпМесторождение,ЦехПапка,грпЦехПапка,ЦехКонтрагента,грпЦехКонтрагента,ЦехКонтрагентаКод",СтрСвр);
	тбПап = тбЦО.Скопировать();
	тбПап.Свернуть("Месторождение,грпМесторождение,ЦехПапка,грпЦехПапка",СтрСвр);
	тбМст = тбЦО.Скопировать();
	тбМст.Свернуть("Месторождение,грпМесторождение",СтрСвр);
	
	
	Ном=0;
	Для каждого стМст из тбМст Цикл
		
		Если ГрпМст Тогда
			СтрМст.Параметры.Заполнить(стМст);
			ТекОбласть.Вывести(СтрМст);
		КонецЕСЛИ;
		
		масПап = тбПап.НайтиСтроки(Новый Структура("грпМесторождение",стМст.грпМесторождение));
		Для каждого стПап из МасПап Цикл 
			
			Если ГрпПап Тогда
				СтрПап.Параметры.Заполнить(стПап);
				ТекОбласть.Вывести(СтрПап);
			КонецЕСЛИ;
			
			масЦО = тбЦО.НайтиСтроки(Новый Структура("грпМесторождение,грпЦехПапка",стМст.грпМесторождение,стПап.грпЦехПапка));
			Для каждого стЦО из МасЦО Цикл 
				
				Если ГрпЦех Тогда
					СтрЦо.Параметры.Заполнить(стЦО);
					ТекОбласть.Вывести(СтрЦО);
				КонецЕСЛИ;
				
				масТип = тбТип.НайтиСтроки(Новый Структура("грпМесторождение,грпЦехПапка,грпЦехКонтрагента",стЦО.грпМесторождение,стПап.грпЦехПапка,стЦО.грпЦехКонтрагента));
				Для каждого стТип из МасТип Цикл 
					
					Если ГрпТип Тогда
						СтрТип.Параметры.Заполнить(стТип);
						ТекОбласть.Вывести(СтрТип);
					КонецЕСЛИ;
					
					
					масМод = тбМод.НайтиСтроки(Новый Структура("грпМесторождение,грпЦехПапка,грпЦехКонтрагента,грпТипТС",стЦО.грпМесторождение,стПап.грпЦехПапка,стЦО.грпЦехКонтрагента,стТип.грпТипТС));
					Для каждого стМод из МасМод Цикл 
						
						//Если ГрпМод Тогда
						//	СтрМод.Параметры.Заполнить(стМод);
						//	ТекОбласть.Вывести(СтрМод);
						//КонецЕСЛИ;
						
						масТС = тбТС.НайтиСтроки(Новый Структура("грпМесторождение,грпЦехПапка,грпЦехКонтрагента,грпТипТС,ТСМодель",стЦО.грпМесторождение,стПап.грпЦехПапка,стЦО.грпЦехКонтрагента,стТип.грпТипТС,стМод.ТСМодель));
						Для каждого стТС из МасТС Цикл 
							
							Если ГрпТС Тогда
								СтрТС.Параметры.Заполнить(стТС);
								ТекОбласть.Вывести(СтрТС);
							КонецЕСЛИ;
							
							мас = Тбл.НайтиСтроки(Новый Структура("грпМесторождение,грпЦехПапка,грпЦехКонтрагента,грпТипТС,ТСМодель,грпТС",стЦО.грпМесторождение,стПап.грпЦехПапка,стЦО.грпЦехКонтрагента,стТип.грпТипТС,стМод.ТСМодель,стТС.грпТС));
							Для каждого Стр из Мас Цикл 
								
								НОм=Ном+1;
								Индикатор1 = ном/Тбл.Количество()*100;
								Строка.Параметры.Заполнить(Стр);
								Если ВыводитьПрочеркВПустыхЯчейках ТОгда
									Для аПар=1 по Строка.Параметры.Количество() Цикл
										Если ЗначениеЗаполнено(Строка.Параметры.Получить(аПар-1))=ЛОжь ТОгда
											Строка.Параметры.Установить(аПар-1,"---");
										КонецЕсли;
									КонецЦикла;
								КонецЕСЛИ;
								
								Попытка
									Строка.Параметры.Ном = Ном;
								Исключение КонецПопытки;
								Попытка
									Строка.Параметры.НомТС = Мас.Найти(Стр)+1;
								Исключение КонецПопытки;
								
								//+Lexx по заявке 6658 от 22.06.2021
								ПериодРаботы = "";
								Если Месяц(Стр.ДатаВыезда) = Месяц(Стр.ДатаВозвращения) Тогда
									ПериодРаботы = Прав("0" + Строка(День(Стр.ДатаВыезда)),2) + "-" + Строка(Формат(Стр.ДатаВозвращения,"ДФ=dd.MM.yyyy"));
								Иначе
									ПериодРаботы = Строка(Формат(Стр.ДатаВыезда,"ДФ=dd.MM.yyyy")) + "-" + Строка(Формат(Стр.ДатаВозвращения,"ДФ=dd.MM.yyyy"));
								КонецЕсли;	
								Попытка
									Строка.Параметры.ПериодРаботы = ПериодРаботы;
								Исключение КонецПопытки;
								//-Lexx по заявке 6658 от 22.06.2021
								
								Если Мас.Найти(Стр)=0 Тогда
									ТекОбласть.Вывести(Строка);
									ВывестиТекОбл(Таб,ТекОбласть);
								ИНачеЕсли Мас.Найти(Стр)=Мас.ВГраница() ТОгда
									ТекОбласть.Очистить();
									ТекОбласть.Вывести(Строка);
								ИНаче
									ВывестиТекОбл(Таб,Строка,Ложь);
								КонецЕСЛИ;	
								
							КонецЦикла;
							
							Если ГрпТС Тогда
								итогТС.Параметры.Заполнить(стТС);
								ТекОбласть.Вывести(итогТС);
								
								Если масТС.Найти(стТС)<>масТс.ВГраница() Тогда
									ВывестиТекОбл(Таб,ТекОбласть);
								КонецЕСЛИ;
								
							КонецЕСЛИ;
							
						КонецЦикла;
						
						Если ГрпМод Тогда
							итогМод.Параметры.Заполнить(стМод);
							ТекОбласть.Вывести(итогМод);
							
							Если МасМод.Найти(стМод) <> масМод.ВГраница() Тогда
								ВывестиТекОбл(Таб,ТекОбласть);	
							КонецЕСЛИ;
						КонецЕСЛИ;
					КонецЦикла;
					
					Если ГрпТип Тогда
						итогТип.Параметры.Заполнить(стТип);
						ТекОбласть.Вывести(итогТип);
						
						Если МасТип.Найти(стТип) <> масТип.ВГраница() Тогда
							ВывестиТекОбл(Таб,ТекОбласть);	
						КонецЕСЛИ;
					КонецЕСЛИ;
				КонецЦикла;
				
				Если ГрпЦех Тогда
					итогЦО.Параметры.Заполнить(стЦО);
					ТекОбласть.Вывести(итогЦО);
					
					Если МасЦО.Найти(стЦО) <> масЦО.ВГраница() Тогда
						ВывестиТекОбл(Таб,ТекОбласть);	
					КонецЕСЛИ;
				КонецЕСЛИ;
			КонецЦикла;
			
			Если ГрпПап Тогда
				итогПап.Параметры.Заполнить(стПап);
				ТекОбласть.Вывести(итогПап);
				
				Если МасПап.Найти(стПап) <> масПап.ВГраница() Тогда
					ВывестиТекОбл(Таб,ТекОбласть);	
				КонецЕСЛИ;
			КонецЕСЛИ;
		КонецЦикла;
		
		Если ГрпМст Тогда
			итогМст.Параметры.Заполнить(стМст);
			ТекОбласть.Вывести(итогМст);
			
			Если тбМст.индекс(стМст) <> тбМст.Количество()-1 Тогда
				ВывестиТекОбл(Таб,ТекОбласть);	
			КонецЕСЛИ;
		КонецЕСЛИ;
	КонецЦикла;
	
	
	
	
	тбМст.свернуть("",СтрСвр);
	Итог.Параметры.Заполнить(тбМст[0]);	
	Подвал.Параметры.Заполнить(тбМст[0]);	
	ТекОбласть.Вывести(Итог);
	ТекОбласть.Вывести(Подвал);
	ВывестиТекОбл(Таб,ТекОбласть);
	
	
	
	Таб.ТолькоПросмотр = Истина;
	Таб.ОтображатьСетку = Ложь;
	Таб.ОтображатьЗаголовки = Ложь;
	Таб.Показать();
	
КонецПроцедуры

Функция КомпоновкаМакетовСправка(сооКолонок)
	
	Макет = ПолучитьМакет("Справка");
	Таб  = ПолучитьМакет("Справка");
	Таб.УдалитьОбласть(Таб.Область(,1,,Таб.ШиринаТаблицы),ТипСмещенияТабличногоДокумента.ПоВертикали);
	
	//Таб.ВставитьОбласть(Макет.Область("Заголовок"),Таб.Область(Таб.ВысотаТаблицы+1,,Таб.ВысотаТаблицы+Макет.ПолучитьОбласть("Заголовок").ВысотаТаблицы),,Ложь);
	
	
	Если Договор.ГрпМстСправка ТОгда
		Таб.ВставитьОбласть(Макет.Область("й1"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("й1").ШиринаТаблицы),,Ложь);
		Таб.Область(7,Таб.ШиринаТаблицы-2,7,Таб.ШиринаТаблицы-2).Текст = "Месторождение";
		Таб.Область(8,Таб.ШиринаТаблицы-2,8,Таб.ШиринаТаблицы-2).Параметр = "Месторождение";
	КонецеСЛИ;
	
	Если Договор.ГрпЦехСправка ТОгда
		Таб.ВставитьОбласть(Макет.Область("й1"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("й1").ШиринаТаблицы),,Ложь);
		Таб.Область(7,Таб.ШиринаТаблицы-2,7,Таб.ШиринаТаблицы-2).Текст = "Цех";
		//Таб.Область(8,Таб.ШиринаТаблицы-2,8,Таб.ШиринаТаблицы-2).Параметр = "ЦехКонтрагента";
		
		Таб.Область(8,Таб.ШиринаТаблицы-2,8,Таб.ШиринаТаблицы).Разъединить();
		Таб.Область(8,Таб.ШиринаТаблицы-2,8,Таб.ШиринаТаблицы-2).Параметр = "ЦехКонтрагента";
		Таб.Область(8,Таб.ШиринаТаблицы-2,8,Таб.ШиринаТаблицы-1  ).Объединить();
		Таб.Область(8,Таб.ШиринаТаблицы  ,8,Таб.ШиринаТаблицы).Параметр = "ЦехКонтрагентаКод";
		Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
		
	КонецеСЛИ;
	
	Если Договор.ГрпТипСправка ТОгда
		Таб.ВставитьОбласть(Макет.Область("й1"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("й1").ШиринаТаблицы),,Ложь);
		Таб.Область(7,Таб.ШиринаТаблицы-2,7,Таб.ШиринаТаблицы-2).Текст = "Тип ТС";
		Таб.Область(8,Таб.ШиринаТаблицы-2,8,Таб.ШиринаТаблицы-2).Параметр = "ТипТС";
	КонецеСЛИ;
	
	//1 колонка
	Если Договор.ГрпМВЗСправка ТОгда
		Таб.ВставитьОбласть(Макет.Область("й3"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("й3").ШиринаТаблицы),,Ложь);
		Таб.Область(7,Таб.ШиринаТаблицы,7,Таб.ШиринаТаблицы).Текст = "МВЗ";
		Таб.Область(8,Таб.ШиринаТаблицы,8,Таб.ШиринаТаблицы).Параметр = "МВЗ";
	КонецеСЛИ;
	
	Если Договор.ГрпМодСправка ТОгда
		Таб.ВставитьОбласть(Макет.Область("й1"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("й1").ШиринаТаблицы),,Ложь);
		Таб.Область(7,Таб.ШиринаТаблицы-2,7,Таб.ШиринаТаблицы-2).Текст = "Модель ТС";
		Таб.Область(8,Таб.ШиринаТаблицы-2,8,Таб.ШиринаТаблицы-2).Параметр = "ТСМодель";
	КонецеСЛИ;
	
	Если Договор.ГрпТССправка ТОгда
		Таб.ВставитьОбласть(Макет.Область("й1"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("й1").ШиринаТаблицы),,Ложь);
		Таб.Область(7,Таб.ШиринаТаблицы-2,7,Таб.ШиринаТаблицы-2).Текст    = "Автомобиль";
		Таб.Область(8,Таб.ШиринаТаблицы-2,8,Таб.ШиринаТаблицы).Разъединить();
		Таб.Область(8,Таб.ШиринаТаблицы-2,8,Таб.ШиринаТаблицы-2).Параметр = "ГосНомер";
		Таб.Область(8,Таб.ШиринаТаблицы-1,8,Таб.ШиринаТаблицы-1).Параметр = "ТС";
		Таб.Область(8,Таб.ШиринаТаблицы  ,8,Таб.ШиринаТаблицы  ).Параметр = "ГарНомер";
		Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
		Таб.Область(8,Таб.ШиринаТаблицы-1,8,Таб.ШиринаТаблицы-1).Обвести(Линия,Линия,Линия,Линия);
	КонецеСЛИ;
	
	
	//Итоги
	Таб.ВставитьОбласть(Макет.Область("й2"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("й2").ШиринаТаблицы),,Ложь);
	
	
	//-----------
	сооКолонок.Сортировать("Значение");

	Если сооКолонок.Количество()=1 ТОгда
		//Таб.ВставитьОбласть(Макет.Область("йТариф"),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+Макет.ПолучитьОбласть("йТариф").ШиринаТаблицы),,Ложь);
	Иначе
		Для каждого Эл из сооКолонок Цикл
			
			ТабУсл = Макет.ПолучитьОбласть("облУслуга");
			Для аСтр=1 по ТабУсл.ВысотаТаблицы Цикл
				Для аКол=1 по ТабУсл.ШиринаТаблицы Цикл
					пПар = ТабУсл.Область(аСтр,аКол,аСтр,аКол).Параметр;
					Если Найти(",количество,тариф,сумма,",","+НреГ(пПар)+",")<>0 Тогда
						ТабУсл.Область(аСтр,аКол,аСтр,аКол).Параметр = пПар+Эл.Значение;
					ИНачеЕсли Нрег(ТабУсл.Область(аСтр,аКол,аСтр,аКол).Текст) = "усл.имя" ТОгда
						ТабУсл.Область(аСтр,аКол,аСтр,аКол).Текст = СокрЛП(Эл.Ключ);
					ИНачеЕсли Нрег(ТабУсл.Область(аСтр,аКол,аСтр,аКол).Текст) = "едусл" ТОгда
						ТабУсл.Область(аСтр,аКол,аСтр,аКол).Текст = СокрЛП(Эл.Ключ.БазоваяЕдиницаИзмерения.НаименованиеПолное);
					КонецЕСЛИ;
				КонецЦикла;
			КонецЦикла;
			
			Таб.ВставитьОбласть(ТабУсл.Область(,1,,ТабУсл.ШиринаТаблицы),Таб.Область(,Таб.ШиринаТаблицы+1,,Таб.ШиринаТаблицы+ТабУсл.ШиринаТаблицы),,Ложь);
			
		КонецЦикла;
	КонецЕСЛИ;
	
	//-----------
	
	//Заголовок
	Таб.Область(1,1,Макет.ПолучитьОбласть("Заголовок").ВысотаТаблицы,Таб.ШиринаТаблицы).Очистить(Истина,Истина,Истина);    //очистим 
	Таб.ВставитьОбласть(Макет.Область("Заголовок"),Таб.Область(1,,Макет.ПолучитьОбласть("Заголовок").ВысотаТаблицы),,Ложь);
	Таб.Область(Таб.ВысотаТаблицы,1,Таб.ВысотаТаблицы,1).Текст = "Итого :";
	
	
	//Таб.Показать();
	
	
	
	Возврат Таб;
	
КонецФункции

Процедура ПЕчатьСправка(Элемент = неопределено) Экспорт
	
	Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПЕчатьИзВнешнегоОтчета(Договор.ХранилищеСправка) Тогда Возврат; КонецеСЛИ;
	
	
	сооКолонок = Новый ТаблицаЗначений;
	СтрСвр="";
	Тбл = Данные(Ссылка,сооКолонок,СтрСВр);
	Если Тбл.Количество()=0 Тогда
		ПРедупреждение("Нет данных для вывода на печать!");
		Возврат;
	КонецЕСЛИ;
	
	пСтр = "Ссылка";
	Если Договор.ГрпМстСправка ТОгда
		пСтр = пСтр+",Месторождение";
	КонеЦЕСЛИ;
	Если Договор.ГрпЦехСправка ТОгда
		пСтр = пСтр+",ЦехКонтрагента,ЦехКонтрагентаКод";
	КонеЦЕСЛИ;
	Если Договор.ГрпМВЗСправка ТОгда
		пСтр = пСтр+",МВЗ";
	КонеЦЕСЛИ;
	Если Договор.ГрпТипСправка ТОгда
		пСтр = пСтр+",ТипТС";
	КонеЦЕСЛИ;
	Если Договор.ГрпМодСправка ТОгда
		пСтр = пСтр+",ТСМодель";
	КонеЦЕСЛИ;
	Если Договор.ГрпТССправка ТОгда
		пСтр = пСтр+",ТС,ГарНомер,ГосНомер";
	КонеЦЕСЛИ;
	Тбл.Свернуть(пСтр,СтрСвр);
	Тбл.Сортировать(пСтр);
	
	
	хрМакет = Договор.ХранилищеСправка.Получить();
	
	Таб = Новый ТабличныйДокумент;
	Если ТипЗНч(хрМакет) = Тип("ТабличныйДокумент") ТОгда
		Макет = хрМакет;
	ИНачеЕсли  СокрЛП(Договор.МакетСправки)="" или
		       СокрЛП(Договор.МакетСправки)="Основной" или 
		       СокрЛП(Договор.МакетСправки)="Справка" ТОгда
		Макет = КомпоновкаМакетовСправка(сооКолонок);
	ИНАче
		Макет = ПолучитьМакет(СокрЛП(Договор.МакетСправки));
	КонецЕСЛИ;
	
	
	облЗаголовок  = Макет.ПолучитьОбласть("Заголовок");
	Шапка  = Макет.ПолучитьОбласть("Шапка");
	стрЦО  = Макет.ПолучитьОбласть("Строка");
	Итог = Макет.ПолучитьОбласть("Итог");
	
	
	СтрШапка =  ДанныеШапка(Ссылка);
	облЗаголовок.Параметры.Заполнить(СтрШапка);
	Таб.Вывести(облЗаголовок);
	Таб.Вывести(Шапка);
	
	
	
	Для каждого стр из Тбл Цикл
		СтрЦо.Параметры.Заполнить(Стр);
		Таб.Вывести(СтрЦО);
	КонецЦикла;
	Тбл.свернуть("",СтрСвр);
	Итог.Параметры.Заполнить(ТБл[0]);	
	Итог.Параметры.Заполнить(СтрШапка);
	Таб.Вывести(Итог);
	
	Таб.ИмяПараметровПечати = "ДекРеестрПеч_Справка";
	Таб.ТолькоПросмотр = Истина;
	Таб.ОтображатьСетку = Ложь;
	Таб.ОтображатьЗаголовки = Ложь;
	Таб.Показать();
	
//	
КонецПроцедуры

Процедура ПЕчатьСАП(Элемент = неопределено) Экспорт
	
	Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Таб = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("SAP");
	
	Шапка  = Макет.ПолучитьОбласть("Шапка");
	стрЦО  = Макет.ПолучитьОбласть("Строка");
	
	
	Запрос = новый запрос;
	
	НадоГЗ = ЗначениеЗаполнено(ДоговорГЗ);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеестрУслугУслуги.ЦехКонтрагента.КодПоиска КАК Код,
	               |	РеестрУслугУслуги.ПутевойЛист.ДатаВыезда КАК Дт,
	               |	РеестрУслугУслуги.Количество КАК Кол,
	               |	ВЫБОР
	               |		КОГДА &НадоГЗ
	               |			ТОГДА РеестрУслугУслуги.СуммаГЗ / РеестрУслугУслуги.Количество
	               |		ИНАЧЕ РеестрУслугУслуги.Тариф
	               |	КОНЕЦ КАК Трф,
	               |	ЗНАЧЕНИЕ(Справочник.Номенклатура.Автоуслуги) КАК Ном
	               |ИЗ
	               |	Документ.РеестрУслуг.Услуги КАК РеестрУслугУслуги
	               |ГДЕ
	               |	РеестрУслугУслуги.Ссылка = &СС
	               |	И ВЫБОР
	               |			КОГДА &НадоГЗ
	               |				ТОГДА РеестрУслугУслуги.Количество <> 0
	               |			ИНАЧЕ РеестрУслугУслуги.Тариф <> 0
	               |		КОНЕЦ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РеестрУслугУслуги.ЦехКонтрагента.КодПоиска,
	               |	РеестрУслугУслуги.ПутевойЛист.ДатаВыезда,
	               |	РеестрУслугУслуги.КоличествоКм,
	               |	ВЫБОР
	               |		КОГДА &НадоГЗ
	               |			ТОГДА РеестрУслугУслуги.СуммаКмГЗ / РеестрУслугУслуги.КоличествоКм
	               |		ИНАЧЕ РеестрУслугУслуги.ТарифКм
	               |	КОНЕЦ,
	               |	ЗНАЧЕНИЕ(Справочник.Номенклатура.Пробег)
	               |ИЗ
	               |	Документ.РеестрУслуг.Услуги КАК РеестрУслугУслуги
	               |ГДЕ
	               |	РеестрУслугУслуги.Ссылка = &СС
	               |	И ВЫБОР
	               |			КОГДА &НадоГЗ
	               |				ТОГДА РеестрУслугУслуги.КоличествоКм <> 0
	               |			ИНАЧЕ РеестрУслугУслуги.ТарифКм <> 0
	               |		КОНЕЦ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РеестрУслугУслуги.ЦехКонтрагента.КодПоиска,
	               |	РеестрУслугУслуги.ПутевойЛист.ДатаВыезда,
	               |	РеестрУслугУслуги.Количество1,
	               |	ВЫБОР
	               |		КОГДА &НадоГЗ
	               |			ТОГДА РеестрУслугУслуги.СуммаГЗ / РеестрУслугУслуги.Количество1
	               |		ИНАЧЕ РеестрУслугУслуги.Тариф1
	               |	КОНЕЦ,
	               |	РеестрУслугУслуги.Номенклатура1
	               |ИЗ
	               |	Документ.РеестрУслуг.Услуги КАК РеестрУслугУслуги
	               |ГДЕ
	               |	РеестрУслугУслуги.Ссылка = &СС
	               |	И ВЫБОР
	               |			КОГДА &НадоГЗ
	               |				ТОГДА РеестрУслугУслуги.Количество1 <> 0
	               |			ИНАЧЕ РеестрУслугУслуги.Тариф1 <> 0
	               |		КОНЕЦ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РеестрУслугУслуги.ЦехКонтрагента.КодПоиска,
	               |	РеестрУслугУслуги.ПутевойЛист.ДатаВыезда,
	               |	РеестрУслугУслуги.Количество2,
	               |	ВЫБОР
	               |		КОГДА &НадоГЗ
	               |			ТОГДА 0
	               |		ИНАЧЕ РеестрУслугУслуги.Тариф2
	               |	КОНЕЦ,
	               |	РеестрУслугУслуги.Номенклатура2
	               |ИЗ
	               |	Документ.РеестрУслуг.Услуги КАК РеестрУслугУслуги
	               |ГДЕ
	               |	РеестрУслугУслуги.Ссылка = &СС
	               |	И ВЫБОР
	               |			КОГДА &НадоГЗ
	               |				ТОГДА РеестрУслугУслуги.Количество2 <> 0
	               |			ИНАЧЕ РеестрУслугУслуги.Тариф2 <> 0
	               |		КОНЕЦ";
	
	Запрос.УстановитьПараметр("СС",ССылка);
	Запрос.УстановитьПараметр("НадоГЗ",НадоГЗ);
	
	Тбл = Запрос.Выполнить().Выгрузить();
	Если Тбл.Количество()=0 Тогда
		ПРедупреждение("Нет данных для вывода на печать!");
		Возврат;
	КонецЕСЛИ;
	
	Тбл.Сортировать("Дт");
	НачПер = Тбл[0].Дт;
	КонПер = Тбл[Тбл.Количество()-1].Дт;
	ДатаДок  = Формат(Дата ,"ДФ=dd.MM.yyyy");
	НомерДок = Формат(Номер,"ДФ=dd.MM.yyyy");
	Тбл.Свернуть("Код,Ном,Трф","Кол");
	Тбл.Сортировать("Код,Ном,Трф");
	
	СтрШапка =  ДанныеШапка(Ссылка);
	Шапка.Параметры.Заполнить(СтрШапка);
	Таб.Вывести(Шапка);
	
	итСум = 0;
	Для каждого стр из Тбл Цикл
			СтрЦО.Параметры.ДатаДок  = ДатаДок;
			СтрЦО.Параметры.НомерДок = Номер;
			СтрЦО.Параметры.НачПер = НачПер;
			СтрЦО.Параметры.КонПер = КонПер;
			СтрЦо.Параметры.НомУсл = Стр.Ном.Артикул;
			СтрЦо.Параметры.Ед     = Стр.Ном.БазоваяЕдиницаИзмерения;
			СтрЦО.Параметры.Код    = стр.Код;
			СтрЦО.Параметры.Кол    = стр.Кол;
			СтрЦО.Параметры.Тариф  = Стр.Трф;
			Таб.Вывести(СтрЦО);
			итСум = итСум + ОКР(стр.Кол * Стр.Трф,2,1);
	КонецЦикла;
	
	Таб.ИмяПараметровПечати = "ДекРеестрПеч_СправкаСАП";
	Таб.ТолькоПросмотр = Истина;
	Таб.ОтображатьСетку = Ложь;
	Таб.ОтображатьЗаголовки = Ложь;
	Таб.Показать();
	
	Если итСум <> Услуги.Итог("Сумма")+Услуги.Итог("СуммаКм")+Услуги.Итог("Сумма1")+Услуги.Итог("Сумма2") ТОгда
		Сообщить("Сумма по справке "+итСум+" не совпадает с суммой по документу "+(Услуги.Итог("Сумма")+Услуги.Итог("СуммаКм")+Услуги.Итог("Сумма1")+Услуги.Итог("Сумма2")));
	КонецЕСЛИ;
	
	
КонецПроцедуры

Процедура ПечатьПроверка(Элемент = неопределено) Экспорт
	
	//Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
	//	Возврат;
	//КонецЕсли;
	
	СсылкаНаОбъект = ссылка;
	Таб = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Проверка");
	
	Шапка  = Макет.ПолучитьОбласть("Шапка");
	стрТрф  = Макет.ПолучитьОбласть("ЦО1");
	стрТип  = Макет.ПолучитьОбласть("ЦО");
	ИтогЦО = Макет.ПолучитьОбласть("итогЦО");
	Строка = Макет.ПолучитьОбласть("Строка");
	Итог   = Макет.ПолучитьОбласть("Итог");
	
	Выборка = ДанныеПроверка(СсылкаНаОбъект);
	Если Выборка.Количество()=0 Тогда
		ПРедупреждение("Нет данных для вывода на печать!");
		Возврат;
	КонецЕСЛИ;
	
	СтрШапка =  ДанныеШапка(СсылкаНаОбъект);
	Шапка.Параметры.Заполнить(СтрШапка);
	Таб.Вывести(Шапка);
	итКолПЛ=0;
	
	Пока Выборка.Следующий() Цикл
		
		
		ВыбТрф = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыбТрф.Следующий() Цикл
			СтрТрф.Параметры.Заполнить(ВыбТрф);
			Таб.Вывести(СтрТрф);
			
			ВыбТип = ВыбТрф.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыбТип.Следующий() Цикл
				СтрТип.Параметры.Заполнить(ВыбТип);
				Таб.Вывести(СтрТип);
				
				КолПЛ = 0;
				Выб = ВыбТип.Выбрать();
				Пока Выб.Следующий() Цикл
					КолПл=КолПЛ+1;
					итКолПЛ = итКолПЛ + 1;
					Строка.Параметры.Заполнить(Выб);
					Строка.Параметры.итКол = итКолПЛ;
					Таб.Вывести(Строка);
				КонецЦикла;
				
			КонецЦикла;
				
			итогЦо.Параметры.Заполнить(ВыбТрф);
			итогЦо.Параметры.КолПл = КолПЛ;
			Таб.Вывести(итогЦо);
				
		КонецЦикла;
		
		Итог.Параметры.Заполнить(Выборка);	
		итог.Параметры.КолПл = итКолПЛ;
		Таб.Вывести(Итог);
	КонецЦикла;
	
	Таб.ИмяПараметровПечати = "ДекРеестрПеч_Проверка";
	Таб.ТолькоПросмотр = Истина;
	Таб.ОтображатьСетку = Ложь;
	Таб.ОтображатьЗаголовки = Ложь;
	Таб.Показать();
	
КонецПроцедуры

Процедура ДвиженияРаботаТС()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Значение(ВидДвиженияНакопления.Расход) ВидДвижения,
	               |	РеестрУслугУслуги.Ссылка.Дата Период,
	               |	РеестрУслугУслуги.Ссылка Реестр,
	               |	РеестрУслугУслуги.Ссылка.Контрагент Контрагент,
	               |	РеестрУслугУслуги.ЦехКонтрагента,
	               |	РеестрУслугУслуги.ПутевойЛист,
	               |	1 Талон,
	               |	РеестрУслугУслуги.Сумма,
	               |	РеестрУслугУслуги.Сумма1,
	               |	РеестрУслугУслуги.Сумма2,
	               |	РеестрУслугУслуги.Сумма3,
	               |	РеестрУслугУслуги.Сумма4,
	               |	РеестрУслугУслуги.ТС,
				   //|	РеестрУслугУслуги.ТС.ПривлеченноеТС ПривлеченноеТС,
	               |	РеестрУслугУслуги.Пробег,
	               |	РеестрУслугУслуги.ИдСтроки
	               |ИЗ
	               |	Документ.РеестрУслуг.Услуги КАК РеестрУслугУслуги
	               |ГДЕ
	               |	РеестрУслугУслуги.Ссылка = &Ссылка";
				   Запрос.УстановитьПараметр("Ссылка",ССылка);
				   Тбл =Запрос.Выполнить().Выгрузить();
				   
	   Движения.РаботаТС.Записывать = Истина;
	   Движения.РаботаТС.Загрузить(Тбл);	
	   
	   Если уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Организация, ПланыВидовХарактеристик.уатПраваИНастройки.РассчитыватьСубподрядВДекРеестре)=Ложь 
		   и БезДвиженийПоСубподряду = Ложь Тогда
		   Движения.РаботаТССубподряд.Записывать = Истина;
		   //Т = Тбл.Скопировать(Новый Структура("ПривлеченноеТС",Истина));
		   Т = Тбл.Скопировать();
		   Т.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход,"ВидДвижения");
		   Движения.РаботаТССубподряд.Загрузить(Т);	
	   КонецЕСЛИ;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ДвиженияРаботаТС();
	

	// регистр РеестрыУслуг Приход
	Если Константы.ксНашаОрганизация.Получить() = Контрагент  ТОгда
		ЭтоНашаОрганизация = Истина;
	ИНаче
		ЭтоНашаОрганизация = Ложь;
	КОнецеслИ;
	
	ДвжПоСубподряду = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Организация, ПланыВидовХарактеристик.уатПраваИНастройки.РассчитыватьСубподрядВДекРеестре);
	
	Движения.РеестрыУслуг.Записывать = Истина;
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		Движение = Движения.РеестрыУслуг.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Если ЗначениеЗаполнено(ТекСтрокаУслуги.Договор) Тогда
			Движение.Договор = ТекСтрокаУслуги.Договор;
		ИНАче
			Движение.Договор = Договор;
		КонецеслИ;
		Движение.ЦехКонтрагента = ТекСтрокаУслуги.ЦехКонтрагента;
		Движение.ТС = ТекСтрокаУслуги.ТС;
		Движение.ПутевойЛист = ТекСтрокаУслуги.ПутевойЛист;
		Движение.Номенклатура = ТекСтрокаУслуги.Номенклатура;
		Движение.Количество = ТекСтрокаУслуги.Количество;
		Движение.Сумма = ТекСтрокаУслуги.Сумма;
		Движение.КоличествоКм = ТекСтрокаУслуги.КоличествоКм;
		Движение.СуммаКм = ТекСтрокаУслуги.СуммаКм;
		Движение.Количество1 = ТекСтрокаУслуги.Количество1;
		Движение.Сумма1 = ТекСтрокаУслуги.Сумма1;
		Движение.Количество2 = ТекСтрокаУслуги.Количество2;
		Движение.Сумма2 = ТекСтрокаУслуги.Сумма2;
		Движение.Количество3 = ТекСтрокаУслуги.Количество3;
		Движение.Сумма3 = ТекСтрокаУслуги.Сумма3;
		Движение.Количество4 = ТекСтрокаУслуги.Количество4;
		Движение.Сумма4 = ТекСтрокаУслуги.Сумма4;
		Движение.Сумма5 = ТекСтрокаУслуги.Сумма5;
		Движение.Сумма6 = ТекСтрокаУслуги.Сумма6;
		
		Если ЭтоНашаОрганизация и ТекСтрокаУслуги.ЦехКонтрагента.БригадныйПодряд=ложь  Тогда
			Движение.Сумма = 0;	
			Движение.СуммаКм = 0;	
			Движение.Сумма1 = 0;	
			Движение.Сумма2 = 0;	
			Движение.Сумма3 = 0;	
			Движение.Сумма4 = 0;	
			Движение.Сумма5 = 0;	
			Движение.Сумма6 = 0;	
		КонецЕСЛИ;
		
		Если  ТекСтрокаУслуги.Количество  <>0 ТОгда Движение.Тариф   = ТекСтрокаУслуги.Сумма  /ТекСтрокаУслуги.Количество;   КонецеСли;
		Если  ТекСтрокаУслуги.КоличествоКм<>0 ТОгда Движение.ТарифКм = ТекСтрокаУслуги.СуммаКм/ТекСтрокаУслуги.КоличествоКм; КонецеСли;
		Если  ТекСтрокаУслуги.Количество1 <>0 ТОгда Движение.Тариф1  = ТекСтрокаУслуги.Сумма1 /ТекСтрокаУслуги.Количество1;  КонецеСли;
		Если  ТекСтрокаУслуги.Количество2 <>0 ТОгда Движение.Тариф2  = ТекСтрокаУслуги.Сумма2 /ТекСтрокаУслуги.Количество2;  КонецеСли;
		Если  ТекСтрокаУслуги.Количество3 <>0 ТОгда Движение.Тариф3  = ТекСтрокаУслуги.Сумма3 /ТекСтрокаУслуги.Количество3;  КонецеСли;
		Если  ТекСтрокаУслуги.Количество4 <>0 ТОгда Движение.Тариф4  = ТекСтрокаУслуги.Сумма4 /ТекСтрокаУслуги.Количество4;  КонецеСли;
		Если  ТекСтрокаУслуги.Количество5 <>0 ТОгда Движение.Тариф5  = ТекСтрокаУслуги.Сумма5 /ТекСтрокаУслуги.Количество5;  КонецеСли;
		Если  ТекСтрокаУслуги.Количество6 <>0 ТОгда Движение.Тариф6  = ТекСтрокаУслуги.Сумма6 /ТекСтрокаУслуги.Количество6;  КонецеСли;
		
		
		Движение.Лимит = ТекСтрокаУслуги.Лимит;
		Движение.Пробег = ТекСтрокаУслуги.Пробег;
		Движение.идСтроки = ТекСтрокаУслуги.идСтроки;
		Движение.ТипТС = ТекСтрокаУслуги.ТипТС;
		Движение.Реестр = Ссылка;
		
		Движение.Услуга1 = ТекСтрокаУслуги.Номенклатура1;
		Движение.Услуга2 = ТекСтрокаУслуги.Номенклатура2;
		Движение.Услуга3 = ТекСтрокаУслуги.Номенклатура3;
		Движение.Услуга4 = ТекСтрокаУслуги.Номенклатура4;
		Движение.Услуга5 = ТекСтрокаУслуги.Номенклатура5;
		Движение.Услуга6 = ТекСтрокаУслуги.Номенклатура6;
		
		Если ДвжПоСубподряду ТОгда
			Движение.СуммаСуб = ТекСтрокаУслуги.СуммаСуб;
		КонецЕСЛИ;
		
	КонецЦикла;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ОбновитьСуммыПоСубподрядчикам() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	глОбщий.РасчетПРейскурантаСубподрядчика(Запрос,Ссылка);
	
	Запрос.Текст = "
	|SELECT
	|   Т1.ПутевойЛист,
	|   Т1.ИдСтроки,
	|   Сумма+СуммаКм+Сумма1+Сумма2+Сумма3+Сумма4+Сумма5+Сумма6 СуммаСуб
	|
	|FROM  врСуб Т1
	|";
	
	ТБл = Запрос.Выполнить().Выгрузить();
	
	Для каждого стр из Услуги Цикл
		
		Стр.СуммаСуб = 0;
		
		Мас = Тбл.НайтиСтроки(Новый Структура("идСтроки,ПутевойЛист",Стр.идСтроки,Стр.ПутевойЛист));
		Если Мас.Количество()=0 Тогда
			Продолжить;
		КонецЕСЛИ;
		
		Стр.СуммаСуб = Мас[0].СуммаСуб;
		
	КонецЦикла;

	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	пСум = Услуги.Итог("Сумма")+Услуги.Итог("СуммаКм");
	Для а=1 по 6 Цикл
		пСум = пСум + Услуги.Итог("Сумма"+а);	
	КонецЦикла;
	
	СуммаДокумента = пСум;
	КоличествоСтрокУслуги = Услуги.Количество();
	
	
	МАс = Услуги.НайтиСтроки(Новый Структура("ИдСтроки,ПутевойЛист",0,Документы.уатПутевойЛист.ПустаяСсылка()));
	ДЛя каждого Эл из Мас Цикл
		Эл.идСтроки = Эл.НомерСтроки;
	КонецЦикла;
	
	//Если за указанный месяц есть проведенный документ "ЗакрытиеПериодаПоСубподряду"
	//редактирование этого документа ЗАПРЕЩЕНО
	Если глОбщий.ЗакрытПериодПоСубподряду(Дата) ТОгда
		Отказ=Истина;
		ВозвраТ;
	КонецЕСЛИ;
	
КонецПроцедуры

Функция НомерСФизбух()
	
	
    ДБ = Константы.ксБазаБУХ.Получить();
	Док   =  ДБ+Справочники.SQLтаблицы.НайтиПоНаименованию("Документ.РеализацияТоваровУслуг").Код; 
	ДокТЧ =  ДБ+Справочники.SQLтаблицы.НайтиПоНаименованию("Документ.РеализацияТоваровУслуг.Реестр").Код; 
	ДокТЧидРеф =  Справочники.SQLтаблицы.НайтиПоНаименованию("Документ.РеализацияТоваровУслуг").Код+"_IDRRef"; 
	дкИд  =  Справочники.SQLтаблицы.НайтиПоНаименованию("Документ.РеализацияТоваровУслуг.Реестр.идРеестра").Код;

	Стр = СокрЛП(ССылка.УникальныйИдентификатор());
	Стр = СтрЗаменить(Стр,"-","");
	СтрГУИД = Сред(Стр,17,4)+Сред(Стр,21,12)+Сред(Стр,13,4)+Сред(Стр,9,4)+Сред(Стр,1,8);
	
	ТекстЗапроса = "
	| SELECT DISTINCT
	|   LTRIM(RTRIM(Док._Number)) Ном,
	|   Док._Date_Time Дт
	|
	| FROM "+Док+" Док
	| INNER JOIN   "+ДокТЧ+" ДокТЧ ON ДокТЧ."+ДокТЧидРеф+" = Док._IDRRef
	|
	| WHERE "+дкИд+" =  '0x"+СтрГУИД+"'
	|
	|"; 
	
	//Сообщить(ТекстЗапроса); //Возврат;	
	Соединение=Новый ComObject("ADODB.Connection");
	Соединение.Open(Константы.кcСтрокаSQLпроизводство.Получить());
	Записи=Новый ComObject("ADODB.RecordSet");
	Записи.Open(ТекстЗапроса,Соединение);
	
	Стр = "";
	Если  Записи.EOF() = 0 ТОгда 
		пДт = Записи.Fields("Дт").Value;
		пДт = ДобавитьМесяц(пДт,-12*2000);
		
		Стр = "№"+СокРЛП(Записи.Fields("Ном").Value)+" от "+Формат(пДт,"ДФ=dd.MM.yyyy")+"г.";
		//Записи.MoveNext(); 
	КонецЕсли; 
	
	Записи.Close(); 
	Соединение.Close(); 
	
	Возврат Стр;
	
КонецФункции

Функция ЕстьТакойПараметр(Таб,Рек,МасПар=Неопределено)
	
	Попытка
		п = Таб.Параметры[Рек];
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	
	
	Если МасПар=Неопределено Тогда
		МасПар = Новый Массив;	
		
		ДЛя а=1 по Таб.высотаТаблицы Цикл
			Для б=1 по таб.ширинаТаблицы Цикл
				п = СокрЛП(Таб.Область(а,б,а,б).Параметр);
				Если п="" Тогда Продолжить; КонецеСЛИ;
				МасПар.Вставить(п); 
			КонецЦикла;
		КонецЦикла;
		
	КонецЕСЛИ;
	
	Возврат МасПАр.Найти(Рек)<>Неопределено;
	
КонецФункции

//ВидТалона: "й0" - пусто; "й1" - Со спидометром и часами
Процедура ПечатьТалонов(Вариант,ТекПЛ,ВидТалона="й0")  Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	уатПутевойЛист.Номер,
	               |	уатПутевойЛист.ТранспортноеСредство КАК ТранспортноеСредство,
	               |	уатПутевойЛист.ТранспортноеСредство.ГаражныйНомер КАК ТранспортноеСредствоГарНомер,
	               |	уатПутевойЛист.ТранспортноеСредство.ГосударственныйНомер КАК ТранспортноеСредствоГосНомер,
	               |	НАЧАЛОПЕРИОДА(уатПутевойЛист.ДатаВыезда, ДЕНЬ) КАК ДатаВыезда,
	               |	НАЧАЛОПЕРИОДА(уатПутевойЛист.ДатаВозвращения, ДЕНЬ) КАК ДатаВозвращения,
	               |	уатПутевойЛист.ДатаВыезда КАК ВремяВыезда,
	               |	уатПутевойЛист.ДатаВозвращения КАК ВремяВозвращения,
	               |	РеестрУслугУслуги.Ссылка.Организация.Наименование КАК ОрганизацияКР,
	               |	уатПутевойЛист.ТранспортноеСредство.Наименование КАК МодельТС,
	               |	РеестрУслугУслуги.Ссылка.Контрагент.КонтрагентНаПечать КАК Заказчик,
	               |	РеестрУслугУслуги.Ссылка.Контрагент.НаименованиеПолное КАК ЗаказчикП,
	               |	РеестрУслугУслуги.Количество КАК Количество,
	               |	РеестрУслугУслуги.Пробег КАК Пробег,
	               |	уатПутевойЛист.СпидометрВыезда,
	               |	уатПутевойЛист.СпидометрВозвращения,
	               |	уатПутевойЛист.ВсегоЧасов
	               |ИЗ
	               |	Документ.РеестрУслуг.Услуги КАК РеестрУслугУслуги
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.уатПутевойЛист КАК уатПутевойЛист
	               |		ПО РеестрУслугУслуги.ПутевойЛист = уатПутевойЛист.Ссылка
	               |ГДЕ
	               |	РеестрУслугУслуги.Ссылка = &Ссылка
	               |	И (&ПЛ = ЗНАЧЕНИЕ(Документ.уатПутевойЛист.ПустаяСсылка)
	               |			ИЛИ уатПутевойЛист.Ссылка = &ПЛ)
	               |УПОРЯДОЧИТЬ ПО
	               |	ТранспортноеСредство,
	               |	уатПутевойЛист.Дата
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ПЛ",ТекПЛ);
	ТБл = Запрос.Выполнить().Выгрузить();
	
	Макет = ПолучитьМакет("Талон");
	Обл = Макет.ПолучитьОбласть("й2|"+видТалона);
	
	Таб = Новый ТабличныйДокумент;
	Таб.ИмяПараметровПечати = "ТалоныИзРеестра";
	
	Для каждого Стр из Тбл Цикл
		Обл.Параметры.Заполнить(Стр);
		обл.Параметры.ДатаВыписки = Формат(Стр.ДатаВыезда,"ДФ=dd.MM.yy");	
		Если Стр.ДатаВыезда = Стр.ДатаВозвращения Тогда
			обл.Параметры.ТекстДействителенДо = "";	
		ИНАче
			обл.Параметры.ТекстДействителенДо = Формат(Стр.ДатаВозвращения,"ДФ=dd.MM.yy");	
		КонецесЛИ;
		
		Если СокрЛП(Стр.Заказчик) = "" Тогда
			обл.Параметры.Заказчик = Стр.ЗаказчикП;	
		КонецеСЛИ;
		
		Если Таб.ВысотаТаблицы = 0 ТОгда
			Таб.Вывести(Обл);
		ИНАчеЕсли Таб.ПроверитьПрисоединение(Обл) Тогда
			Таб.Присоединить(Обл);
		ИНАчеЕсли Таб.ПроверитьВывод(Обл) Тогда
			Таб.Вывести(Обл);
		ИНаче
			Таб.ВывестиГоризонтальныйРазделительСтраниц();
			Таб.Вывести(Обл);
		КонецЕСЛИ;
	КонецЦиклА;	
	
	Таб.ТолькоПросмотр = Истина;
	Таб.ОтображатьСетку = Ложь;
	Таб.Показать("Талоны");
	
КонецПроцедуры

Процедура ПечатьСверкаСБСМТС(СсылкаНаОбъект)  Экспорт
	
	Перем ИДДанные, СистемаМониторинга;
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Очистить();
	
	Макет = Документы.РеестрУслуг.ПолучитьМакет("СверкаСБСМТС");
	Заголовок = Макет.ПолучитьОбласть("Заголовок");
	ТС = Макет.ПолучитьОбласть("ТС");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	Строка = Макет.ПолучитьОбласть("Детали");
	
	Заголовок.Параметры.СсылкаНаОбъект = СсылкаНаОбъект;
	ТабДок.Вывести(Заголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеестрУслугУслуги.ПутевойЛист КАК ПЛ,
		|	ПРЕДСТАВЛЕНИЕ(РеестрУслугУслуги.ПутевойЛист),
		|	РеестрУслугУслуги.ТС КАК ТС,
		|	ПРЕДСТАВЛЕНИЕ(РеестрУслугУслуги.ТС),
		|	РеестрУслугУслуги.Пробег КАК ПробегРеестр,
		|	ксДанныеАтографа.Пробег КАК ПробегРегистр,
		|	РеестрУслугУслуги.ПутевойЛист.ДатаВыезда КАК ПЛДата,
		|	РеестрУслугУслуги.ПутевойЛист.Номер КАК ПЛНомер
		|ИЗ
		|	Документ.РеестрУслуг.Услуги КАК РеестрУслугУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ксДанныеАтографа КАК ксДанныеАтографа
		|		ПО РеестрУслугУслуги.ПутевойЛист = ксДанныеАтографа.ПутевойЛист
		|ГДЕ
		|	РеестрУслугУслуги.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТС,
		|	ПЛДата
		|ИТОГИ
		|	СУММА(ПробегРеестр),
		|	СУММА(ПробегРегистр)
		|ПО
		|	ОБЩИЕ,
		|	ТС";
	
	Запрос.УстановитьПараметр("Ссылка",СсылкаНаОбъект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщийИтог.Следующий();
	
	СистемаМониторинга = Неопределено;
	цвАвто = НОвый Цвет;	
	Сообщить(ТекущаяДата());
	ВыборкаТС = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаТС.Следующий() Цикл
		ТС.Параметры.Заполнить(ВыборкаТС);
		ТС.Параметры.ГарНомер = ВыборкаТС.ТС.ГаражныйНомер;
		ТС.Параметры.ГосударственныйНомер = ВыборкаТС.ТС.ГосударственныйНомер;
		ТС.Параметры.СистемаМониторинга = ВыборкаТС.ТС.СистемаМониторинга;
		ТС.ОБласть(1,2,1,8).ЦветФона = WebЦвета.Желтый; //СветлоЖелтый
		Если Не ЗначениеЗаполнено(ВыборкаТС.ТС.ИДвСистемеНавигации)Тогда
			ТС.ОБласть(1,5,1,5).ЦветФона = WebЦвета.ЛососьСветлый;; 
		КонецЕсли;	
		ТабДок.Вывести(ТС, ВыборкаТС.Уровень());

		Выборка = ВыборкаТС.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.ТС.ИДвСистемеНавигации) Тогда
				Если СистемаМониторинга <> Выборка.ТС.СистемаМониторинга Тогда
					ИДДанные = Неопределено;
					СистемаМониторинга = Выборка.ТС.СистемаМониторинга;
				КонецЕсли;	
				Стк = глАвтограф.ПолучитьДанныеПоТС(Выборка.ТС,Выборка.ПЛ.ДатаВыезда,Выборка.ПЛ.ДатаВозвращения,ИДДанные,Ложь);
				Если Стк <> Неопределено Тогда
					Строка.Параметры.Заполнить(Стк);
				КонецЕсли;	
			КонецЕсли;
			Строка.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(Строка);
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.Показать();
	Сообщить(ТекущаяДата());
	
КонецПроцедуры	
