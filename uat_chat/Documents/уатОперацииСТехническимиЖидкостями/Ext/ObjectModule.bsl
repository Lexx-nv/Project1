////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБЪЕКТА

Перем Права Экспорт; // Переменная объекта - ссылка на коллекцию прав, настроек и переменных окружения.


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
//Функция ПолучитьСписокПечатныхФорм() Экспорт
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	
	СтруктураМакетов.Вставить("ОперацииСТЖ", "Операции с тех. жидкостями");
	
	Возврат СтруктураМакетов ;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//  ФлагПечати: 0 - весь п/л, 1 - лиц. сторона, 2 - обр. сторона
//
Процедура Печать(НазваниеМакета = "", КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не ?(Права = Неопределено, Ложь, уатПраваИНастройки.уатПраво("ПечатьНепроведенных", Права)) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(НазваниеМакета) = Тип("СправочникСсылка.ВнешниеОбработки") Тогда
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ОбъектВнешнейФормы = НазваниеМакета.ПолучитьОбъект();
		Если ОбъектВнешнейФормы = Неопределено Тогда
			Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;			
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Попытка
			Обработка.СсылкаНаОбъект = Ссылка;
			ТабДокумент = Обработка.Печать();
			уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Права);
		Исключение
			Сообщить("Ошибка формата внешней обработки. Возможно выбрана обработка не для печати.", СтатусСообщения.Важное);
		КонецПопытки;
		
	Иначе
		
		Если НазваниеМакета = "ОперацииСТЖ" Тогда
			
			ТабДокумент = ПечатьОперацииСТЖ();
			уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Права);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // Печать

// Процедура осуществляет печать формы "ОперацииСТЖ"
//
Функция ПечатьОперацииСТЖ() Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОперацииСТЖ";
	Макет = ПолучитьМакет("ОперацииСТЖ");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, "Операции с техническими жидкостями");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ВидОперации");
	ОбластьМакета.Параметры.ВидОперации = ВидОперации;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	ОбластьМакета.Параметры.Склад = Склад;
	ОбластьМакета.Параметры.Подразделение = Подразделение;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	НомерСтроки = 0;
	Для Каждого СтрокаТабличнойЧасти Из ТехническиеЖидкости Цикл	
		
		НомерСтроки = НомерСтроки + 1;
		
		ОбластьСтроки.Параметры.Заполнить(СтрокаТабличнойЧасти);
		ОбластьСтроки.Параметры.ТСПредставление = уатОбщегоНазначения.уатПредставлениеТС(СтрокаТабличнойЧасти.ТС, Организация);
		
		ТабДокумент.Вывести(ОбластьСтроки);
		
	КонецЦикла;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ОбластьМакета.Параметры.Заполнить(ЭтотОбъект);
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
	
КонецФункции //ПечатьОперацииСТЖ()

#КонецЕсли


//////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	// Инициализация дополнительных свойств для проведения документа.
    уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
    
    // Инициализация данных документа.
    Документы.уатОперацииСТехническимиЖидкостями.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
    // Подготовка наборов записей.
    уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
    
    // Отражение в разделах учета.
	Если уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Организация, ПланыВидовХарактеристик.уатПраваИНастройки.ВестиСкладскойУчетУАТ) 
	 И (ВидОперации <> Перечисления.уатВидыОперацийСТехническимиЖидкостями.РасходПрочее) Тогда
		уатПроведение.ОтразитьПартииТоваровНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	КонецЕсли;
	уатПроведение.ОтразитьРасходТЖ(ДополнительныеСвойства, Движения, Отказ);

    // Запись наборов записей.
    уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
    
    // Контроль возникновения отрицательного остатка.
	Документы.уатОперацииСТехническимиЖидкостями.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
КонецПроцедуры

Процедура ПередЗаписью(Отказ,РежимЗаписи , РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначения.уатПроверкаПравПередЗаписьюВДокументах(ЭтотОбъект, Отказ, , Права);
КонецПроцедуры // ПередЗаписью

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок = "Проведение документа " + Ссылка;
	Если ВидОперации = Перечисления.уатВидыОперацийСТехническимиЖидкостями.ДоливПоАкту
		ИЛИ ВидОперации = Перечисления.уатВидыОперацийСТехническимиЖидкостями.ДоливПоТО
		ИЛИ ВидОперации = Перечисления.уатВидыОперацийСТехническимиЖидкостями.ДоливПрочее Тогда
		СтруктураШапкиДокумента = Новый Структура("ВидОперации, Организация, Склад");
	Иначе
		СтруктураШапкиДокумента = Новый Структура("ВидОперации, Организация");
	КонецЕСли;
	уатОбщегоНазначенияТиповые.уатПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект,СтруктураШапкиДокумента, Отказ, Заголовок);
	
	СтруктураПолей = Новый Структура("ТС, Водитель, Номенклатура, Количество");
	уатОбщегоНазначенияТиповые.уатПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ТехническиеЖидкости", СтруктураПолей, Отказ, Заголовок);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

// сохранение ссылки на коллекцию прав, настроек и окружения
Права = Неопределено;
#Если Клиент Тогда
	Права = глПраваУАТ;
#КонецЕсли