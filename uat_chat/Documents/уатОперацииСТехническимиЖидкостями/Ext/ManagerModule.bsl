// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	Если уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ДокументСсылка.Организация, ПланыВидовХарактеристик.уатПраваИНастройки.ВестиСкладскойУчетУАТ)
		И (ДокументСсылка.ВидОперации <> Перечисления.уатВидыОперацийСТехническимиЖидкостями.РасходПрочее) Тогда
		СформироватьТаблицаПартий(ДокументСсылка, СтруктураДополнительныеСвойства);
	КонецЕсли;
	СформироватьТаблицаРасходТЖ(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПартий(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	мЗапрос = Новый Запрос;
	мЗапрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка.Склад КАК Склад,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаДокумента.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаДокументаНоменклатура
	|ИЗ
	|	Документ.уатОперацииСТехническимиЖидкостями.ТехническиеЖидкости КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатНоменклатураГСМ КАК уатНоменклатураГСМ
	|		ПО ТаблицаДокумента.Номенклатура = уатНоменклатураГСМ.Номенклатура
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.Ссылка.Склад";
	
	Если уатРаботаСМетаданными.естьСпрЕдиницыИзмерения() тогда
		СтрокаПоиска  = "ТаблицаДокумента.Количество";
		СтрокаЗамены  = "ВЫРАЗИТЬ(ТаблицаДокумента.Количество * ТаблицаДокумента.ЕдиницаИзмерения.Коэффициент / ТаблицаДокумента.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3))";
		мЗапрос.Текст = СтрЗаменить(мЗапрос.Текст,СтрокаПоиска,СтрокаЗамены);
	КонецЕсли;
	
	мЗапрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	мЗапрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Выборка = мЗапрос.Выполнить();
	
	мЗапрос.Текст = 
	"ВЫБРАТЬ
	|	ТабНоменклатуры.Склад,
	|	ТабНоменклатуры.Номенклатура,
	|	ТабНоменклатуры.Количество
	|ИЗ 
	|	ТаблицаДокументаНоменклатура КАК ТабНоменклатуры";
	
	ТаблицаПартий = уатПроведение.ПолучитьТаблицуПартийДляСписания(мЗапрос.Выполнить().Выгрузить(),
		уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ДокументСсылка.Организация, ПланыВидовХарактеристик.уатПраваИНастройки.СпособОценкиМПЗ), СтруктураДополнительныеСвойства.ДляПроведения.МоментКонтроля);
	
	ЗапросПартии = Новый Запрос();
	ЗапросПартии.Текст = 
	"ВЫБРАТЬ
	|	ТабДанных.Склад,
	|	ТабДанных.Номенклатура,
	|	ТабДанных.Партия,
	|	ТабДанных.Количество,
	|	ТабДанных.Стоимость,
	|	ТабДанных.СтоимостьУпр
	|ПОМЕСТИТЬ ВремТаблицаПартий
	|ИЗ
	|	&ТаблицаПарам КАК ТабДанных
	|;
	|ВЫБРАТЬ
	|	&ВидДвижения КАК ВидДвижения,
	|	&Период,
	|	&Регистратор,
	|	ТабДанных.Склад КАК Склад,
	|	" + ?(ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийСТехническимиЖидкостями.Слив, "&Регистратор", "ТабДанных.Партия") + " КАК Партия,
	|	ТабДанных.Номенклатура,
	|	ТабДанных.Количество,
	|	ТабДанных.Стоимость,
	|	ТабДанных.СтоимостьУпр
	|ИЗ ВремТаблицаПартий КАК ТабДанных";
	
	ЗапросПартии.УстановитьПараметр("Период"         , ДокументСсылка.Дата);
	ЗапросПартии.УстановитьПараметр("ТаблицаПарам"   , ТаблицаПартий);
	ЗапросПартии.УстановитьПараметр("Регистратор"    , ДокументСсылка);
	Если ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийСТехническимиЖидкостями.Слив Тогда
		ЗапросПартии.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Приход);
	Иначе
		ЗапросПартии.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Расход);
	КонецЕсли;
		
	МассивРезультатов = ЗапросПартии.ВыполнитьПакет();
	ТаблицаДокумента = МассивРезультатов[1].Выгрузить();
	
	//управляемая блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатПартииТоваровНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ТаблицаДокумента;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	Блокировка.Заблокировать();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартии", ТаблицаДокумента);
	
КонецПроцедуры // СформироватьТаблицаПартий()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасходТЖ(ДокументСсылка, СтруктураДополнительныеСвойства)
	тблДвижений = Новый ТаблицаЗначений;
	тблДвижений.Колонки.Добавить("Период");
	тблДвижений.Колонки.Добавить("ТС");
	тблДвижений.Колонки.Добавить("Водитель");
	тблДвижений.Колонки.Добавить("ГСМ");
	тблДвижений.Колонки.Добавить("Колонна");
	тблДвижений.Колонки.Добавить("Организация");
	тблДвижений.Колонки.Добавить("ВидОперации");
	тблДвижений.Колонки.Добавить("КоличествоПриход");
	тблДвижений.Колонки.Добавить("КоличествоРасход");
	
	ЭтоПриходТЖ = (ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийСТехническимиЖидкостями.ДоливПоАкту
		ИЛИ ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийСТехническимиЖидкостями.ДоливПоТО
		ИЛИ ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийСТехническимиЖидкостями.ДоливПрочее);
		
	флЕстьЕИ = уатРаботаСМетаданными.естьСпрЕдиницыИзмерения();
	
	Для Каждого ТекСтрокаТЖ Из ДокументСсылка.ТехническиеЖидкости Цикл
		Если ТекСтрокаТЖ.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ТекКолоннаТС = уатОбщегоНазначения.уатПрочитатьРеквизитыТС(ТекСтрокаТЖ.ТС, "Колонна", ДокументСсылка.Дата).Колонна;
		
		НоваяСтрока = тблДвижений.Добавить();
		НоваяСтрока.Период = ДокументСсылка.Дата;
		НоваяСтрока.ВидОперации = ДокументСсылка.ВидОперации;
		НоваяСтрока.ТС = ТекСтрокаТЖ.ТС;
		НоваяСтрока.Водитель = ТекСтрокаТЖ.Водитель;
		НоваяСтрока.ГСМ = ТекСтрокаТЖ.Номенклатура;
		НоваяСтрока.Колонна = ТекКолоннаТС;
		НоваяСтрока.Организация = ДокументСсылка.Организация;
		Если ЭтоПриходТЖ Тогда
			Если флЕстьЕИ Тогда
				НоваяСтрока.КоличествоПриход = ТекСтрокаТЖ.Количество*ТекСтрокаТЖ.ЕдиницаИзмерения.Коэффициент;
			Иначе
				НоваяСтрока.КоличествоПриход = ТекСтрокаТЖ.Количество;
			КонецЕсли;
		Иначе
			Если флЕстьЕИ Тогда
				НоваяСтрока.КоличествоРасход = ТекСтрокаТЖ.Количество*ТекСтрокаТЖ.ЕдиницаИзмерения.Коэффициент;
			Иначе
				НоваяСтрока.КоличествоРасход = ТекСтрокаТЖ.Количество;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	тблДвижений.Свернуть("Период, ТС, Водитель, ГСМ, Колонна, Организация, ВидОперации", "КоличествоПриход, КоличествоРасход");
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасходТЖ", тблДвижений);
КонецПроцедуры // СформироватьТаблицаРасходГСМ()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	Если уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ДокументСсылка.Организация, ПланыВидовХарактеристик.уатПраваИНастройки.ВестиСкладскойУчетУАТ) И
		(ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийСТехническимиЖидкостями.ДоливПоАкту ИЛИ
		ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийСТехническимиЖидкостями.ДоливПоТО ИЛИ
		ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийСТехническимиЖидкостями.ДоливПрочее) Тогда
		
		Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ДокументСсылка);
		
		тблЗаправки = ДокументСсылка.ТехническиеЖидкости.Выгрузить();
		
		мсвНоменклатура = Новый Массив;
		Для Каждого ТекСтрока Из тблЗаправки Цикл
			мсвНоменклатура.Добавить(ТекСтрока.Номенклатура);
		КонецЦикла;
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	уатПартииТоваровНаСкладах.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(уатПартииТоваровНаСкладах.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.уатПартииТоваровНаСкладах.Остатки(&МоментКонтроля, Склад = &Склад И Номенклатура В(&Номенклатура)) КАК уатПартииТоваровНаСкладах
		|ГДЕ
		|	ЕСТЬNULL(уатПартииТоваровНаСкладах.КоличествоОстаток, 0) < 0");
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		Запрос.УстановитьПараметр("Номенклатура", мсвНоменклатура);
		Запрос.УстановитьПараметр("Склад", ДокументСсылка.Склад);
		Рез = Запрос.Выполнить().Выбрать();
		
		Пока Рез.Следующий() Цикл
			ТекстСообщения = "Номенклатура """ + Рез.Номенклатура + """, Склад """ + ДокументСсылка.Склад + """ ";
			ТекстСообщения = ТекстСообщения + " - отрицательный остаток Номенклатуры на Складе.";
			ТекстСообщения = ТекстСообщения + Символы.ПС + "Остаток на складе: " + Рез.КоличествоОстаток + ".";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
