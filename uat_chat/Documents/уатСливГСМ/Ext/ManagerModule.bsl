// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	СформироватьТаблицаГСМ(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаПартий(ДокументСсылка, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаГСМ(ДокументСсылка, СтруктураДополнительныеСвойства)
	Перем мТаблицаПоСписаниюГСМ;
	
	мЗапрос = новый Запрос;
	мЗапрос.Текст = 
	"ВЫБРАТЬ
	|	уатСливГСМ.ТС,
	|	уатСливГСМ.ГСМ
	|ИЗ
	|	Документ.уатСливГСМ КАК уатСливГСМ
	|ГДЕ
	|	уатСливГСМ.Ссылка = &Ссылка";
	мЗапрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатОстаткиГСМнаТС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = мЗапрос.Выполнить();
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ТС" , "ТС");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ГСМ", "ГСМ");
	Блокировка.Заблокировать();
	
	ВсеОК =	уатОбщегоНазначения_проф.уатПодготовитьТаблицуСписанияГСМ(ДокументСсылка, мТаблицаПоСписаниюГСМ, Истина);
		
	мТаблицаПоСписаниюГСМ.Колонки.Добавить("Регистратор");
	мТаблицаПоСписаниюГСМ.ЗаполнитьЗначения(ДокументСсылка, "Регистратор");
	мТаблицаПоСписаниюГСМ.Колонки.Добавить("Период");
	мТаблицаПоСписаниюГСМ.ЗаполнитьЗначения(ДокументСсылка.Дата, "Период");
	мТаблицаПоСписаниюГСМ.Колонки.Добавить("ВидДвижения");
	мТаблицаПоСписаниюГСМ.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаГСМ", мТаблицаПоСписаниюГСМ);
КонецПроцедуры // СформироватьТаблицаГСМ()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПартий(ДокументСсылка, СтруктураДополнительныеСвойства)
	Перем мТаблицаПартий;
	
	мТаблицаПартий = Новый ТаблицаЗначений;
	мТаблицаПартий.Колонки.Добавить("Период");
	мТаблицаПартий.Колонки.Добавить("Регистратор");
	мТаблицаПартий.Колонки.Добавить("ВидДвижения");
	мТаблицаПартий.Колонки.Добавить("Номенклатура");
	мТаблицаПартий.Колонки.Добавить("Склад");
	мТаблицаПартий.Колонки.Добавить("Партия");
	мТаблицаПартий.Колонки.Добавить("Количество");
	мТаблицаПартий.Колонки.Добавить("Стоимость");
	мТаблицаПартий.Колонки.Добавить("СтоимостьУпр");
	
	НоваяСтрока = мТаблицаПартий.Добавить();
	НоваяСтрока.Номенклатура = ДокументСсылка.ГСМ;
	НоваяСтрока.Склад = ДокументСсылка.АЗС.Контрагент_Склад;
	НоваяСтрока.Партия = ДокументСсылка;
	НоваяСтрока.Количество = ДокументСсылка.Количество;
	НоваяСтрока.Стоимость = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаГСМ.Итог("Стоимость");
	НоваяСтрока.СтоимостьУпр = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаГСМ.Итог("СтоимостьУпр");
	
	//управляемая блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатПартииТоваровНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = мТаблицаПартий;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	Блокировка.Заблокировать();
	
	мТаблицаПартий.ЗаполнитьЗначения(ДокументСсылка, "Регистратор");
	мТаблицаПартий.ЗаполнитьЗначения(ДокументСсылка.Дата, "Период");
	мТаблицаПартий.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");
		
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартии", мТаблицаПартий);
КонецПроцедуры // СформироватьТаблицаПартий()

Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
		
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ДокументСсылка);
	
	КоличествоОстаток = уатОбщегоНазначения.уатОстатокГСМнаТС(ДополнительныеСвойства.ДляПроведения.МоментКонтроля, ДокументСсылка.ТС, ДокументСсылка.ГСМ);
	
	Если КоличествоОстаток < 0 Тогда
		ТекстСообщения = "ГСМ """ + ДокументСсылка.ГСМ + """, ТС """ + уатОбщегоНазначения.уатПредставлениеТС(ДокументСсылка.ТС,
			ДокументСсылка.Организация) + """ ";
		ТекстСообщения = ТекстСообщения + " - отрицательный остаток ГСМ на ТС.";
		ТекстСообщения = ТекстСообщения + Символы.ПС + "Остаток на ТС: " + КоличествоОстаток + ".";
				
		ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры