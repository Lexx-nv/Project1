////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБЪЕКТА

Перем Права Экспорт; // Переменная объекта - ссылка на коллекцию прав, настроек и переменных окружения.


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
	
	
	Функция ПечатьСлив() 
		
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СливГСМ_Слив";
		Макет       = ПолучитьМакет("Слив");
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	уатСливГСМ.Организация,
		|	уатСливГСМ.Ответственный,
		|	уатСливГСМ.ТС,
		|	уатСливГСМ.ГСМ,
		|	уатСливГСМ.АЗС,
		|	уатСливГСМ.Количество,
		|	уатСливГСМ.ПутевойЛист
		|ИЗ
		|	Документ.уатСливГСМ КАК уатСливГСМ
		|ГДЕ
		|	уатСливГСМ.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		ТЗ = Запрос.Выполнить().Выгрузить();
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, "Слив ГСМ");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("РеквизитыОрганизации");
		ОбластьМакета.Параметры.Заполнить(ТЗ[0]);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Ответственный = Ссылка.Ответственный;
		ТабДокумент.Вывести(ОбластьМакета);
		
		Возврат ТабДокумент;
		
	КонецФункции
	
	// Процедура осуществляет печать документа. Можно направить печать на 
	// экран или принтер, а также распечатать необходимое количество копий.
	//
	//  Название макета печати передается в качестве параметра,
	// по переданному названию находим имя макета в соответствии.
	//
	// Параметры:
	//  НазваниеМакета - строка, название макета.
	//
	Процедура Печать(НазваниеМакета = "", КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
		Если ЭтоНовый() Тогда
			Предупреждение("Документ можно распечатать только после его записи");
			Возврат;
		ИначеЕсли Не ?(Права = Неопределено, Ложь, уатПраваИНастройки.уатПраво("ПечатьНепроведенных", Права)) Тогда
			Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
			Возврат;
		КонецЕсли;
		
		Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
			Возврат;
		КонецЕсли;
		
		Если ТипЗнч(НазваниеМакета) = Тип("СправочникСсылка.ВнешниеОбработки") Тогда
			
			ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
			ОбъектВнешнейФормы = НазваниеМакета.ПолучитьОбъект();
			Если ОбъектВнешнейФормы = Неопределено Тогда
				Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
				Возврат;
			КонецЕсли;			
			ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
			ДвоичныеДанные.Записать(ИмяФайла);
			Обработка = ВнешниеОбработки.Создать(ИмяФайла);
			Попытка
				Обработка.СсылкаНаОбъект = Ссылка;
				ТабДокумент = Обработка.Печать();
				уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Права);
			Исключение
				Сообщить("Ошибка формата внешней обработки. Возможно выбрана обработка не для печати.", СтатусСообщения.Важное);
			КонецПопытки;
		Иначе
			
			Если НазваниеМакета = "Слив" тогда
				
				ТабДокумент = ПечатьСлив();
				уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, ""), Права);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецПроцедуры
	
	// Возвращает доступные варианты печати документа
	//
	// Возвращаемое значение:
	//  Структура, каждая строка которой соответствует одному из вариантов печати
	//  
	//Функция ПолучитьСписокПечатныхФорм() Экспорт
	Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
		
		СтруктураМакетов = Новый Структура;
		
		СтруктураМакетов.Вставить("Слив", "Слив ГСМ");
		
		Возврат СтруктураМакетов ;
		
	КонецФункции // ПолучитьСтруктуруПечатныхФорм()
	
#КонецЕсли

//////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
Процедура ЗапРег(Отказ,Рег,РегРсх,Тбл,ОснБак,Знач итРсх)
	
	Если итРсх=0 Тогда Возврат; КонецеСЛИ;
	
	Для каждого стр из Тбл Цикл
		Если Стр.БакОсновной<>ОснБак ТОгда ПродолжитЬ; КонецЕСЛИ;
		Если Стр.КоличествоОстаток<=0 Тогда ПродолжиТЬ; КонецЕСЛИ;
		Если итРсх <=0 Тогда Прервать; КонецЕсли;
		Зап = Рег.Добавить();
		Зап.Период = Дата;
		Зап.ВидДвижения = ВидДвиженияНакопления.Расход;
		ЗаполнитьЗначенияСвойств(Зап,Стр);
		Зап.Количество = Мин(итРсх,Стр.КоличествоОстаток);
		Зап.Слив = 1;
		
		Если ЗначениеЗаполнено(ПутевойЛист) ТОгда
			Зап = Рег.Добавить();
			Зап.Период = Дата;
			Зап.ВидДвижения = ВидДвиженияНакопления.Приход;
			ЗаполнитьЗначенияСвойств(Зап,Стр);
			Зап.ТС = ПутевойЛист.ТранспортноеСредство;
			Зап.Количество = Мин(итРсх,Стр.КоличествоОстаток);
			Зап.ПЛ = ПутевойЛист;
			Зап.Водитель = ПутевойЛист.Водитель1;
			Зап.АЗС = АЗС;
			Зап.Слив = 1;
			Зап.Оборудование = ОБорудованиеРабота;
			Зап.БакОсновной = НЕ ЗначениеЗаполнено(ОБорудованиеРабота);
		ИНаче
			Зап.Слив = 2;
		КонецеСЛИ;
		
		итРсх = итРсх - Зап.Количество;
		Стр.КоличествоОстаток = Стр.КоличествоОстаток - Зап.Количество;
		
	КонецЦикла;
	
	Если итРсх<>0 Тогда
		Сообщить("Недостаточно топлива по регистру: Остатки ГСМ Для списания слива!");
		Отказ = Истина;
	ИНаче
		
		//Зап = РегРсх.Добавить();
		//Зап.Период = Дата;
		//Зап.Регистратор = ссылка;
		//Зап.ТС = ТС;
		////Зап.Оборудование = ВыбКА.ОборудованиеРабота;
		////Зап.Контрагент = ВыбКА.Контрагент;
		//Зап.Цех = Неопределено;
		//
		//Зап.РАсходПоНорме = итРсх;
		//Зап.РасходПоФакту = итРсх;
		//
		//Зап.Водитель = Водитель;
		//Зап.БакОсновной = ОснБак;
		//Зап.Номенклатура = Неопределено;
		
	КонецЕСЛИ;
	
КонецПроцедуры

Процедура ДвижРег(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	уатОстаткиГСМнаТСОстатки.ТС,
	               |	уатОстаткиГСМнаТСОстатки.ГСМ,
	               |	уатОстаткиГСМнаТСОстатки.Партия,
	               |	уатОстаткиГСМнаТСОстатки.ДокПартии,
	               |	уатОстаткиГСМнаТСОстатки.БакОсновной,
	               |	уатОстаткиГСМнаТСОстатки.КоличествоОстаток
	               |ИЗ
	               |	РегистрНакопления.уатОстаткиГСМнаТС.Остатки(&Дт, ТС = &ТС) КАК уатОстаткиГСМнаТСОстатки
				   |ORDER BY БакОсновной";
				   Запрос.УстановитьПараметр("ТС",ТС);
				   Запрос.УстановитьПараметр("Дт",КонецМЕсяца(Дата));
				   Тбл =Запрос.Выполнить().Выгрузить();
				   
				   
	Рег = Движения.уатОстаткиГСМнаТС;
	РегРсх = Движения.уатРасходГСМнаТС;
	РегРсх.Записывать = Истина;
	
	ЗапРег(Отказ,Рег,РегРсх,Тбл,Истина,Количество);
	ЗапРег(Отказ,Рег,РегРсх,Тбл,Ложь,Количество1);
	Рег.Записать();
	
КонецПроцедуры

Процедура ОтразитьПробег(Отказ)
	
	Рег = Движения.уатСчетчикиТС;
	Рег.Записывать = Истина;
	
	Зап = Рег.Добавить();
	Зап.Период = Дата;
	Зап.ТС = ТС;
	
	Зап.ОстатокТопливаВозврат  = ОстатокТопливаВозврат;
	Зап.ОстатокТопливаВозврат1 = ОстатокТопливаВозврат1;
	Зап.ОстатокТопливаВыезд    = ОстатокТопливаВыезд;
	Зап.ОстатокТопливаВыезд1   = ОстатокТопливаВыезд1;
		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	//Документы.уатСливГСМ.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	 ДвижРег(Отказ);
	 ОтразитьПробег(Отказ);
	
	// Запись наборов записей.
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль возникновения отрицательного остатка.
	//Документы.уатСливГСМ.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначения.уатДокументПередЗаписью(ЭтотОбъект, Отказ, Права, РежимЗаписи, РежимПроведения);
	
	Если глОбщий.ЕстьРасходГСМзаМесяц(Дата) ТОгда
		Отказ = Истина;
		ВозвраТ;
	КонецЕСЛИ;
	
	Если ЗначениеЗаполнено(ПутевойЛист) Тогда
		АЗС = Справочники.уатАЗС.Слив;
	КонецеСЛИ;
	
КонецПроцедуры // ПередЗаписью

Процедура ОбработкаУдаленияПроведения(Отказ)
	// Инициализация дополнительных свойств для проведения документа
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	Документы.уатСливГСМ.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатПутевойЛист") Тогда
	//	СтандартнаяОбработка = Ложь;
	//	
	//	уатОбщегоНазначенияТиповые.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
	//	
	//	ДокументОснование = ДанныеЗаполнения;
	//	Организация       = ДанныеЗаполнения.Организация;
	//	Ответственный	  = ДанныеЗаполнения.Ответственный;
	//	Дата       		  = ДанныеЗаполнения.ДатаВыезда;
	//	ПутевойЛист 	  = ДанныеЗаполнения.Ссылка;
	//	ТС         		  = ДанныеЗаполнения.ТранспортноеСредство;
	//	ГСМ				  = уатОбщегоНазначения.уатПрочитатьРеквизитыТС(ДанныеЗаполнения.ТранспортноеСредство).Модель.ОсновноеТопливо;
	//	
	//	мАЗС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Организация, ПланыВидовХарактеристик.уатПраваИНастройки.ОсновнаяАЗС);
	//	Если Не ЗначениеЗаполнено(АЗС) И ТипЗнч(мАЗС) = Тип("СправочникСсылка.уатАЗС") И мАЗС.ЭтоАЗССклад Тогда 
	//		АЗС = мАЗС;
	//	КонецЕсли;;
	//КонецЕсли;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

// сохранение ссылки на коллекцию прав, настроек и окружения
Права = Неопределено;
#Если Клиент Тогда
	Права = глПраваУАТ;
#КонецЕсли