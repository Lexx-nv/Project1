// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	СформироватьТаблицуСчетчикиТС(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицуСчетчикиТС(ДокументСсылка, СтруктураДополнительныеСвойства)
	тблСчетчикиТС = Новый ТаблицаЗначений;
	тблСчетчикиТС.Колонки.Добавить("Регистратор");
	тблСчетчикиТС.Колонки.Добавить("Период");
	тблСчетчикиТС.Колонки.Добавить("ТС");
	тблСчетчикиТС.Колонки.Добавить("ТипСчетчика");
	тблСчетчикиТС.Колонки.Добавить("Значение");
	
	Для Каждого ТекСтрокаСпидометр Из ДокументСсылка.Спидометр Цикл
		Если ТекСтрокаСпидометр.ПоказанияСпидометра > 0 Тогда
			НоваяСтрока = тблСчетчикиТС.Добавить();
			НоваяСтрока.Период = ДокументСсылка.Дата;
			НоваяСтрока.Регистратор = ДокументСсылка;
			НоваяСтрока.ТС = ТекСтрокаСпидометр.ТС;
			//НоваяСтрока.ТипСчетчика = Перечисления.уатТипыСчетчиковТС.Спидометр;
			НоваяСтрока.Значение = ТекСтрокаСпидометр.ПоказанияСпидометра;
		КонецЕсли;	
		Если ТекСтрокаСпидометр.ПоказанияСчетчикаМЧ > 0 Тогда
			НоваяСтрока = тблСчетчикиТС.Добавить();
			НоваяСтрока.Период = ДокументСсылка.Дата;
			НоваяСтрока.Регистратор = ДокументСсылка;
			НоваяСтрока.ТС = ТекСтрокаСпидометр.ТС;
			//НоваяСтрока.ТипСчетчика = Перечисления.уатТипыСчетчиковТС.СчетчикМЧ;
			НоваяСтрока.Значение = ТекСтрокаСпидометр.ПоказанияСчетчикаМЧ;
		КонецЕсли;	
	КонецЦикла;
	
	//управляемая блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.уатСчетчикиТС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = тблСчетчикиТС;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ТС", "ТС");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ТипСчетчика", "ТипСчетчика");
	Блокировка.Заблокировать();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСчетчиковТС", тблСчетчикиТС);
КонецПроцедуры // СформироватьТаблицуАгрегатыТС()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	//Зарезервировано
КонецПроцедуры
