
// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	мЗапрос = Новый Запрос;
	мЗапрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	мЗапрос.УстановитьПараметр("ссылка",ДокументСсылка);
	мЗапрос.Текст = 
	"ВЫБРАТЬ
	|	уатПоступлениеАгрегатовШины.СерияНоменклатуры,
	|	уатПоступлениеАгрегатовШины.Пробег,
	|	уатПоступлениеАгрегатовШины.Цена,
	|	уатПоступлениеАгрегатовШины.НомерСтроки,
	|	уатПоступлениеАгрегатовШины.Ссылка
	|ПОМЕСТИТЬ ТаблицаШинДокумента
	|ИЗ
	|	Документ.уатПоступлениеАгрегатов.Шины КАК уатПоступлениеАгрегатовШины
	|ГДЕ
	|	уатПоступлениеАгрегатовШины.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	уатПоступлениеАгрегатовАккумуляторы.Ссылка,
	|	уатПоступлениеАгрегатовАккумуляторы.НомерСтроки,
	|	уатПоступлениеАгрегатовАккумуляторы.СерияНоменклатуры
	|ПОМЕСТИТЬ ТаблицаАккумуляторовДокумента
	|ИЗ
	|	Документ.уатПоступлениеАгрегатов.Аккумуляторы КАК уатПоступлениеАгрегатовАккумуляторы
	|ГДЕ
	|	уатПоступлениеАгрегатовАккумуляторы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	уатПоступлениеАгрегатов.СерияНоменклатуры,
	|	уатПоступлениеАгрегатов.НомерСтроки,
	|	уатПоступлениеАгрегатов.Ссылка
	|ПОМЕСТИТЬ ТаблицаПрочихАгрегатовДокумента
	|ИЗ
	|	Документ.уатПоступлениеАгрегатов.ПрочиеАгрегаты КАК уатПоступлениеАгрегатов
	|ГДЕ
	|	уатПоступлениеАгрегатов.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАккумуляторовДокумента.Ссылка.Склад КАК Склад,
	|	ТаблицаАккумуляторовДокумента.СерияНоменклатуры
	|ИЗ
	|	ТаблицаАккумуляторовДокумента КАК ТаблицаАккумуляторовДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаПрочихАгрегатовДокумента.Ссылка.Склад,
	|	ТаблицаПрочихАгрегатовДокумента.СерияНоменклатуры
	|ИЗ
	|	ТаблицаПрочихАгрегатовДокумента КАК ТаблицаПрочихАгрегатовДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаШинДокумента.Ссылка.Склад,
	|	ТаблицаШинДокумента.СерияНоменклатуры
	|ИЗ
	|	ТаблицаШинДокумента КАК ТаблицаШинДокумента";
	
	МассивРезультатов = мЗапрос.ВыполнитьПакет();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатОстаткиАгрегатов");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = МассивРезультатов[3];
	Для каждого КолонкаРезультатЗапроса Из МассивРезультатов[3].Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();

	мЗапрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаШинДокумента.Ссылка КАК Регистратор,
	|	ТаблицаШинДокумента.СерияНоменклатуры,
	|	ТаблицаШинДокумента.Пробег,
	|	ТаблицаШинДокумента.Ссылка.Дата КАК Период,
	|	ТаблицаШинДокумента.Ссылка.Организация КАК Организация
	|ИЗ
	|	ТаблицаШинДокумента КАК ТаблицаШинДокумента
	|ГДЕ
	|	ТаблицаШинДокумента.Пробег <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК Количество,
	|	ТаблицаШинДокумента.Ссылка КАК Регистратор,
	|	ТаблицаШинДокумента.Ссылка.Дата КАК Период,
	|	ТаблицаШинДокумента.Ссылка.Склад КАК Склад,
	|	ТаблицаШинДокумента.СерияНоменклатуры,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения
	|ИЗ
	|	ТаблицаШинДокумента КАК ТаблицаШинДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	ТаблицаАккумуляторовДокумента.Ссылка,
	|	ТаблицаАккумуляторовДокумента.Ссылка.Дата,
	|	ТаблицаАккумуляторовДокумента.Ссылка.Склад,
	|	ТаблицаАккумуляторовДокумента.СерияНоменклатуры,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|ИЗ
	|	ТаблицаАккумуляторовДокумента КАК ТаблицаАккумуляторовДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	ТаблицаПрочихАгрегатовДокумента.Ссылка,
	|	ТаблицаПрочихАгрегатовДокумента.Ссылка.Дата,
	|	ТаблицаПрочихАгрегатовДокумента.Ссылка.Склад,
	|	ТаблицаПрочихАгрегатовДокумента.СерияНоменклатуры,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|ИЗ
	|	ТаблицаПрочихАгрегатовДокумента КАК ТаблицаПрочихАгрегатовДокумента";
	
	мЗапрос.УстановитьПараметр("Ссылка"          , ДокументСсылка);

	МассивРезультатов = мЗапрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаИзносаПробегаШин", МассивРезультатов[0].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОстатковАгрегатов", МассивРезультатов[1].Выгрузить());
	
	//СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартии", ТаблицаПартии);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ДокументСсылка);
	
	мЗапрос = Новый Запрос;
	мЗапрос.Текст = 
	"ВЫБРАТЬ
	|	уатПоступлениеАгрегатовШины.СерияНоменклатуры
	|ПОМЕСТИТЬ АгрегатыДокумента
	|ИЗ
	|	Документ.уатПоступлениеАгрегатов.Шины КАК уатПоступлениеАгрегатовШины
	|ГДЕ
	|	уатПоступлениеАгрегатовШины.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	уатПоступлениеАгрегатовАккумуляторы.СерияНоменклатуры
	|ИЗ
	|	Документ.уатПоступлениеАгрегатов.Аккумуляторы КАК уатПоступлениеАгрегатовАккумуляторы
	|ГДЕ
	|	уатПоступлениеАгрегатовАккумуляторы.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	уатПоступлениеАгрегатовПрочиеАгрегаты.СерияНоменклатуры
	|ИЗ
	|	Документ.уатПоступлениеАгрегатов.ПрочиеАгрегаты КАК уатПоступлениеАгрегатовПрочиеАгрегаты
	|ГДЕ
	|	уатПоступлениеАгрегатовПрочиеАгрегаты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АгрегатыДокумента.СерияНоменклатуры,
	|	уатОстаткиАгрегатовОстатки.Склад,
	|	уатАгрегатыТССрезПоследних.ТС,
	|	уатАгрегатыТССрезПоследних.МестоУстановки
	|ИЗ
	|	АгрегатыДокумента КАК АгрегатыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.уатОстаткиАгрегатов.Остатки(&МоментВремени, ) КАК уатОстаткиАгрегатовОстатки
	|		ПО АгрегатыДокумента.СерияНоменклатуры = уатОстаткиАгрегатовОстатки.СерияНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатАгрегатыТС.СрезПоследних(&МоментВремени, ) КАК уатАгрегатыТССрезПоследних
	|		ПО АгрегатыДокумента.СерияНоменклатуры = уатАгрегатыТССрезПоследних.СерияНоменклатуры
	|ГДЕ
	|	((НЕ уатОстаткиАгрегатовОстатки.Склад ЕСТЬ NULL )
	|			ИЛИ (НЕ уатАгрегатыТССрезПоследних.СерияНоменклатуры ЕСТЬ NULL ))"; 
	
	мЗапрос.УстановитьПараметр("Ссылка"       , ДокументСсылка);
	мЗапрос.УстановитьПараметр("МоментВремени", Новый Граница(ДокументСсылка.Дата, ВидГраницы.Исключая));
	
	МассивРезультатов = мЗапрос.ВыполнитьПакет();
	
	ВыборкаКонтроля = МассивРезультатов[1].Выбрать();
	
	Пока ВыборкаКонтроля.следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаКонтроля.Склад) Тогда
			Если ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина Тогда
				ТекстСообщения = "Шина """ + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + """ уже имеется на складе """ + ВыборкаКонтроля.Склад;
			ИначеЕсли ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор Тогда
				ТекстСообщения = "Аккумулятор """ + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + """ уже имеется на складе """ + ВыборкаКонтроля.Склад;
			Иначе
				ТекстСообщения = "Агрегат (" + ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата + ") """ + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + """ уже имеется на складе """ + ВыборкаКонтроля.Склад;
			КонецЕсли;
		Иначе
			Если ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина Тогда
				ТекстСообщения = "Шина """ + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + """ уже установлена на ТС """ + уатОбщегоНазначения.уатПредставлениеТС(ВыборкаКонтроля.ТС, ДокументСсылка.Организация);
			ИначеЕсли ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор Тогда
				ТекстСообщения = "Аккумулятор """ + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + """ уже установлен на ТС """ + уатОбщегоНазначения.уатПредставлениеТС(ВыборкаКонтроля.ТС, ДокументСсылка.Организация);
			Иначе
				ТекстСообщения = "Агрегат (" + ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата + ") """ + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + """ уже установлен на ТС """ + уатОбщегоНазначения.уатПредставлениеТС(ВыборкаКонтроля.ТС, ДокументСсылка.Организация);
			КонецЕсли;
		КонецЕсли;
		
		ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Отказ,Заголовок);	
	КонецЦикла;
КонецПроцедуры
