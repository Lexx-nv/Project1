// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	СформироватьТаблицуАгрегатыТС(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицуОстаткиАгрегатов(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицуИзносПробегШин(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицуАгрегатыТС(ДокументСсылка, СтруктураДополнительныеСвойства)
	тблАгрегатыТС = Новый ТаблицаЗначений;
	тблАгрегатыТС.Колонки.Добавить("Регистратор");
	тблАгрегатыТС.Колонки.Добавить("Период");
	тблАгрегатыТС.Колонки.Добавить("СерияНоменклатуры");
	тблАгрегатыТС.Колонки.Добавить("ТС");
	тблАгрегатыТС.Колонки.Добавить("СостояниеАгрегата");
	тблАгрегатыТС.Колонки.Добавить("МестоУстановки");
	
	Для Каждого ТекСтрока Из ДокументСсылка.Шины Цикл
		НоваяСтрока = тблАгрегатыТС.Добавить();
		НоваяСтрока.Регистратор = ДокументСсылка;
		НоваяСтрока.Период = ДокументСсылка.Дата;
		НоваяСтрока.СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
		НоваяСтрока.ТС = ТекСтрока.ТС;
		НоваяСтрока.СостояниеАгрегата = ТекСтрока.Состояние;
		НоваяСтрока.МестоУстановки = ТекСтрока.МестоУстановки;
	КонецЦикла;
	Для Каждого ТекСтрока Из ДокументСсылка.Аккумуляторы Цикл
		НоваяСтрока = тблАгрегатыТС.Добавить();
		НоваяСтрока.Регистратор = ДокументСсылка;
		НоваяСтрока.Период = ДокументСсылка.Дата;
		НоваяСтрока.СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
		НоваяСтрока.ТС = ТекСтрока.ТС;
		НоваяСтрока.СостояниеАгрегата = ТекСтрока.Состояние;
	КонецЦикла;
	Для Каждого ТекСтрока Из ДокументСсылка.ПрочиеАгрегаты Цикл
		НоваяСтрока = тблАгрегатыТС.Добавить();
		НоваяСтрока.Регистратор       = ДокументСсылка;
		НоваяСтрока.Период            = ДокументСсылка.Дата;
		НоваяСтрока.СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
		НоваяСтрока.ТС                = ТекСтрока.ТС;
		НоваяСтрока.СостояниеАгрегата = Перечисления.уатСостоянияАгрегатов.УстановленоВРаботе;
	КонецЦикла;
	
	//управляемая блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.уатАгрегатыТС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = тблАгрегатыТС;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СерияНоменклатуры", "СерияНоменклатуры");
	Блокировка.Заблокировать();

	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаАгрегатовТС", тблАгрегатыТС);
КонецПроцедуры // СформироватьТаблицуАгрегатыТС()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицуОстаткиАгрегатов(ДокументСсылка, СтруктураДополнительныеСвойства)
	тблОстаткиАгрегатов = Новый ТаблицаЗначений;
	тблОстаткиАгрегатов.Колонки.Добавить("Регистратор");
	тблОстаткиАгрегатов.Колонки.Добавить("Период");
	тблОстаткиАгрегатов.Колонки.Добавить("Склад");
	тблОстаткиАгрегатов.Колонки.Добавить("СерияНоменклатуры");
	тблОстаткиАгрегатов.Колонки.Добавить("Количество");
	
	Для Каждого ТекСтрока Из ДокументСсылка.Шины Цикл
		НоваяСтрока = тблОстаткиАгрегатов.Добавить();
		НоваяСтрока.Регистратор = ДокументСсылка;
		НоваяСтрока.Период = ДокументСсылка.Дата;
		НоваяСтрока.СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
		НоваяСтрока.Склад = ДокументСсылка.Склад;
		НоваяСтрока.Количество = 1;
	КонецЦикла;
	Для Каждого ТекСтрока Из ДокументСсылка.Аккумуляторы Цикл
		НоваяСтрока = тблОстаткиАгрегатов.Добавить();
		НоваяСтрока.Регистратор = ДокументСсылка;
		НоваяСтрока.Период = ДокументСсылка.Дата;
		НоваяСтрока.СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
		НоваяСтрока.Склад = ДокументСсылка.Склад;
		НоваяСтрока.Количество = 1;
	КонецЦикла;
	Для Каждого ТекСтрока Из ДокументСсылка.ПрочиеАгрегаты Цикл
		НоваяСтрока = тблОстаткиАгрегатов.Добавить();
		НоваяСтрока.Регистратор       = ДокументСсылка;
		НоваяСтрока.Период            = ДокументСсылка.Дата;
		НоваяСтрока.СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
		НоваяСтрока.Склад             = ДокументСсылка.Склад;
		НоваяСтрока.Количество        = 1;
	КонецЦикла;
	
	//управляемая блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатОстаткиАгрегатов");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = тблОстаткиАгрегатов;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СерияНоменклатуры", "СерияНоменклатуры");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	Блокировка.Заблокировать();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОстатковАгрегатов", тблОстаткиАгрегатов);
КонецПроцедуры // СформироватьТаблицуОстаткиАгрегатов()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицуИзносПробегШин(ДокументСсылка, СтруктураДополнительныеСвойства)
	тблИзносПробегШин = Новый ТаблицаЗначений;
	тблИзносПробегШин.Колонки.Добавить("Регистратор");
	тблИзносПробегШин.Колонки.Добавить("Период");
	тблИзносПробегШин.Колонки.Добавить("ТС");
	тблИзносПробегШин.Колонки.Добавить("СерияНоменклатуры");
	тблИзносПробегШин.Колонки.Добавить("Организация");
	тблИзносПробегШин.Колонки.Добавить("Пробег");
	тблИзносПробегШин.Колонки.Добавить("Износ");
	
	Для Каждого ТекСтрока Из ДокументСсылка.Шины Цикл
		Если ТекСтрока.Пробег = 0 И ТекСтрока.Износ = 0 Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = тблИзносПробегШин.Добавить();
		НоваяСтрока.Регистратор = ДокументСсылка;
		НоваяСтрока.Период = ДокументСсылка.Дата;
		НоваяСтрока.ТС = ТекСтрока.ТС;
		НоваяСтрока.СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
		НоваяСтрока.Организация = ДокументСсылка.Организация;
		НоваяСтрока.Износ = ТекСтрока.Износ;
		НоваяСтрока.Пробег = ТекСтрока.Пробег;
	КонецЦикла;
	
	//управляемая блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатИзносПробегШин");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = тблИзносПробегШин;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ТС", "ТС");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СерияНоменклатуры", "СерияНоменклатуры");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
	Блокировка.Заблокировать();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаИзносаПробегаШин", тблИзносПробегШин);
КонецПроцедуры // СформироватьТаблицуИзносПробегШин()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ДокументСсылка);
	
	Если НЕ УдалениеПроведения Тогда
		мЗапрос = Новый Запрос;
		мЗапрос.Текст = 
		"ВЫБРАТЬ
		|	уатВводНачальныхДанныхПоАгрегатам.СерияНоменклатуры,
		|	уатВводНачальныхДанныхПоАгрегатам.ТС,
		|	уатВводНачальныхДанныхПоАгрегатам.МестоУстановки,
		|	уатВводНачальныхДанныхПоАгрегатам.Состояние
		|ПОМЕСТИТЬ АгрегатыДокумента
		|ИЗ
		|	Документ.уатВводНачальныхДанныхПоАгрегатам.Шины КАК уатВводНачальныхДанныхПоАгрегатам
		|ГДЕ
		|	уатВводНачальныхДанныхПоАгрегатам.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	уатВводНачальныхДанныхПоАгрегатам.СерияНоменклатуры,
		|	уатВводНачальныхДанныхПоАгрегатам.ТС,
		|	NULL,
		|	уатВводНачальныхДанныхПоАгрегатам.Состояние
		|ИЗ
		|	Документ.уатВводНачальныхДанныхПоАгрегатам.Аккумуляторы КАК уатВводНачальныхДанныхПоАгрегатам
		|ГДЕ
		|	уатВводНачальныхДанныхПоАгрегатам.Ссылка = &Ссылка
		|		
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	уатВводНачальныхДанныхПоАгрегатам.СерияНоменклатуры,
		|	уатВводНачальныхДанныхПоАгрегатам.ТС,
		|	NULL,
		|	ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе)
		|ИЗ
		|	Документ.уатВводНачальныхДанныхПоАгрегатам.ПрочиеАгрегаты КАК уатВводНачальныхДанныхПоАгрегатам
		|ГДЕ
		|	уатВводНачальныхДанныхПоАгрегатам.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АгрегатыДокумента.СерияНоменклатуры,
		|	уатОстаткиАгрегатовОстатки.Склад,
		|	уатАгрегатыТССрезПоследних.ТС,
		|	уатАгрегатыТССрезПоследних.МестоУстановки
		|ИЗ
		|	АгрегатыДокумента КАК АгрегатыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.уатОстаткиАгрегатов.Остатки(&МоментВремени, ) КАК уатОстаткиАгрегатовОстатки
		|		ПО АгрегатыДокумента.СерияНоменклатуры = уатОстаткиАгрегатовОстатки.СерияНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатАгрегатыТС.СрезПоследних(&МоментВремени, ) КАК уатАгрегатыТССрезПоследних
		|		ПО АгрегатыДокумента.СерияНоменклатуры = уатАгрегатыТССрезПоследних.СерияНоменклатуры
		|ГДЕ
		|	(НЕ уатОстаткиАгрегатовОстатки.Склад ЕСТЬ NULL 
		|			ИЛИ НЕ уатАгрегатыТССрезПоследних.СерияНоменклатуры ЕСТЬ NULL )
		|	И уатАгрегатыТССрезПоследних.СостояниеАгрегата <> ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.Снято)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АгрегатыДокумента.СерияНоменклатуры,
		|	уатАгрегатыТССрезПоследних.СерияНоменклатуры КАК СерияНоменклатурыСрез,
		|	уатАгрегатыТССрезПоследних.ТС,
		|	уатАгрегатыТССрезПоследних.МестоУстановки,
		|	уатАгрегатыТССрезПоследних.СостояниеАгрегата
		|ИЗ
		|	АгрегатыДокумента КАК АгрегатыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатАгрегатыТС.СрезПоследних(&МоментВремени, ) КАК уатАгрегатыТССрезПоследних
		|		ПО АгрегатыДокумента.ТС = уатАгрегатыТССрезПоследних.ТС
		|			И (ЕСТЬNULL(АгрегатыДокумента.МестоУстановки, ЗНАЧЕНИЕ(Справочник.уатМестаУстановкиШин.ПустаяСсылка)) = уатАгрегатыТССрезПоследних.МестоУстановки)
		|			И АгрегатыДокумента.СерияНоменклатуры.ТипАгрегата = уатАгрегатыТССрезПоследних.СерияНоменклатуры.ТипАгрегата
		|			И АгрегатыДокумента.СерияНоменклатуры <> уатАгрегатыТССрезПоследних.СерияНоменклатуры
		|ГДЕ
		|	НЕ уатАгрегатыТССрезПоследних.СерияНоменклатуры ЕСТЬ NULL 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АгрегатыДокумента.СерияНоменклатуры КАК СерияНоменклатуры
		|ИЗ
		|	АгрегатыДокумента КАК АгрегатыДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			уатАгрегатыТС.СерияНоменклатуры КАК СерияНоменклатуры
		|		ИЗ
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				уатАгрегатыТС.СерияНоменклатуры КАК СерияНоменклатуры
		|			ИЗ
		|				РегистрСведений.уатАгрегатыТС КАК уатАгрегатыТС
		|			ГДЕ
		|				уатАгрегатыТС.Период < &ДатаСреза
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				уатОстаткиАгрегатовОбороты.СерияНоменклатуры
		|			ИЗ
		|				РегистрНакопления.уатОстаткиАгрегатов.Обороты(, &МоментВремени, , ) КАК уатОстаткиАгрегатовОбороты) КАК уатАгрегатыТС) КАК тблВлож
		|		ПО АгрегатыДокумента.СерияНоменклатуры = тблВлож.СерияНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	АгрегатыДокумента.СерияНоменклатуры";
		
		мЗапрос.УстановитьПараметр("Ссылка", ДокументСсылка);
		мЗапрос.УстановитьПараметр("МоментВремени", Новый Граница(ДокументСсылка.Дата, ВидГраницы.Исключая));
		мЗапрос.УстановитьПараметр("ДатаСреза", ДокументСсылка.Дата);
		
		МассивРезультатов = мЗапрос.ВыполнитьПакет();
		
		//запрещаем ввод остатков, если агрегат уже назначался на какое-либо ТС или уже был на складе
		Если НЕ Отказ Тогда
			ВыборкаКонтроля = МассивРезультатов[3].Выбрать();
			Пока ВыборкаКонтроля.Следующий() Цикл
				Если ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина Тогда
					ТекстСообщения = "По шине """ + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + """ уже выполнялись следующие операции: установка на ТС, снятие с ТС, складские операции";
				ИначеЕсли ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор Тогда
					ТекстСообщения = "По аккумулятору """ + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + """ уже выполнялись следующие операции: установка на ТС, снятие с ТС, складские операции";
				Иначе
					ТекстСообщения = "По агрегату """ + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + " (" + ВыборкаКонтроля.СерияНоменклатуры + ")"" уже выполнялись следующие операции: установка на ТС, снятие с ТС, складские операции";			
				КонецЕсли;
				
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);
			КонецЦикла;
		КонецЕсли;
		
		//проверка на повторное поступление агрегата на склад или повторную установку агрегата на тоже самое ТС
		Если НЕ Отказ Тогда
			ВыборкаКонтроля = МассивРезультатов[1].Выбрать();
			Пока ВыборкаКонтроля.Следующий() Цикл
				НаименованиеАгрегата = "";
				Если ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор тогда
					ТекстСообщения = "Аккумулятор ";
				ИначеЕсли ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина тогда
					ТекстСообщения = "Шина ";
				Иначе
					ТекстСообщения = "Агрегат ";
					НаименованиеАгрегата = " (" + ВыборкаКонтроля.СерияНоменклатуры + ")";
				КонецЕсли;
				
				Если ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийВводОстатковПоАгрегатам.ВводОстатковПоСкладу И ЗначениеЗаполнено(ВыборкаКонтроля.Склад) Тогда
					ТекстСообщения = ТекстСообщения + """" + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + НаименованиеАгрегата + """ уже имеется на складе """ + ВыборкаКонтроля.Склад + """";	
					ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Отказ,Заголовок);	
					
				ИначеЕсли ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийВводОстатковПоАгрегатам.УстановкаНаТС И ЗначениеЗаполнено(ВыборкаКонтроля.ТС) Тогда
					ТекстСообщения = ТекстСообщения + """" + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + НаименованиеАгрегата + """ уже установлен";
					Если ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина тогда
						ТекстСообщения = ТекстСообщения + "а";	
					КонецЕсли;
					ТекстСообщения = ТекстСообщения + " на транспортном средстве """
					+ уатОбщегоНазначения.уатПредставлениеТС(ВыборкаКонтроля.ТС, ДокументСсылка.Организация) + """";
					ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Отказ,Заголовок);	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		//проверка на установку агрегата на уже занятое место установки
		//здесь просто сообщаем об этом, но не отменяем проведение
		Если НЕ Отказ Тогда
			ВыборкаКонтроля = МассивРезультатов[2].Выбрать();
			Пока ВыборкаКонтроля.Следующий() Цикл
				Если ВыборкаКонтроля.СостояниеАгрегата = Перечисления.уатСостоянияАгрегатов.Снято
					ИЛИ (ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата <> Справочники.уатТипыАгрегатов.Шина
					И ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата <> Справочники.уатТипыАгрегатов.Аккумулятор) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина Тогда
					ТекстСообщения = "Шина """ + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + """: установлена на место """
					+ СокрЛП(ВыборкаКонтроля.МестоУстановки) + """, уже занятое шиной """ + ВыборкаКонтроля.СерияНоменклатурыСрез.СерийныйНомер + """, ТС """
					+ уатОбщегоНазначения.уатПредставлениеТС(ВыборкаКонтроля.ТС, ДокументСсылка.Организация) + """ !";
				ИначеЕсли ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор Тогда
					ТекстСообщения = "Аккумулятор """ + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + """: установлен на ТС """
					+ уатОбщегоНазначения.уатПредставлениеТС(ВыборкаКонтроля.ТС, ДокументСсылка.Организация)
					+ """, уже занятое аккумулятором """ + ВыборкаКонтроля.СерияНоменклатурыСрез.СерийныйНомер + """ !";
				КонецЕсли;
				
				Сообщить(ТекстСообщения, СтатусСообщения.Информация);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
