
// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	мЗапросВремТаб = Новый Запрос;
	Если ДокументСсылка.СпособРемонта = Перечисления.уатСпособыРемонта.Автосервис тогда
		мЗапросВремТаб.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Регистратор,
		|	ТаблицаДокумента.Ссылка.ДатаОкончания КАК Период,
		|	ТаблицаДокумента.Ссылка.Контрагент КАК Склад,
		|	ТаблицаДокумента.Ссылка.ТС КАК ТС,
		|	ТаблицаДокумента.Номенклатура,
		|	""_КОЛИЧЕСТВО_"" КАК Количество
		|ПОМЕСТИТЬ ТаблицаДокументаМатериалы
		|ИЗ
		|	Документ.уатРемонтныйЛист.Материалы КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
		Если уатРаботаСМетаданными.естьСпрЕдиницыИзмерения() тогда
			СтрокаРасчетаКоличества = "ВЫРАЗИТЬ(ТаблицаДокумента.Количество * ТаблицаДокумента.ЕдиницаИзмерения.Коэффициент / ТаблицаДокумента.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)) ";
			мЗапросВремТаб.Текст = стрЗаменить(мЗапросВремТаб.Текст,"""_КОЛИЧЕСТВО_""",СтрокаРасчетаКоличества);	
		Иначе
			мЗапросВремТаб.Текст = стрЗаменить(мЗапросВремТаб.Текст,"""_КОЛИЧЕСТВО_""","ТаблицаДокумента.Количество ");	
		КонецЕсли;

	Иначе
		мЗапросВремТаб.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Регистратор,
		|	ТаблицаДокумента.Ссылка.ДатаОкончания КАК Период,
		|	ТаблицаДокумента.Ссылка.Контрагент КАК Склад,
		|	ТаблицаДокумента.Ссылка.ТС КАК ТС,
		|	ТаблицаДокумента.Номенклатура,
		|	МИНИМУМ(""_КОЛИЧЕСТВО_"") КАК Количество
		|ПОМЕСТИТЬ ТаблицаДокументаМатериалы
		|ИЗ
		|	Документ.уатРемонтныйЛист.Материалы КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.Ссылка.ДатаОкончания,
		|	ТаблицаДокумента.Ссылка.Контрагент,
		|	ТаблицаДокумента.Ссылка.ТС,
		|	ТаблицаДокумента.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
		Если уатРаботаСМетаданными.естьСпрЕдиницыИзмерения() тогда
			СтрокаРасчетаКоличества = "СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Количество * ТаблицаДокумента.ЕдиницаИзмерения.Коэффициент / ТаблицаДокумента.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3))) ";
			мЗапросВремТаб.Текст = стрЗаменить(мЗапросВремТаб.Текст,"МИНИМУМ(""_КОЛИЧЕСТВО_"")",СтрокаРасчетаКоличества);	
		Иначе
			мЗапросВремТаб.Текст = стрЗаменить(мЗапросВремТаб.Текст,"МИНИМУМ(""_КОЛИЧЕСТВО_"")","СУММА(ТаблицаДокумента.Количество) ");	
		КонецЕсли;

	КонецЕсли;
	мЗапросВремТаб.Текст = мЗапросВремТаб.Текст + "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Регистратор,
	|	ТаблицаДокумента.Ссылка.ДатаОкончания КАК Период,
	|	ТаблицаДокумента.Ссылка.Контрагент КАК Склад,
	|	ТаблицаДокумента.Ссылка.ТС КАК ТС,
	|	ТаблицаДокумента.Работа,
	|	ТаблицаДокумента.Количество
	|ПОМЕСТИТЬ ТаблицаДокументаРаботы
	|ИЗ
	|	Документ.уатРемонтныйЛист.Работы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Регистратор,
	|	ТаблицаДокумента.Ссылка.ДатаОкончания КАК Период,
	|	ТаблицаДокумента.Ссылка.ТС КАК ТС,
	|	ТаблицаДокумента.Ссылка.СкладОтправитель КАК СкладОтправитель,
	|	ТаблицаДокумента.Ссылка.СкладПолучатель КАК СкладПолучатель,
	|	ТаблицаДокумента.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ТаблицаДокумента.Состояние КАК Состояние,
	|	ТаблицаДокумента.МестоУстановки КАК МестоУстановки
	|ПОМЕСТИТЬ ТаблицаДокументаШины
	|ИЗ
	|	Документ.уатРемонтныйЛист.Шины КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Регистратор,
	|	ТаблицаДокумента.Ссылка.ДатаОкончания КАК Период,
	|	ТаблицаДокумента.Ссылка.ТС КАК ТС,
	|	ТаблицаДокумента.Ссылка.СкладОтправитель КАК СкладОтправитель,
	|	ТаблицаДокумента.Ссылка.СкладПолучатель КАК СкладПолучатель,
	|	ТаблицаДокумента.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ТаблицаДокумента.Состояние КАК Состояние
	|ПОМЕСТИТЬ ТаблицаДокументаАккумуляторы
	|ИЗ
	|	Документ.уатРемонтныйЛист.Аккумуляторы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Регистратор,
	|	ТаблицаДокумента.Ссылка.ДатаОкончания КАК Период,
	|	ТаблицаДокумента.Ссылка.ТС КАК ТС,
	|	ТаблицаДокумента.Ссылка.СкладОтправитель КАК СкладОтправитель,
	|	ТаблицаДокумента.Ссылка.СкладПолучатель КАК СкладПолучатель,
	|	ТаблицаДокумента.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ТаблицаДокумента.Состояние КАК Состояние
	|ПОМЕСТИТЬ ТаблицаДокументаПрочиеАгрегаты
	|ИЗ
	|	Документ.уатРемонтныйЛист.ПрочиеАгрегаты КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	уатАгрегатыТССрезПоследних.СерияНоменклатуры,
	|	уатАгрегатыТССрезПоследних.ТС,
	|	уатАгрегатыТССрезПоследних.СостояниеАгрегата,
	|	уатАгрегатыТССрезПоследних.МестоУстановки
	|ПОМЕСТИТЬ АгрегатыНаТС
	|ИЗ
	|	РегистрСведений.уатАгрегатыТС.СрезПоследних(&МоментВремени, ТС = &ТС) КАК уатАгрегатыТССрезПоследних
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	РегистрСведений.уатАгрегатыТС.СрезПоследних
	|";
	
	
	мЗапросВремТаб.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	мЗапросВремТаб.УстановитьПараметр("Ссылка"       , ДокументСсылка);
	мЗапросВремТаб.УстановитьПараметр("МоментВремени", СтруктураДополнительныеСвойства.ДляПроведения.МоментКонтроля);
	мЗапросВремТаб.УстановитьПараметр("ТС"           , ДокументСсылка.ТС);
	мЗапросВремТаб.ВыполнитьПакет();
	
	
	мЗапрос = Новый Запрос;
	мЗапрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	мзапрос.Текст = "
	|ВЫБРАТЬ
	|	""0 - ТаблицаАгрегатовТС"" КАК СлужебноеПолеИмяТаблицы,
	|	ТаблицаДокументаШины.Регистратор,
	|	ТаблицаДокументаШины.Период,
	|	ТаблицаДокументаШины.СерияНоменклатуры,
	|	ТаблицаДокументаШины.ТС КАК ТС,
	|	ТаблицаДокументаШины.Состояние КАК СостояниеАгрегата,
	|	ТаблицаДокументаШины.МестоУстановки
	|ИЗ
	|	ТаблицаДокументаШины КАК ТаблицаДокументаШины
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""0 - ТаблицаАгрегатовТС"",
	|	ТаблицаДокументаАккумуляторы.Регистратор,
	|	ТаблицаДокументаАккумуляторы.Период,
	|	ТаблицаДокументаАккумуляторы.СерияНоменклатуры,
	|	ТаблицаДокументаАккумуляторы.ТС,
	|	ТаблицаДокументаАккумуляторы.Состояние,
	|	NULL
	|ИЗ
	|	ТаблицаДокументаАккумуляторы КАК ТаблицаДокументаАккумуляторы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""0 - ТаблицаАгрегатовТС"",
	|	ТаблицаДокументаПрочиеАгрегаты.Регистратор,
	|	ТаблицаДокументаПрочиеАгрегаты.Период,
	|	ТаблицаДокументаПрочиеАгрегаты.СерияНоменклатуры,
	|	ТаблицаДокументаПрочиеАгрегаты.ТС,
	|	ТаблицаДокументаПрочиеАгрегаты.Состояние,
	|	NULL
	|ИЗ
	|	ТаблицаДокументаПрочиеАгрегаты КАК ТаблицаДокументаПрочиеАгрегаты
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""1 - ТаблицаОстатковАгрегатов"" КАК СлужебноеПолеИмяТаблицы,
	|	ТаблицаДокументаШины.Регистратор,
	|	ТаблицаДокументаШины.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокументаШины.СерияНоменклатуры,
	|	ТаблицаДокументаШины.СкладПолучатель КАК Склад,
	|	1 КАК Количество
	|ИЗ
	|	ТаблицаДокументаШины КАК ТаблицаДокументаШины
	|ГДЕ
	|	ТаблицаДокументаШины.Состояние = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.Снято)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""1 - ТаблицаОстатковАгрегатов"",
	|	ТаблицаДокументаАккумуляторы.Регистратор,
	|	ТаблицаДокументаАккумуляторы.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаДокументаАккумуляторы.СерияНоменклатуры,
	|	ТаблицаДокументаАккумуляторы.СкладПолучатель,
	|	1
	|ИЗ
	|	ТаблицаДокументаАккумуляторы КАК ТаблицаДокументаАккумуляторы
	|ГДЕ
	|	ТаблицаДокументаАккумуляторы.Состояние = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.Снято)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""1 - ТаблицаОстатковАгрегатов"",
	|	ТаблицаДокументаПрочиеАгрегаты.Регистратор,
	|	ТаблицаДокументаПрочиеАгрегаты.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаДокументаПрочиеАгрегаты.СерияНоменклатуры,
	|	ТаблицаДокументаПрочиеАгрегаты.СкладПолучатель,
	|	1
	|ИЗ
	|	ТаблицаДокументаПрочиеАгрегаты КАК ТаблицаДокументаПрочиеАгрегаты
	|ГДЕ
	|	ТаблицаДокументаПрочиеАгрегаты.Состояние = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.Снято)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""1 - ТаблицаОстатковАгрегатов"",
	|	ТаблицаДокументаШины.Регистратор,
	|	ТаблицаДокументаШины.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаДокументаШины.СерияНоменклатуры,
	|	ТаблицаДокументаШины.СкладОтправитель,
	|	1
	|ИЗ
	|	ТаблицаДокументаШины КАК ТаблицаДокументаШины
	|	
	|ГДЕ
	|	ТаблицаДокументаШины.Состояние = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.УстановленоВЗапас)
	|			ИЛИ ТаблицаДокументаШины.Состояние = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""1 - ТаблицаОстатковАгрегатов"",
	|	ТаблицаДокументаАккумуляторы.Регистратор,
	|	ТаблицаДокументаАккумуляторы.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаДокументаАккумуляторы.СерияНоменклатуры,
	|	ТаблицаДокументаАккумуляторы.СкладОтправитель,
	|	1
	|ИЗ
	|	ТаблицаДокументаАккумуляторы КАК ТаблицаДокументаАккумуляторы
	|ГДЕ
	|	ТаблицаДокументаАккумуляторы.Состояние = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""1 - ТаблицаОстатковАгрегатов"",
	|	ТаблицаДокументаПрочиеАгрегаты.Регистратор,
	|	ТаблицаДокументаПрочиеАгрегаты.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаДокументаПрочиеАгрегаты.СерияНоменклатуры,
	|	ТаблицаДокументаПрочиеАгрегаты.СкладОтправитель,
	|	1
	|ИЗ
	|	ТаблицаДокументаПрочиеАгрегаты КАК ТаблицаДокументаПрочиеАгрегаты
	|ГДЕ
	|	ТаблицаДокументаПрочиеАгрегаты.Состояние = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе)
	|;
	|";
	
	МассивРезультатов = мЗапрос.ВыполнитьПакет();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатОстаткиАгрегатов");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = МассивРезультатов[1];
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад"            , "Склад");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СерияНоменклатуры", "СерияНоменклатуры");
	Блокировка.Заблокировать();

	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаАгрегатовТС"      , МассивРезультатов[0].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОстатковАгрегатов", МассивРезультатов[1].Выгрузить());

	мЗапрос.Текст = 
	"ВЫБРАТЬ
	|	""0 - ТаблицаСчетчиковТС"" КАК СлужебноеПолеИмяТаблицы,
	|	уатРемонтныйЛист.Ссылка КАК Регистратор,
	|	уатРемонтныйЛист.ДатаОкончания КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.уатТипыСчетчиковТС.Спидометр) КАК ТипСчетчика,
	|	уатРемонтныйЛист.ПоказанияСпидометра КАК Значение,
	|	уатРемонтныйЛист.ТС
	|ИЗ
	|	Документ.уатРемонтныйЛист КАК уатРемонтныйЛист
	|ГДЕ
	|	уатРемонтныйЛист.Ссылка = &Ссылка
	|	И уатРемонтныйЛист.СпидометрИзменен = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""0 - ТаблицаСчетчиковТС"",
	|	уатРемонтныйЛист.Ссылка,
	|	уатРемонтныйЛист.ДатаОкончания,
	|	ЗНАЧЕНИЕ(Перечисление.уатТипыСчетчиковТС.СчетчикМЧ),
	|	0 ПоказанияСчетчикаМЧ,
	|	уатРемонтныйЛист.ТС
	|ИЗ
	|	Документ.уатРемонтныйЛист КАК уатРемонтныйЛист
	|ГДЕ
	|	уатРемонтныйЛист.Ссылка = &Ссылка
	|	И уатРемонтныйЛист.СчетчикМЧИзменен = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""1 - ТаблицаПрохожденияТО"" КАК СлужебноеПолеИмяТаблицы,
	|	уатРемонтныйЛист.Ссылка КАК Регистратор,
	|	уатРемонтныйЛист.ДатаОкончания КАК Период,
	|	уатРемонтныйЛист.ТС,
	|	спрВО.ссылка КАК ВидТО,
	|	уатРемонтныйЛист.ПараметрВыработки,
	|	ВЫБОР
	|		КОГДА уатРемонтныйЛист.ПараметрВыработки.Временный
	|			ТОГДА уатРемонтныйЛист.ВыработкаПриТО * 3600
	|		ИНАЧЕ уатРемонтныйЛист.ВыработкаПриТО
	|	КОНЕЦ КАК Выработка
	|ИЗ
	|	Документ.уатРемонтныйЛист КАК уатРемонтныйЛист
	|INNER JOIN Справочник.уатВидыОбслуживанияТС спрВО ON спрВО.ссылка = ВидОбслуживания.Ссылка 
	|                                                  или спрВО.ссылка = ВидОбслуживания.СовмещаемыйВО
	|                                                  или спрВО.ссылка = ВидОбслуживания.СовмещаемыйВО.СовмещаемыйВО
	|ГДЕ
	|	уатРемонтныйЛист.Ссылка = &Ссылка
	|	И уатРемонтныйЛист.ВидОбслуживания.ИспользоватьВПланированииТО = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""1 - ТаблицаПрохожденияТО"",
	|	уатРемонтныйЛист.Ссылка,
	|	уатРемонтныйЛист.ДатаОкончания,
	|	уатРемонтныйЛист.ТС,
	|	спрВО.ссылка КАК ВидТО,
	|	уатРемонтныйЛист.ПараметрВыработки2,
	|	ВЫБОР
	|		КОГДА уатРемонтныйЛист.ПараметрВыработки2.Временный
	|			ТОГДА уатРемонтныйЛист.ВыработкаПриТО2 * 3600
	|		ИНАЧЕ уатРемонтныйЛист.ВыработкаПриТО2
	|	КОНЕЦ
	|ИЗ
	|	Документ.уатРемонтныйЛист КАК уатРемонтныйЛист
	|INNER JOIN Справочник.уатВидыОбслуживанияТС спрВО ON спрВО.ссылка = ВидОбслуживания2.Ссылка 
	|                                                  или спрВО.ссылка = ВидОбслуживания2.СовмещаемыйВО
	|                                                  или спрВО.ссылка = ВидОбслуживания2.СовмещаемыйВО.СовмещаемыйВО
	|ГДЕ
	|	уатРемонтныйЛист.Ссылка = &Ссылка
	|	И уатРемонтныйЛист.ВидОбслуживания.ИспользоватьВПланированииТО = ИСТИНА
	//|	И уатРемонтныйЛист.ВыработкаПриТО2 <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""1 - ТаблицаПрохожденияТО"",
	|	уатРемонтныйЛист.Ссылка,
	|	уатРемонтныйЛист.ДатаОкончания,
	|	уатРемонтныйЛист.ТС,
	|	спрВО.ссылка КАК ВидТО,
	|	уатРемонтныйЛист.ПараметрВыработки3,
	|	ВЫБОР
	|		КОГДА уатРемонтныйЛист.ПараметрВыработки3.Временный
	|			ТОГДА уатРемонтныйЛист.ВыработкаПриТО3 * 3600
	|		ИНАЧЕ уатРемонтныйЛист.ВыработкаПриТО3
	|	КОНЕЦ
	|ИЗ
	|	Документ.уатРемонтныйЛист КАК уатРемонтныйЛист
	|INNER JOIN Справочник.уатВидыОбслуживанияТС спрВО ON спрВО.ссылка = ВидОбслуживания3.Ссылка 
	|                                                  или спрВО.ссылка = ВидОбслуживания3.СовмещаемыйВО
	|                                                  или спрВО.ссылка = ВидОбслуживания3.СовмещаемыйВО.СовмещаемыйВО
	|ГДЕ
	|	уатРемонтныйЛист.Ссылка = &Ссылка
	|	И уатРемонтныйЛист.ВидОбслуживания.ИспользоватьВПланированииТО = ИСТИНА
	//|	И уатРемонтныйЛист.ВыработкаПриТО3 <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""2 - ТаблицаСостоянийТС"" КАК СлужебноеПолеИмяТаблицы,
	|	уатРемонтныйЛист.Ссылка КАК Регистратор,
	|	уатРемонтныйЛист.ДатаНачала КАК Период,
	|	уатРемонтныйЛист.ТС,
	|	уатРемонтныйЛист.ДатаОкончания КАК ДатаОкончания,
	|	ВЫБОР
	|		КОГДА уатРемонтныйЛист.ВидОбслуживания.ВидОбслуживанияТС = ЗНАЧЕНИЕ(Перечисление.уатВидыОбслуживания.ТекущийРемонт)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.уатСостояниеТС.НаТекущемРемонте)
	|		КОГДА уатРемонтныйЛист.ВидОбслуживания.ВидОбслуживанияТС = ЗНАЧЕНИЕ(Перечисление.уатВидыОбслуживания.СреднийРемонт)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.уатСостояниеТС.НаСреднемРемонте)
	|		КОГДА уатРемонтныйЛист.ВидОбслуживания.ВидОбслуживанияТС = ЗНАЧЕНИЕ(Перечисление.уатВидыОбслуживания.КапитальныйРемонт)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.уатСостояниеТС.НаКапитальномРемонте)
	|		КОГДА уатРемонтныйЛист.ВидОбслуживания.ВидОбслуживанияТС = ЗНАЧЕНИЕ(Перечисление.уатВидыОбслуживания.Дооборудование)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.уатСостояниеТС.НаТекущемРемонте)
	|		КОГДА уатРемонтныйЛист.ВидОбслуживания.ВидОбслуживанияТС = ЗНАЧЕНИЕ(Перечисление.уатВидыОбслуживания.Модернизация)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.уатСостояниеТС.НаТекущемРемонте)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.уатСостояниеТС.НаТекущемРемонте)
	|	КОНЕЦ КАК Состояние,
	|	ВЫБОР
	|		КОГДА уатРемонтныйЛист.СпособРемонта = ЗНАЧЕНИЕ(Перечисление.уатСпособыРемонта.Автосервис)
	|			ТОГДА уатРемонтныйЛист.Контрагент.Наименование
	|		ИНАЧЕ ""Рем. зона""
	|	КОНЕЦ КАК Местоположение
	|ИЗ
	|	Документ.уатРемонтныйЛист КАК уатРемонтныйЛист
	|ГДЕ
	|	уатРемонтныйЛист.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""3 - ТаблицаРабочегоВремени"" КАК СлужебноеПолеИмяТаблицы,
	|	уатРемонтныйЛистИсполнители.Ссылка.ДатаОкончания КАК Период,
	|	уатРемонтныйЛистИсполнители.Ссылка КАК Регистратор,
	|	уатРемонтныйЛистИсполнители.Сотрудник,
	|	уатРемонтныйЛистИсполнители.Ссылка.Организация,
	|	ЗНАЧЕНИЕ(Справочник.уатКлассификаторИспользованияРабочегоВремени.Ремонт) КАК ВидИспользованияРабочегоВремени,
	|	уатРемонтныйЛистИсполнители.Начало КАК ДатаРаботы,
	|	1 КАК Дней,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(уатРемонтныйЛистИсполнители.ВремяРаботы, ДЕНЬ), уатРемонтныйЛистИсполнители.ВремяРаботы, СЕКУНДА) КАК Время
	|ИЗ
	|	Документ.уатРемонтныйЛист.Исполнители КАК уатРемонтныйЛистИсполнители
	|ГДЕ
	|	уатРемонтныйЛистИсполнители.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""4 - ТаблицаОсновныхНачислений"" КАК СлужебноеПолеИмяТаблицы,
	|	уатРемонтныйЛистЗарплата.Ссылка КАК Регистратор,
	|	уатРемонтныйЛистЗарплата.Ссылка.ДатаОкончания КАК Период,
	|	ЛОЖЬ КАК Сторно,
	|	уатРемонтныйЛистЗарплата.ВидНачисления КАК ВидРасчета,
	|	уатРемонтныйЛистЗарплата.Ссылка.Дата КАК ПериодРегистрации,
	|	уатРемонтныйЛистЗарплата.Ссылка.Дата КАК БазовыйПериодНачало,
	|	уатРемонтныйЛистЗарплата.Ссылка.Дата КАК БазовыйПериодКонец,
	|	уатРемонтныйЛистЗарплата.Сотрудник,
	|	уатРемонтныйЛистЗарплата.Сумма КАК Результат,
	|	уатРемонтныйЛистЗарплата.Ссылка.Организация КАК Организация
	|ИЗ
	|	Документ.уатРемонтныйЛист.Зарплата КАК уатРемонтныйЛистЗарплата
	|ГДЕ
	|	уатРемонтныйЛистЗарплата.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""5 - ТаблицаВыработкаТС"" КАК СлужебноеПолеИмяТаблицы,
	|	уатРемонтныйЛист.Ссылка КАК Регистратор,
	|	уатРемонтныйЛист.ДатаОкончания КАК Период,
	|	ЛОЖЬ КАК Сторно,
	|	уатРемонтныйЛист.ТС КАК ТС,
	|	ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяВРемонте) КАК ПараметрВыработки,
	|	РАЗНОСТЬДАТ(уатРемонтныйЛист.ДатаНачала, ВЫБОР КОГДА уатРемонтныйЛист.ДатаОкончания = &ПустаяДата ТОГДА уатРемонтныйЛист.ДатаНачала ИНАЧЕ уатРемонтныйЛист.ДатаОкончания КОНЕЦ, СЕКУНДА) КАК Количество,
	|	уатРемонтныйЛист.Организация КАК Организация,
	|	уатРемонтныйЛист.Подразделение КАК Подразделение,
	|	уатРемонтныйЛист.Контрагент КАК Контрагент,
	|	ЕСТЬNULL(уатМестонахождениеТССрезПоследних.Колонна, уатРемонтныйЛист.ТС.Колонна) КАК Колонна
	|ИЗ
	|	Документ.уатРемонтныйЛист КАК уатРемонтныйЛист
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ДатаСреза) КАК уатМестонахождениеТССрезПоследних
	|ПО
	|	уатРемонтныйЛист.ТС = уатМестонахождениеТССрезПоследних.ТС
	|ГДЕ
	|	уатРемонтныйЛист.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""6 - ТаблицаВыработкаСотрудников"" КАК СлужебноеПолеИмяТаблицы,
	|	уатРемонтныйЛистИсполнители.Ссылка КАК Регистратор,
	|	уатРемонтныйЛистИсполнители.Ссылка.ДатаОкончания КАК Период,
	|	ЛОЖЬ КАК Сторно,
	|	уатРемонтныйЛистИсполнители.Сотрудник КАК Сотрудник,
	|	ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяВРемонте) КАК ПараметрВыработки,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(уатРемонтныйЛистИсполнители.ВремяРаботы, ДЕНЬ), уатРемонтныйЛистИсполнители.ВремяРаботы, СЕКУНДА) КАК Количество,
	|	уатРемонтныйЛистИсполнители.Ссылка.Организация КАК Организация,
	|	уатРемонтныйЛистИсполнители.Ссылка.Подразделение КАК Подразделение,
	|	уатРемонтныйЛистИсполнители.Ссылка.Контрагент КАК Контрагент,
	|	ЕСТЬNULL(уатМестонахождениеТССрезПоследних.Колонна, уатРемонтныйЛистИсполнители.Ссылка.ТС.Колонна) КАК Колонна
	|ИЗ
	|	Документ.уатРемонтныйЛист.Исполнители КАК уатРемонтныйЛистИсполнители
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ДатаСреза) КАК уатМестонахождениеТССрезПоследних
	|ПО
	|	уатРемонтныйЛистИсполнители.Ссылка.ТС = уатМестонахождениеТССрезПоследних.ТС
	|ГДЕ
	|	уатРемонтныйЛистИсполнители.Ссылка = &Ссылка";

	мЗапрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	мЗапрос.УстановитьПараметр("ПустаяДата", '00010101');
	мЗапрос.УстановитьПараметр("ДатаСреза", ДокументСсылка.ДатаОкончания);
	МассивРезультатов = мЗапрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСчетчиковТС", МассивРезультатов[0].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПрохожденияТО", МассивРезультатов[1].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСостоянийТС", МассивРезультатов[2].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРабочегоВремени", МассивРезультатов[3].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОсновныхНачислений", МассивРезультатов[4].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаВыработкиТС", МассивРезультатов[5].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаВыработкиСотрудников", МассивРезультатов[6].Выгрузить());

	Если ДокументСсылка.СпособРемонта = Перечисления.уатСпособыРемонта.Автосервис тогда
		мЗапрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокументаМатериалы.Регистратор,
		|	ТаблицаДокументаМатериалы.Период,
		|	ТаблицаДокументаМатериалы.ТС,
		|	ТаблицаДокументаМатериалы.Номенклатура,
		|	ТаблицаДокументаМатериалы.Количество
		|ИЗ
		|	ТаблицаДокументаМатериалы КАК ТаблицаДокументаМатериалы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДокументаРаботы.Регистратор,
		|	ТаблицаДокументаРаботы.Период,
		|	ТаблицаДокументаРаботы.ТС,
		|	ТаблицаДокументаРаботы.Работа,
		|	ТаблицаДокументаРаботы.Количество
		|ИЗ
		|	ТаблицаДокументаРаботы КАК ТаблицаДокументаРаботы";
		ТаблицаНоменклатураТС = мЗапрос.выполнить().Выгрузить();
		Для Каждого ТекСтрока ИЗ ТаблицаНоменклатураТС Цикл

			Если СтруктураДополнительныеСвойства.ВалютаРеглУчета <> ДокументСсылка.ВалютаДокумента тогда
				ТекСтрока.Стоимость = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Стоимость, ДокументСсылка.ВалютаДокумента, 
			   						СтруктураДополнительныеСвойства.ВалютаРеглУчета,
									ДокументСсылка.КурсВзаиморасчетов, 
									СтруктураДополнительныеСвойства.КурсРегл,
									ДокументСсылка.КратностьВзаиморасчетов,  
									СтруктураДополнительныеСвойства.КратностьРегл);
			КонецЕсли;
			
			Если СтруктураДополнительныеСвойства.Свойство("ВалютаУпрУчета") тогда
				ТекСтрока.СтоимостьУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СтоимостьУпр, ДокументСсылка.ВалютаДокумента,
									СтруктураДополнительныеСвойства.ВалютаУпрУчета, 
									ДокументСсылка.КурсВзаиморасчетов, 
									СтруктураДополнительныеСвойства.КурсУпр,
									ДокументСсылка.КратностьВзаиморасчетов,  
									СтруктураДополнительныеСвойства.КратностьУпр);
			Иначе
				ТекСтрока.СтоимостьУпр = 0;								
			КонецЕсли;	
		КонецЦикла;
		ТаблицаПартииТоваров = Новый ТаблицаЗначений;
	Иначе
		мЗапрос.Текст = " 
		|ВЫБРАТЬ
		|	ТаблицаДокументаМатериалы.Номенклатура,
		|	ТаблицаДокументаМатериалы.Количество,
		|	ТаблицаДокументаМатериалы.Склад,
		|	ТаблицаДокументаМатериалы.Период
		|ИЗ
		|	ТаблицаДокументаМатериалы КАК ТаблицаДокументаМатериалы
		|;
		|////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокументаРаботы.Регистратор,
		|	ТаблицаДокументаРаботы.Период,
		|	ТаблицаДокументаРаботы.Склад,
		|	ТаблицаДокументаРаботы.ТС,
		|	ТаблицаДокументаРаботы.Работа,
		|	ТаблицаДокументаРаботы.Количество
		|ИЗ
		|	ТаблицаДокументаРаботы КАК ТаблицаДокументаРаботы";
		
		МассивРезультатов = мЗапрос.ВыполнитьПакет();
		
		//Блокировка = Новый БлокировкаДанных;
		//ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатПартииТоваровНаСкладах");
		//ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		//ЭлементБлокировки.ИсточникДанных = МассивРезультатов[0];
		//ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		//ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад"       , "Склад");
		//Блокировка.Заблокировать();
		
	//	мМоментВремениПартий = Новый Граница(ДокументСсылка.ДатаОкончания, ВидГраницы.Включая);
	//	ТаблицаПартий = уатПроведение.ПолучитьТаблицуПартийДляСписания(МассивРезультатов[0].Выгрузить(),уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ДокументСсылка.Организация, ПланыВидовХарактеристик.уатПраваИНастройки.СпособОценкиМПЗ), мМоментВремениПартий);
	//
	//	ЗапросПартии = Новый Запрос();
	//	ЗапросПартии.Текст = 
	//	"ВЫБРАТЬ
	//	|	ТабДанных.Склад,
	//	|	ТабДанных.Номенклатура,
	//	|	ТабДанных.Партия,
	//	|	ТабДанных.Количество,
	//	|	ТабДанных.Стоимость,
	//	|	ТабДанных.СтоимостьУпр
	//	|ПОМЕСТИТЬ ВремТаблицаПартий
	//	|ИЗ
	//	|	&ТаблицаПарам КАК ТабДанных
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	//	|	&Период,
	//	|	&Регистратор,
	//	|	&ТС,
	//	|	ТабДанных.Склад КАК Склад,
	//	|	ТабДанных.Партия,
	//	|	ТабДанных.Номенклатура,
	//	|	ТабДанных.Количество,
	//	|	ТабДанных.Стоимость,
	//	|	ТабДанных.СтоимостьУпр
	//	|ИЗ
	//	|	ВремТаблицаПартий КАК ТабДанных
	//	|
	//	|";
	//	
	//	ЗапросПартии.УстановитьПараметр("ТаблицаПарам", ТаблицаПартий);
	//	ЗапросПартии.УстановитьПараметр("Период"      , ДокументСсылка.ДатаОкончания);
	//	ЗапросПартии.УстановитьПараметр("Регистратор" , ДокументСсылка);
	//	ЗапросПартии.УстановитьПараметр("ТС"          , ДокументСсылка.ТС);
	//	ТаблицаПартииТоваров = ЗапросПартии.ВыполнитьПакет()[1].Выгрузить();
		
		ТаблицаНоменклатураТС = Новый ТаблицаЗначений();
		ТаблицаНоменклатураТС.Колонки.Добавить("Регистратор");
		ТаблицаНоменклатураТС.Колонки.Добавить("Период");
		ТаблицаНоменклатураТС.Колонки.Добавить("ТС");
		ТаблицаНоменклатураТС.Колонки.Добавить("Номенклатура");
		ТаблицаНоменклатураТС.Колонки.Добавить("Количество");
		ТаблицаНоменклатураТС.Колонки.Добавить("Стоимость");
		ТаблицаНоменклатураТС.Колонки.Добавить("СтоимостьУпр");
		//Для Каждого ТекСтрока ИЗ ТаблицаПартииТоваров Цикл
		//	НовСТрока = ТаблицаНоменклатураТС.Добавить();
		//	НовСтрока.Регистратор  = ДокументСсылка;
		//	НовСтрока.Период       = ДокументСсылка.ДатаОкончания;
		//	НовСтрока.ТС           = ДокументСсылка.ТС;
		//	НовСтрока.Номенклатура = ТекСтрока.Номенклатура;
		//	НовСтрока.Количество   = ТекСтрока.Количество;
		//	НовСтрока.Стоимость    = ТекСтрока.Стоимость;
		//	НовСТрока.СтоимостьУпр = ТекСтрока.СтоимостьУпр;
		//КонецЦикла;
		
		ТабРаботъ = МассивРезультатов[1].Выгрузить();
		Для Каждого ТекСтрока ИЗ ТабРаботъ Цикл
			
			НовСТрока = ТаблицаНоменклатураТС.Добавить();
			НовСтрока.Регистратор  = ДокументСсылка;
			НовСтрока.Период       = ДокументСсылка.ДатаОкончания;
			НовСтрока.ТС           = ДокументСсылка.ТС;
			НовСтрока.Номенклатура = ТекСтрока.Работа;
			НовСтрока.Количество   = ТекСтрока.Количество;
			НовСтрока.Стоимость    = 0;
			НовСтрока.СтоимостьУпр = 0;
		КонецЦикла;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ДокументСсылка.ЗаявкаНаРемонт) Тогда
		ТаблицаЗаявокНаРемонт = Новый ТаблицаЗначений();
		ТаблицаЗаявокНаРемонт.Колонки.Добавить("Регистратор");
		ТаблицаЗаявокНаРемонт.Колонки.Добавить("Период");
		ТаблицаЗаявокНаРемонт.Колонки.Добавить("ТС");
		ТаблицаЗаявокНаРемонт.Колонки.Добавить("ВидДвижения");
		ТаблицаЗаявокНаРемонт.Колонки.Добавить("Организация");
		ТаблицаЗаявокНаРемонт.Колонки.Добавить("Колонна");
		ТаблицаЗаявокНаРемонт.Колонки.Добавить("ЗаявкаНаРемонт");
		ТаблицаЗаявокНаРемонт.Колонки.Добавить("ВидОбслуживания");
		ТаблицаЗаявокНаРемонт.Колонки.Добавить("Номенклатура");
		ТаблицаЗаявокНаРемонт.Колонки.Добавить("Количество");		
		
		ЗапросПоРаботам = Новый Запрос("ВЫБРАТЬ
		|	уатРемонтныйЛистРаботы.Работа,
		|	уатРемонтныйЛистРаботы.Количество,
		|	уатРемонтныйЛистРаботы.ЗаявкаНаРемонт
		|ИЗ
		|	РегистрНакопления.уатЗаявкиНаРемонт.ОстаткиИОбороты(
		|			,
		|			&ДатаКон,
		|			,
		|			,
		|			ТС = &ТС
		|				И ВидОбслуживания = &ВидОбслуживания) КАК уатЗаявкиНаРемонтОстаткиИОбороты
		|		ПРАВОЕ СОЕДИНЕНИЕ Документ.уатРемонтныйЛист.Работы КАК уатРемонтныйЛистРаботы
		|		ПО уатЗаявкиНаРемонтОстаткиИОбороты.ТС = уатРемонтныйЛистРаботы.Ссылка.ТС
		|			И уатЗаявкиНаРемонтОстаткиИОбороты.ЗаявкаНаРемонт = уатРемонтныйЛистРаботы.ЗаявкаНаРемонт
		|			И уатЗаявкиНаРемонтОстаткиИОбороты.ВидОбслуживания = уатРемонтныйЛистРаботы.ЗаявкаНаРемонт.ВидОбслуживания
		|ГДЕ
		|	уатРемонтныйЛистРаботы.ЗаявкаНаРемонт <> &ПустаяЗаявка
		|	И уатРемонтныйЛистРаботы.Ссылка = &Ссылка");
		ЗапросПоРаботам.УстановитьПараметр("ПустаяЗаявка", Документы.уатЗаявкаНаРемонт.ПустаяСсылка());
		ЗапросПоРаботам.УстановитьПараметр("Ссылка", ДокументСсылка);
		ЗапросПоРаботам.УстановитьПараметр("ДатаКон", КонецДня(ДокументСсылка.Дата));
		ЗапросПоРаботам.УстановитьПараметр("ТС", ДокументСсылка.ТС);
		ЗапросПоРаботам.УстановитьПараметр("ВидОбслуживания", ДокументСсылка.ВидОбслуживания);
		
		ТаблицаПоРаботам = ЗапросПоРаботам.Выполнить().Выгрузить();
		Для Каждого ТекСтрока ИЗ ТаблицаПоРаботам Цикл
			НовСтрока = ТаблицаЗаявокНаРемонт.Добавить();
			НовСтрока.Регистратор 	  = ДокументСсылка;
			НовСтрока.Период     	  = ДокументСсылка.Дата;
			НовСтрока.ВидДвижения     = ВидДвиженияНакопления.Расход;
			НовСтрока.ТС          	  = ДокументСсылка.ТС;
			НовСтрока.Организация 	  = ДокументСсылка.Организация;
			НовСтрока.Колонна	  	  = ДокументСсылка.ТС.Колонна;
			НовСтрока.ЗаявкаНаРемонт  = ТекСтрока.ЗаявкаНаРемонт;
			НовСтрока.ВидОбслуживания = ДокументСсылка.ВидОбслуживания;
			НовСтрока.Номенклатура    = ТекСтрока.Работа;
			НовСтрока.Количество      = ТекСтрока.Количество;
		КонецЦикла;
		
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗаявокНаРемонт"    , ТаблицаЗаявокНаРемонт);
	КонецЕсли;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНоменклатурыТС"    , ТаблицаНоменклатураТС);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартии"            , ТаблицаПартииТоваров );
		
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если ДокументСсылка.Выполнен И (НЕ УдалениеПроведения) Тогда
		
		мЗапрос = Новый Запрос;
		мЗапрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц; 
		мЗапрос.Текст = 
		"ВЫБРАТЬ
		|	уатРемонтныйЛистШины.СерияНоменклатуры КАК СерияНоменклатуры,
		|	уатРемонтныйЛистШины.Состояние КАК Состояние,
		|	уатРемонтныйЛистШины.Ссылка.ТС КАК ТС,
		|	уатРемонтныйЛистШины.МестоУстановки КАК МестоУстановки
		|ПОМЕСТИТЬ СерииНоменклатурыДокумента
		|ИЗ
		|	Документ.уатРемонтныйЛист.Шины КАК уатРемонтныйЛистШины
		|ГДЕ
		|	уатРемонтныйЛистШины.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	уатРемонтныйЛистАккумуляторы.СерияНоменклатуры,
		|	уатРемонтныйЛистАккумуляторы.Состояние,
		|	уатРемонтныйЛистАккумуляторы.Ссылка.ТС,
		|	NULL
		|ИЗ
		|	Документ.уатРемонтныйЛист.Аккумуляторы КАК уатРемонтныйЛистАккумуляторы
		|ГДЕ
		|	уатРемонтныйЛистАккумуляторы.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	уатРемонтныйЛистПрочиеАгрегаты.СерияНоменклатуры,
		|	уатРемонтныйЛистПрочиеАгрегаты.Состояние,
		|	уатРемонтныйЛистПрочиеАгрегаты.Ссылка.ТС,
		|	NULL
		|ИЗ
		|	Документ.уатРемонтныйЛист.ПрочиеАгрегаты КАК уатРемонтныйЛистПрочиеАгрегаты
		|ГДЕ
		|	уатРемонтныйЛистПрочиеАгрегаты.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	уатОстаткиАгрегатовОстатки.Склад,
		|	уатОстаткиАгрегатовОстатки.СерияНоменклатуры,
		|	ЕСТЬNULL(уатОстаткиАгрегатовОстатки.КоличествоОстаток, 0) КАК Количество
		|ИЗ
		|	СерииНоменклатурыДокумента КАК СерииНоменклатурыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.уатОстаткиАгрегатов.Остатки(
		|				&МоментВремени,
		|				Склад = &Склад
		|					И СерияНоменклатуры В
		|						(ВЫБРАТЬ
		|							ТабСерий.СерияНоменклатуры
		|						ИЗ
		|							СерииНоменклатурыДокумента КАК ТабСерий)) КАК уатОстаткиАгрегатовОстатки
		|		ПО СерииНоменклатурыДокумента.СерияНоменклатуры = уатОстаткиАгрегатовОстатки.СерияНоменклатуры
		|ГДЕ
		|	уатОстаткиАгрегатовОстатки.КоличествоОстаток < 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АгрегатыДокумента.СерияНоменклатуры,
		|	уатАгрегатыТССрезПоследних.СерияНоменклатуры КАК СерияНоменклатурыСрез,
		|	уатАгрегатыТССрезПоследних.ТС,
		|	уатАгрегатыТССрезПоследних.МестоУстановки
		|ИЗ
		|	СерииНоменклатурыДокумента КАК АгрегатыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатАгрегатыТС.СрезПоследних(
		|				&МоментВремени,
		|				СостояниеАгрегата <> ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.Снято)) КАК уатАгрегатыТССрезПоследних
		|		ПО АгрегатыДокумента.ТС = уатАгрегатыТССрезПоследних.ТС
		|			И АгрегатыДокумента.Состояние = уатАгрегатыТССрезПоследних.СостояниеАгрегата
		|			И (ЕСТЬNULL(АгрегатыДокумента.МестоУстановки, ЗНАЧЕНИЕ(Справочник.уатМестаУстановкиШин.ПустаяСсылка)) = уатАгрегатыТССрезПоследних.МестоУстановки)
		|			И АгрегатыДокумента.СерияНоменклатуры <> уатАгрегатыТССрезПоследних.СерияНоменклатуры
		|ГДЕ
		|	(НЕ уатАгрегатыТССрезПоследних.СерияНоменклатуры ЕСТЬ NULL )
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АгрегатыДокумента.СерияНоменклатуры,
		|	уатАгрегатыТССрезПоследних.ТС,
		|	уатАгрегатыТССрезПоследних.МестоУстановки
		|ИЗ
		|	СерииНоменклатурыДокумента КАК АгрегатыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатАгрегатыТС.СрезПоследних(&МоментВремени, Регистратор <> &Ссылка) КАК уатАгрегатыТССрезПоследних
		|		ПО АгрегатыДокумента.СерияНоменклатуры = уатАгрегатыТССрезПоследних.СерияНоменклатуры
		|ГДЕ
		|	(НЕ уатАгрегатыТССрезПоследних.СерияНоменклатуры ЕСТЬ NULL)
		|	И уатАгрегатыТССрезПоследних.СостояниеАгрегата <> ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.Снято)
		|	И АгрегатыДокумента.Состояние <> ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.Снято)";
		
		мЗапрос.УстановитьПараметр("Ссылка"       , ДокументСсылка);
		мЗапрос.УстановитьПараметр("Склад"        , ДокументСсылка.СкладОтправитель);
		мЗапрос.УстановитьПараметр("МоментВремени", Новый Граница(ДокументСсылка.ДатаОкончания, ВидГраницы.Включая));
				
		МассивРезультатов = мЗапрос.ВыполнитьПакет();
		
		Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ДокументСсылка);
		
		ВыборкаСерии  = МассивРезультатов[1].Выбрать();
		Пока ВыборкаСерии.Следующий() Цикл
			Если НЕ ВыборкаСерии.Количество < 0 тогда Продолжить; КонецЕсли;
			#Если ТонкийКлиент тогда	
			#Иначе
				Если ВыборкаСерии.СерияНоменклатуры.Модель.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина тогда
					СтрокаПредставление = "Шина """ + ВыборкаСерии.СерияНоменклатуры;
				ИначеЕсли ВыборкаСерии.СерияНоменклатуры.Модель.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор тогда
					СтрокаПредставление = "Аккумулятор """ + ВыборкаСерии.СерияНоменклатуры;
				Иначе
					СтрокаПредставление = "Агрегат """ + ВыборкаСерии.СерияНоменклатуры;
				КонецЕсли;
				ТекстСообщения = СтрокаПредставление + """ отсутствует на складе """ + мЗапрос.Параметры.Склад + """.";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Отказ,Заголовок);	
			#КонецЕсли
		КонецЦикла;
		
		
		//проверяем наличие агрегата на ТС (для снимаемых агрегатов)
		//формируем общую таблицу агрегатов
		предМоментВремени = Новый Граница(ДокументСсылка.ДатаОкончания, ВидГраницы.Исключая);
		тблШиныТС_доРемонта           = уатОбщегоНазначения.уатШиныТС(ДокументСсылка.ТС, предМоментВремени);
		тблАккумуляторыТС_доРемонта   = уатОбщегоНазначения.уатАккумуляторыТС(ДокументСсылка.ТС, предМоментВремени);
		тблПрочиеАгрегатыТС_доРемонта = уатОбщегоНазначения.уатПрочиеАгрегатыТС(ДокументСсылка.ТС, предМоментВремени);
		
		тблАгрегаты = ДокументСсылка.Шины.Выгрузить();
		Для Каждого ТекАккум Из ДокументСсылка.Аккумуляторы Цикл
			НоваяСтрокаАгрегат = тблАгрегаты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаАгрегат, ТекАккум);
		КонецЦикла;
		Для Каждого ТекПрочий Из ДокументСсылка.ПрочиеАгрегаты Цикл
			НоваяСтрокаАгрегат = тблАгрегаты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаАгрегат, ТекПрочий);
		КонецЦикла;
			
		Для Каждого ТекСтрокаАгрегат Из тблАгрегаты Цикл
			Если ТекСтрокаАгрегат.Состояние = Перечисления.уатСостоянияАгрегатов.Снято Тогда
				Если (ТекСтрокаАгрегат.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина
					И тблШиныТС_доРемонта.Найти(ТекСтрокаАгрегат.СерияНоменклатуры, "СерияНоменклатуры") = Неопределено)
					ИЛИ 
					(ТекСтрокаАгрегат.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор
					И тблАккумуляторыТС_доРемонта.Найти(ТекСтрокаАгрегат.СерияНоменклатуры, "СерияНоменклатуры") = Неопределено)
					ИЛИ
					(ТекСтрокаАгрегат.СерияНоменклатуры.ТипАгрегата <> Справочники.уатТипыАгрегатов.Аккумулятор 
					И ТекСтрокаАгрегат.СерияНоменклатуры.ТипАгрегата <> Справочники.уатТипыАгрегатов.Шина
					И тблПрочиеАгрегатыТС_доРемонта.Найти(ТекСтрокаАгрегат.СерияНоменклатуры, "СерияНоменклатуры") = Неопределено)
					Тогда
					#Если ТонкийКлиент тогда	
					#Иначе
						Если ТекСтрокаАгрегат.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина тогда
							СтрокаПредставление = "Шина """ + ТекСтрокаАгрегат.СерияНоменклатуры;
						ИначеЕсли ТекСтрокаАгрегат.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор тогда
							СтрокаПредставление = "Аккумулятор """ + ТекСтрокаАгрегат.СерияНоменклатуры;
						Иначе
							СтрокаПредставление = "Агрегат """ + ТекСтрокаАгрегат.СерияНоменклатуры;								
						КонецЕсли;
						ТекстСообщения = СтрокаПредставление + """ отсутствует на ТС """
						+ уатОбщегоНазначения.уатПредставлениеТС(ДокументСсылка.ТС, ДокументСсылка.Организация) + """.";
						
						ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);	
					#КонецЕсли
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		//проверка на повторную установку агрегата на тоже самое ТС
		ВыборкаКонтроля = МассивРезультатов[3].Выбрать();
		Пока ВыборкаКонтроля.Следующий() Цикл
			Если ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор тогда
				ТекстСообщения = "Аккумулятор ";	
			ИначеЕсли ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина тогда
				ТекстСообщения = "Шина ";	
			Иначе
				ТекстСообщения = "Агрегат ";			
			КонецЕсли;
			
			ТекстСообщения = ТекстСообщения + """" + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + """" + " уже установлен";
			Если ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина тогда
				ТекстСообщения = ТекстСообщения + "а";	
			КонецЕсли;
			ТекстСообщения = ТекстСообщения + " на транспортном средстве """
				+ уатОбщегоНазначения.уатПредставлениеТС(ВыборкаКонтроля.ТС, ДокументСсылка.Организация) + """";
			
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Отказ,Заголовок);	
		КонецЦикла;
		
		//проверка на отрицательные остатки агрегатов на складе
		Если ДокументСсылка.СпособРемонта = Перечисления.уатСпособыРемонта.РемЗона тогда
			мЗапрос = Новый Запрос;
			мЗапрос.Текст = 
			"ВЫБРАТЬ
			|	уатРемонтныйЛистМатериалы.Номенклатура,
			|	ЕСТЬNULL(уатПартииТоваровНаСкладахОстатки.КоличествоОстаток, 0) КАК Количество
			|ИЗ
			|	Документ.уатРемонтныйЛист.Материалы КАК уатРемонтныйЛистМатериалы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.уатПартииТоваровНаСкладах.Остатки(&МоментПроверки, Склад = &Склад) КАК уатПартииТоваровНаСкладахОстатки
			|		ПО уатРемонтныйЛистМатериалы.Номенклатура = уатПартииТоваровНаСкладахОстатки.Номенклатура
			|ГДЕ
			|	уатРемонтныйЛистМатериалы.Ссылка = &Ссылка
			|	И ЕСТЬNULL(уатПартииТоваровНаСкладахОстатки.КоличествоОстаток, 0) < 0";
			мЗапрос.УстановитьПараметр("Ссылка"        , ДокументСсылка);
			мЗапрос.УстановитьПараметр("МоментПроверки", Новый Граница(ДокументСсылка.ДатаОкончания, ВидГраницы.Включая));
			мЗапрос.УстановитьПараметр("Склад"         , ДокументСсылка.Контрагент);
			
			ВыборкаПартии = мЗапрос.Выполнить().Выбрать();
			
			Пока ВыборкаПартии.Следующий() Цикл
				#Если ТонкийКлиент тогда	
				#Иначе
					ТекстСообщения = "Для """ + ВыборкаПартии.Номенклатура + """ получены отрицательные остатки на складе """ + мЗапрос.Параметры.Склад + """! Остаток на складе: " + ВыборкаПартии.Количество;
					ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Отказ,Заголовок);	
				#КонецЕсли
			КонецЦикла;
		КонецЕсли;
		
		//проверка на установку агрегата на уже занятое место установки
		//здесь просто сообщаем об этом, но не отменяем проведение
		Если НЕ Отказ Тогда
			ВыборкаКонтроля = МассивРезультатов[2].Выбрать();
			Пока ВыборкаКонтроля.Следующий() Цикл
				Если ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина Тогда
					
					НайденнаяСтрока = ДокументСсылка.Шины.Найти(ВыборкаКонтроля.СерияНоменклатурыСрез, "СерияНоменклатуры");
					Если НЕ НайденнаяСтрока = Неопределено И НайденнаяСтрока.Состояние = Перечисления.уатСостоянияАгрегатов.Снято Тогда
						Продолжить;	
					КонецЕсли;	
					
					ТекстСообщения = "Шина """ + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + """: установлена на место """
					+ СокрЛП(ВыборкаКонтроля.МестоУстановки) + """, уже занятое шиной """ + ВыборкаКонтроля.СерияНоменклатурыСрез.СерийныйНомер + """, ТС """
					+ уатОбщегоНазначения.уатПредставлениеТС(ВыборкаКонтроля.ТС, ДокументСсылка.Организация) + """!";
				ИначеЕсли ВыборкаКонтроля.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор Тогда
					
					НайденнаяСтрока = ДокументСсылка.Аккумуляторы.Найти(ВыборкаКонтроля.СерияНоменклатурыСрез, "СерияНоменклатуры");
					Если НайденнаяСтрока = Неопределено ИЛИ НайденнаяСтрока.Состояние = Перечисления.уатСостоянияАгрегатов.Снято Тогда
						Продолжить;
					КонецЕсли;

					ТекстСообщения = "Аккумулятор """ + ВыборкаКонтроля.СерияНоменклатуры.СерийныйНомер + """: установлен на ТС """
					+ уатОбщегоНазначения.уатПредставлениеТС(ВыборкаКонтроля.ТС, ДокументСсылка.Организация)
					+ """, уже занятое аккумулятором """ + ВыборкаКонтроля.СерияНоменклатурыСрез.СерийныйНомер + """!";
				КонецЕсли;
				
				Сообщить(ТекстСообщения, СтатусСообщения.Информация);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ВыполнитьКонтроль()
