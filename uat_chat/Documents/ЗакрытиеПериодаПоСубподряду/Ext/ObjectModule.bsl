
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//Если у пользователя в регистре сведений "уатПраваИНастройки" для права "Пользователь является администратором системы" стоит "Истина", то никаких проверок делать не будем
	ФлагАдминистраторСистемы = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ПараметрыСеанса.ТекущийПользователь, ПланыВидовХарактеристик.уатПраваИНастройки.ПользовательАдминистратор);
	Если ФлагАдминистраторСистемы Тогда
		Возврат;
	КонецЕсли;	
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	Если Не глОбщий.ЕстьРасходГСМзаМесяц(Дата,Ложь) ТОгда //Если не закрыт ГСМ, то документ не делаем
		Сообщить("Сначала необходимо закрыть ГСМ за текущий месяц!!!");
		Отказ = Истина;
		ВозвраТ;
	КонецЕСЛИ;
	
	
	пДт = Дата;
	Запрос = новый Запрос;
	
	ТекстЗапроса = глОбщий.ТекстЗапросаПодразделения();
	
	ТекстЗапроса = ТекстЗапроса +"
		|	
		| ВЫБРАТЬ DISTINCT
		|	Значение(ВидДвиженияНакопления.Расход) ВидДвижения,
		|	Док.Дата Период,
		|	ISNULL(ТблПодр.Владелец,Значение(СПравочник.Контрагенты.ПустаяСсылка)) Владелец,
		| 	РаботаТСОстатки.ПутевойЛист,														   
		| 	РаботаТСОстатки.ИдСтроки,														   
		| 	РаботаТСОстатки.Реестр,														   
		| 	ДокРее.ТС,														   
		| 	ДокРее.ТС.ГосударственныйНомер ГосНом,														   
		| 	ДокРее.ТС.ГаражныйНомер ГарНом,														   
		| 	РаботаТСОстатки.ТалонОстаток Талон														   
		| 															   
		|ИЗ
		|	РегистрНакопления.РаботаТССубподряд.Остатки(&Дт1,) КАК РаботаТСОстатки   
		|	     INNER JOIN Документ.уатПутевойЛист ДокПЛ ON ДокПЛ.ссылка = РаботаТСОстатки.ПутевойЛист
		|        INNER JOIN Документ.РеестрУслуг.Услуги как ДокРее ON    ДокРее.Ссылка      = РаботаТСОстатки.Реестр 
		| 															   и ДокРее.идСтроки    = РаботаТСОстатки.идСтроки
		| 															   и ДокРее.ПутевойЛист = РаботаТСОстатки.ПутевойЛист
		| 															   и РаботаТСОстатки.ТалонОстаток <> 0
		| 															   
		|        INNER JOIN Документ.РеестрУслуг  как Док ON Док.ссылка = ДокРее.ссылка и Док.Ссылка.Дата < &Дт1
		| 															   
		| 		 LEFT OUTER JOIN врПодр ТблПодр ON  ДокРее.ТС    =  ТблПодр.ТС													   
		|                                      и ISNULL(ДокПЛ.Дата,Док.Дата) >= ТблПодр.Период 
		|                                      и ISNULL(ДокПЛ.Дата,Док.Дата) <  ТблПодр.ПериодКон
		| 															   
		| 															   
		| 															   
        |";

		Запрос.УстановитьПараметр("ДтДляПодр",НачалоМесяца(пДт)- 3600*24*60);
		Запрос.УстановитьПараметр("Дт",НачалоМесяца(пДт));
		Запрос.УстановитьПараметр("Дт1",КонецМесяца(пДт)+1);
		Запрос.УстановитьПараметр("Орг",Организация);
		
		Запрос.Текст = ТекстЗапросА;
		Тбл = Запрос.Выполнить().Выгрузить();
		
		НашКА = Константы.ксНашаОрганизация.Получить();
		
		Таб = новый ТабличныйДокумент;
		Макет = ПолучитьМакет("Макет");
		Обл = Макет.ПолучитьОбласть("Шапка");
		Обл.Параметры.Заполнить(ЭтотОбъект);
		Таб.вывести(Обл);
		
		Обл = Макет.ПолучитьОбласть("Строка");
		
		Для каждого Стр из Тбл Цикл
			Если ЗначениеЗаполнено(Стр.Владелец)=Ложь ТОгда 
				Отказ = Истина;
				Обл.Параметры.Заполнить(Стр);
				Обл.Параметры.Причина = "Не выбран владелец";
				Таб.Вывести(Обл);
			ИНачеЕсли Стр.Владелец <> НаШКА и Стр.Владелец <> Организация ТОгда
				Отказ = Истина;
				Обл.Параметры.Заполнить(Стр);
				Обл.Параметры.Причина = "Пут.лист не оплачен субподрядчику!";
				Таб.Вывести(Обл);
			ИНачеЕсли Стр.талон<0 ТОгда
				Отказ = Истина;
				Обл.Параметры.Заполнить(Стр);
				Обл.Параметры.Причина = "Пут.лист не оплачен субподрядчику больше раз, чем выстален заказчику!";
				Таб.Вывести(Обл);
			КонецЕСЛИ; 		   
		КонецЦиклА;
		
		Если Отказ Тогда
			Таб.ТолькоПросмотр = Истина;
			Таб.ОтображатьЗаголовки = Ложь;
			Таб.ОтображатьСетку = Ложь;
			Таб.Показать();
		КонецеСЛИ;
		
		//Проверим, а все ли путевые листы, которые были "на себя" прошли по реестру
		//и если есть, то балалайка
		ЕСли Организация.КонтрольРеестраУслугНаСебя = Истина И Документы.РасходГСМзаМесяц.ПроверкаРаботыНаСебя(Ссылка) = Истина ТОгда
			отказ = Истина;
		КонецЕСлИ;
		
		Если  Не Отказ Тогда
			Движения.РаботаТССубподряд.Записывать = Истина;
			Движения.РаботаТССубподряд.Загрузить(Тбл);	
		КонецЕсли;	
	
КонецПроцедуры
