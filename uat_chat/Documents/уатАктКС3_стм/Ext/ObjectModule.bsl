////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

Перем Права Экспорт; // КЭШ Прав

#Если Клиент Тогда
	
	Перем НП Экспорт; // Настройка периода
	
	
	// Функция формирует табличный документ с печатной формой заказа или счета,
	// разработанного методистами
	//
	// Возвращаемое значение:
	//  Табличный документ - сформированная печатная форма
	//
	Функция ПечатьКС3(Тип = "уатАктКС3") Экспорт
		
		ЗапросШапка = Новый Запрос;
		ЗапросШапка.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
		ЗапросШапка.Текст =
		"ВЫБРАТЬ
		|	Номер,
		|	Дата,
		|	ДоговорКонтрагента,
		|	Контрагент КАК Получатель,
		|	Организация КАК Поставщик,
		|	Организация,
		|	СуммаЗаОтчетныйПериод
		//|	ВалютаДокумента,
		//|	УчитыватьНДС,
		//|	СуммаВключаетНДС
		|ИЗ
		|	Документ.уатАктКС3_стм КАК уатАктКС3
		|
		|ГДЕ
		|	уатАктКС3.Ссылка = &ТекущийДокумент";
		Шапка = ЗапросШапка.Выполнить().Выбрать();
		Шапка.Следующий();
		
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КС3";
		Макет       = ПолучитьМакет("КС3");
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "ПолноеНаименование,ЮридическийАдрес,Телефоны");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата), "ПолноеНаименование,ЮридическийАдрес,Телефоны");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		ОбластьМакета.Параметры.ОбъектСтроительства = ОбъектСтроительства;
		ОбластьМакета.Параметры.КодПоОКПО=Организация.КодПоОКПО;
		ОбластьМакета.Параметры.КодПоОКПОЗаказчика=Контрагент.КодПоОКПО;
		ОбластьМакета.Параметры.Дата=Дата;
		ОбластьМакета.Параметры.Номер=Номер;
		ОбластьМакета.Параметры.ДатаНач=?(ДатаНач>'00010101',Формат(ДатаНач,"ДФ=""дд.ММ.гг """)+"г.","");
		ОбластьМакета.Параметры.ДатаКон=?(ДатаКон>'00010101',Формат(ДатаКон,"ДФ=""дд.ММ.гг """)+"г.","");
		ОбластьМакета.Параметры.Заказчик = Шапка.Получатель;
		ОбластьМакета.Параметры.Подрядчик = Шапка.Организация;
		
		Попытка    // если УАТ не объединено с типовыми конфигурациями
			ОбластьМакета.Параметры.ДоговорНомер=ДоговорКонтрагента.Номер;
			Если ДоговорКонтрагента.Дата>'00010101' Тогда
				ОбластьМакета.Параметры.День=Формат(ДоговорКонтрагента.Дата,"ДФ=""дд""");
				ОбластьМакета.Параметры.Месяц=Формат(ДоговорКонтрагента.Дата,"ДФ=""ММ""");
				ОбластьМакета.Параметры.Год=Формат(ДоговорКонтрагента.Дата,"ДФ=""гг""");
			Иначе
				ОбластьМакета.Параметры.День="";	
				ОбластьМакета.Параметры.Месяц="";	
				ОбластьМакета.Параметры.Год="";	
			КонецЕсли; 
		Исключение
		КонецПопытки; 
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Таблица");
		ОбластьМакета.Параметры.СуммаЗаОтчетныйПериод=ОбщегоНазначения.ФорматСумм(СуммаЗаОтчетныйПериод-НДСЗаОтчетныйПериод);
		ОбластьМакета.Параметры.НДСЗаОтчетныйПериод=ОбщегоНазначения.ФорматСумм(НДСЗаОтчетныйПериод);
		ОбластьМакета.Параметры.Всего=ОбщегоНазначения.ФорматСумм(СуммаЗаОтчетныйПериод);
		ОбластьМакета.Параметры.СуммаСНачалаГода=ОбщегоНазначения.ФорматСумм(СуммаСНачалаГода-НДССНачалаГода);
		ОбластьМакета.Параметры.НДССНачалаГода=ОбщегоНазначения.ФорматСумм(НДССНачалаГода);
		ОбластьМакета.Параметры.СуммаСНачалаПроведения=ОбщегоНазначения.ФорматСумм(СуммаСНачалаПроведения-НДССНачалаПроведения);
		ОбластьМакета.Параметры.НДССНачалаПроведения=ОбщегоНазначения.ФорматСумм(НДССНачалаПроведения);
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ОтветственныеЛицаОрганизацииСрезПоследних.ФизическоеЛицо,
		|	ОтветственныеЛицаОрганизацииСрезПоследних.Должность
		|ИЗ
		|	РегистрСведений." + ?(Метаданные.РегистрыСведений.Найти("ОтветственныеЛицаОрганизаций") <> Неопределено, "ОтветственныеЛицаОрганизаций", "ОтветственныеЛицаОрганизации") + ".СрезПоследних(
		|		&Дата,
		|		СтруктурнаяЕдиница = СтруктурнаяЕдиница
		|		    И ОтветственноеЛицо = &Директор) КАК ОтветственныеЛицаОрганизацииСрезПоследних";
		
		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Организация);
		Перечисление_ОтветственныеЛицаОрганизации = ?(Метаданные.Перечисления.Найти("ОтветственныеЛицаОрганизаций") <> Неопределено, Перечисления.ОтветственныеЛицаОрганизаций, Перечисления.ОтветственныеЛицаОрганизации);
		Запрос.УстановитьПараметр("Директор", Перечисление_ОтветственныеЛицаОрганизации.Руководитель);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		//Пока Выборка.Следующий() Цикл
		//	Руководитель = "/ " + ФормированиеПечатныхФорм.ФамилияИмяОтчество(Выборка.ФизическоеЛицо, Дата) + " /";
		//	Должность = Выборка.Должность;
		//КонецЦикла;
		//ОбластьМакета.Параметры.ФИОРуководителя = Руководитель;
		//ОбластьМакета.Параметры.Должность = Должность;
		
		Если Выборка.Следующий() Тогда
			ДанныеФизЛица = уатОбщегоНазначенияТиповые.ДанныеФизЛица(Организация, Выборка.ФизическоеЛицо, Дата);
			Руководитель = ДанныеФизЛица.Представление;
			Должность = Выборка.Должность;
			
			ОбластьМакета.Параметры.ФИОРуководителя = Руководитель;
			ОбластьМакета.Параметры.Должность = Должность;
		Иначе
			ОбластьМакета.Параметры.ФИОРуководителя = Организация;
		КонецЕсли;
		
		//заполняем должность и наименование заказчика
		Если ЗначениеЗаполнено(Контрагент.ОсновноеКонтактноеЛицо) Тогда
			ОбластьМакета.Параметры.ФИОЗаказчика = Контрагент.ОсновноеКонтактноеЛицо.Наименование;
			ОбластьМакета.Параметры.ДолжностьЗаказчика = Контрагент.ОсновноеКонтактноеЛицо.Должность;
		Иначе
			ОбластьМакета.Параметры.ФИОЗаказчика = Контрагент.Наименование;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		Возврат ТабДокумент;                            
		
	КонецФункции // ПечатьСчетаЗаказа()
	
	// Процедура осуществляет печать документа. Можно направить печать на 
	// экран или принтер, а также распечатать необходимое количество копий.
	//
	//  Название макета печати передается в качестве параметра,
	// по переданному названию находим имя макета в соответствии.
	//
	// Параметры:
	//  НазваниеМакета - строка, название макета.
	//
	Процедура Печать(НазваниеМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
		Если ЭтоНовый() Тогда
			Предупреждение("Документ можно распечатать только после его записи");
			Возврат;
		ИначеЕсли Не ?(Права = Неопределено, Ложь, уатПраваИНастройки.уатПраво("ПечатьНепроведенных", Права)) Тогда
			Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
			Возврат;
		КонецЕсли;

		Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
			Возврат;
		КонецЕсли;
		
		// Получить экземпляр документа на печать
		Если НазваниеМакета = "КС3" Тогда
			ТабДокумент = ПечатьКС3();
			уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Права);
			
		ИначеЕсли ТипЗнч(НазваниеМакета) = Тип("СправочникСсылка.ВнешниеОбработки") Тогда
			ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
			ОбъектВнешнейФормы = НазваниеМакета.ПолучитьОбъект();
			Если ОбъектВнешнейФормы = Неопределено Тогда
				Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
				Возврат;
			КонецЕсли;			
			ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
			ДвоичныеДанные.Записать(ИмяФайла);
			Обработка = ВнешниеОбработки.Создать(ИмяФайла);
			Попытка
				Обработка.СсылкаНаОбъект = Ссылка;
				ТабДокумент = Обработка.Печать();
				уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Права);
			Исключение
				Сообщить("Ошибка формата внешней обработки. Возможно выбрана обработка не для печати.", СтатусСообщения.Важное);
			КонецПопытки;

			
		КонецЕсли; 
		
	КонецПроцедуры // Печать
		
	// Возвращает доступные варианты печати документа
	//
	// Возвращаемое значение:
	//  Структура, каждая строка которой соответствует одному из вариантов печати
	//  
	//Функция ПолучитьСписокПечатныхФорм() Экспорт
	Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
		
		СтруктураМакетов = Новый Структура;
		
		СтруктураМакетов.Вставить("КС3", "КС3");
	
		Возврат СтруктураМакетов ;
		
	КонецФункции // ПолучитьСтруктуруПечатныхФорм()

	
	#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.уатРеализацияУслуг") Тогда
		
		Дата = ТекущаяДата();
		Организация         = Основание.Организация;
		Контрагент          = Основание.Контрагент;
		ДоговорКонтрагента  = Основание.ДоговорКонтрагента;
		СуммаДокумента      = Основание.СуммаДокумента;
		УчитыватьНДС        = Основание.УчитыватьНДС; 
		СуммаВключаетНДС    = Основание.СуммаВключаетНДС;
		СтавкаНДС           = Основание.СтавкаНДС;
		ОбъектСтроительства = Основание.ОбъектСтроительства;
		//ДатаНач			    = Основание.ДатаНач;
		//ДатаКон		        = Основание.ДатаКон;
		Комментарий         = "Заполнен на основании " + Основание;
		ДокументОснование   = Основание;
		
	КонецЕсли;	
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура вызывается перед записью документа 
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначения.уатПроверкаПравПередЗаписьюВДокументах(ЭтотОбъект, Отказ, , Права);
	
КонецПроцедуры // ПередЗаписью



// сохранение ссылки на коллекцию прав, настроек и окружения
Права = Неопределено;
#Если Клиент Тогда
	Права = глПраваУАТ;
	НП = Новый НастройкаПериода;
#КонецЕсли
