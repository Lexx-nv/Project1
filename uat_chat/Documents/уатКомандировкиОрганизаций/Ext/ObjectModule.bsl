////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБЪЕКТА

Перем Права Экспорт; // Переменная объекта - ссылка на коллекцию прав, настроек и переменных окружения.

Перем мДлинаСуток Экспорт; // Переменная объекта - длительность суток, в секундах.

#Если Клиент Тогда
	
	// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
//Функция ПолучитьСписокПечатныхФорм() Экспорт
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	
	СтруктураМакетов.Вставить("Т10_от_5_1_2004", "Форма Т-10");
	
	Возврат СтруктураМакетов ;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Функция формирует табличный документ с печатной формой "Т-10",
//
// Возвращаемое значение:
//	Табличный документ - печатная форма
//
Функция ПечатьТ10()

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КомандировкиОрганизации_Т10";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	// получаем данные для печати
	ВыборкаДляШапки   = СформироватьЗапросДляПечати("ПоРеквизитамДокумента").Выбрать();
	ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента").Выбрать();

	// запоминаем области макета
	Макет = ПолучитьМакет("Т10_от_5_1_2004");
	ОбластьМакетаШапка	= Макет.ПолучитьОбласть("Шапка");			// Шапка документа
	ОбластьМакетаПодвал	= Макет.ПолучитьОбласть("Подвал");			// Подвал документа
	ОбластьМакета		= Макет.ПолучитьОбласть("Работник");		// строка работника
	ОборотШапка			= Макет.ПолучитьОбласть("ШапкаОтметок");	// оборот удостоверения - отметки от прибытии-выбытии
	ОборотОтметки		= Макет.ПолучитьОбласть("Отметки");

	// выводим данные о руководителях организации
	Если ВыборкаДляШапки.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапки); // Шапка документа.
 		ОбластьМакетаШапка.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапки); // Для подвала.
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляШапки); // область работника
		НомерДокДляПечати	= ВыборкаДляШапки.НомерДок;
	КонецЕсли;

	НомерФормы = 0;
	ПечататьПостфикс = ВыборкаРаботники.Количество() > 1;
	// Начинаем формировать выходной документ
	Пока ВыборкаРаботники.Следующий() Цикл

		// Каждый приказ на отдельной странице.
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		// Шапка документа.
		Если ПечататьПостфикс Тогда
			НомерФормы = НомерФормы + 1;
			ОбластьМакетаШапка.Параметры.НомерДок = НомерДокДляПечати + "/" + НомерФормы
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаШапка);

		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВыборкаРаботники);
		
		//уберем из табельного номера префикс
		ОбластьМакета.Параметры.ТабельныйНомер = ВыборкаРаботники.ТабельныйНомер;
		
		// в этой форме продолжительность командировки указывается без времени в пути
		Продолжительность = ?(ЗначениеЗаполнено(ВыборкаРаботники.ДатаОкончания),Цел((ВыборкаРаботники.ДатаОкончания - ВыборкаРаботники.ДатаНачала + 1) / мДлинаСуток) + 1 - ВыборкаРаботники.ВремяНахожденияВПути,"");
		Если Продолжительность > 0 Тогда
			ОбластьМакета.Параметры.Продолжительность = Продолжительность;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Подвал документа.
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		// выводим оборот удостоверения
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДокумент.Вывести(ОборотШапка);
		ТабДокумент.Вывести(ОборотОтметки);
		ТабДокумент.Вывести(ОборотОтметки);
		ТабДокумент.Вывести(ОборотОтметки);
		ТабДокумент.Вывести(ОборотОтметки);

	КонецЦикла;

	// если не было ни одного работника - выводим пустой бланк
	Если ТабДокумент.ВысотаТаблицы = 0 Тогда
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		// выводим оборот удостоверения
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДокумент.Вывести(ОборотШапка);
		ТабДокумент.Вывести(ОборотОтметки);
		ТабДокумент.Вывести(ОборотОтметки);
		ТабДокумент.Вывести(ОборотОтметки);
		ТабДокумент.Вывести(ОборотОтметки);
	КонецЕсли;

	Возврат ТабДокумент;

КонецФункции // ПечатьУдостоверение()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(НазваниеМакета = "", КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не ?(Права = Неопределено, Ложь, уатПраваИНастройки.уатПраво("ПечатьНепроведенных", Права)) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;
	
	Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(НазваниеМакета) = Тип("СправочникСсылка.ВнешниеОбработки") Тогда
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ОбъектВнешнейФормы = НазваниеМакета.ПолучитьОбъект();
		Если ОбъектВнешнейФормы = Неопределено Тогда
			Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;			
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Попытка
			Обработка.СсылкаНаОбъект = Ссылка;
			ТабДокумент = Обработка.Печать();
			уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Права);
		Исключение
			Сообщить("Ошибка формата внешней обработки. Возможно выбрана обработка не для печати.", СтатусСообщения.Важное);
		КонецПопытки;
		
	Иначе
		
		// Получить экземпляр документа на печать
		Если НазваниеМакета = "Т10_от_5_1_2004" тогда
			
			// Управленческая печатная форма документа
			ТабДокумент = ПечатьТ10();
			
		КонецЕсли;
		
		уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, ""), Права);
		
	КонецЕсли;
КонецПроцедуры

#КонецЕсли

// Формирует запрос по документу и связанным регистрам сведений
//
// Параметры: 
//	Режим	- строка, может принимать значения:
//				"ПоРеквизитамДокумента"
//				"ПоТабличнойЧастиДокумента"
//
// Возвращаемое значение:
//	Результат запроса с данными об организации или о работниках из табличной части
//
Функция СформироватьЗапросДляПечати(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",	Ссылка);
	Если Метаданные.Перечисления.Найти("ОтветственныеЛицаОрганизаций") <> Неопределено Тогда
		Запрос.УстановитьПараметр("Руководитель", Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	Иначе
		Запрос.УстановитьПараметр("Руководитель", Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаДокумента",	Дата);
    Запрос.УстановитьПараметр("ПустаяДата",		'00010101');

	Если Режим = "ПоРеквизитамДокумента" Тогда
		Если Метаданные.РегистрыСведений.Найти("ОтветственныеЛицаОрганизаций") <> Неопределено Тогда
			ИмяРегистраСведений = "ОтветственныеЛицаОрганизаций";
		Иначе
			ИмяРегистраСведений = "ОтветственныеЛицаОрганизации";
		КонецЕсли;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КомандировкиОрганизаций.Дата КАК ДатаДок,
		|	КомандировкиОрганизаций.Номер КАК НомерДок,
		|	КомандировкиОрганизаций.Организация.НаименованиеПолное КАК НазваниеОрганизации,
		|	КомандировкиОрганизаций.СтранаНазначения,
		|	КомандировкиОрганизаций.ОрганизацияНазначения,
		|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность.Представление КАК ДолжностьРуководителя,
		|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
		|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "".""
		|			ИНАЧЕ """"
		|		КОНЕЦ + ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
		|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "".""
		|			ИНАЧЕ """"
		|		КОНЕЦ, ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование) КАК ФИОРуководителя,
		|	ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо,
		|	КомандировкиОрганизаций.ОснованиеКомандировки,
		|	КомандировкиОрганизаций.Организация.Префикс,
		|	КомандировкиОрганизаций.Организация.КодПоОКПО КАК КодПоОКПО
		|ИЗ
		|	Документ.уатКомандировкиОрганизаций КАК КомандировкиОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений." + ИмяРегистраСведений + ".СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &Руководитель) КАК ОтветственныеЛицаОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследних
		|			ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|		ПО КомандировкиОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница
		|ГДЕ
		|	КомандировкиОрганизаций.Ссылка = &ДокументСсылка";

	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда

		Запрос.УстановитьПараметр("Организация",	 Организация);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, уатКомандировкиОрганизацийРаботникиОрганизации.Сотрудник.Наименование) КАК Работник,
		|	ЕСТЬNULL(ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид.Наименование + "", серия "" + ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия + "", №"" + ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер, """") КАК РеквизитыПаспорта,
		|	уатКомандировкиОрганизацийРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
		|	уатКомандировкиОрганизацийРаботникиОрганизации.ДатаНачала,
		|	уатКомандировкиОрганизацийРаботникиОрганизации.ДатаОкончания,
		|	уатКомандировкиОрганизацийРаботникиОрганизации.Цель,
		|	уатКомандировкиОрганизацийРаботникиОрганизации.ВремяНахожденияВПути,
		|	уатСведенияОСотрудникахСрезПоследних.Должность,
		|	уатСведенияОСотрудникахСрезПоследних.ПодразделениеОрганизации КАК ПодразделениеРаботника,
		|	уатСведенияОСотрудникахСрезПоследних.ТабельныйНомер
		|ИЗ
		|	Документ.уатКомандировкиОрганизаций.РаботникиОрганизации КАК уатКомандировкиОрганизацийРаботникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатСведенияОСотрудниках.СрезПоследних(
		|				&ДатаДокумента,
		|				Сотрудник В
		|					(ВЫБРАТЬ
		|						уатКомандировкиОрганизацийРаботникиОрганизации.Сотрудник
		|					ИЗ
		|						Документ.уатКомандировкиОрганизаций.РаботникиОрганизации КАК уатКомандировкиОрганизацийРаботникиОрганизации
		|					ГДЕ
		|						уатКомандировкиОрганизацийРаботникиОрганизации.Ссылка = &ДокументСсылка)) КАК уатСведенияОСотрудникахСрезПоследних
		|		ПО уатКомандировкиОрганизацийРаботникиОрганизации.Сотрудник = уатСведенияОСотрудникахСрезПоследних.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
		|				&ДатаДокумента,
		|				ФизЛицо В
		|					(ВЫБРАТЬ
		|						уатКомандировкиОрганизацийРаботникиОрганизации.Сотрудник
		|					ИЗ
		|						Документ.уатКомандировкиОрганизаций.РаботникиОрганизации КАК уатКомандировкиОрганизацийРаботникиОрганизации
		|					ГДЕ
		|						уатКомандировкиОрганизацийРаботникиОрганизации.Ссылка = &ДокументСсылка)) КАК ФИОФизЛицСрезПоследних
		|		ПО уатКомандировкиОрганизацийРаботникиОрганизации.Сотрудник.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ПаспортныеДанныеФизЛицСрезПоследних
		|		ПО уатКомандировкиОрганизацийРаботникиОрганизации.Сотрудник.ФизЛицо = ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо
		|ГДЕ
		|	уатКомандировкиОрганизацийРаботникиОрганизации.Ссылка = &ДокументСсылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Иначе
		Возврат Неопределено;
		
	КонецЕсли;

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначения.уатПроверкаПравПередЗаписьюВДокументах(ЭтотОбъект, Отказ, , Права);
	
КонецПроцедуры // ПередЗаписью

Процедура ОбработкаЗаполнения(Основание, СтандартнаяОбработка)
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.уатПутевойЛист") ИЛИ ТипЗнч(Основание) = Тип("ДокументОбъект.уатПутевойЛист") Тогда
		
		Дата 		= ТекущаяДата();
		Организация = Основание.Организация;
		ПЛ 			= Основание;
		
		НоваяСтрока				  = РаботникиОрганизации.Добавить();
		НоваяСтрока.Сотрудник	  = Основание.Водитель1;
		НоваяСтрока.ДатаНачала	  = Основание.ДатаВыезда;
		НоваяСтрока.ДатаОкончания = Основание.ДатаВозвращения;
		
		Если ЗначениеЗаполнено(Основание.Водитель2) Тогда
			НоваяСтрока				 		 = РаботникиОрганизации.Добавить();
			НоваяСтрока.Сотрудник	  = Основание.Водитель2;
			НоваяСтрока.ДатаНачала	  = Основание.ДатаВыезда;
			НоваяСтрока.ДатаОкончания = Основание.ДатаВозвращения;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Основание.Сотрудник1) Тогда
			НоваяСтрока				 		 = РаботникиОрганизации.Добавить();
			НоваяСтрока.Сотрудник	  = Основание.Сотрудник1;
			НоваяСтрока.ДатаНачала	  = Основание.ДатаВыезда;
			НоваяСтрока.ДатаОкончания = Основание.ДатаВозвращения;
		КонецЕсли;

		Если ЗначениеЗаполнено(Основание.Сотрудник2) Тогда
			НоваяСтрока				 		 = РаботникиОрганизации.Добавить();
			НоваяСтрока.Сотрудник	  = Основание.Сотрудник2;
			НоваяСтрока.ДатаНачала	  = Основание.ДатаВыезда;
			НоваяСтрока.ДатаОкончания = Основание.ДатаВозвращения;
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

// сохранение ссылки на коллекцию прав, настроек и окружения
Права = Неопределено;
#Если Клиент Тогда
	Права = глПраваУАТ;
#КонецЕсли

мДлинаСуток = 86400;