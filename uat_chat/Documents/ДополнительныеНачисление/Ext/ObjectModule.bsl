
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НачалоПериода(уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря,День) Дн
	               |ИЗ
	               |	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
				   |ГДЕ ДатаКалендаря >= &Дт и ДатаКалендаря < &Дт1 и ВидДня = Значение(Перечисление.уатВидыДнейПроизводственногоКалендаря.Праздник) ";
				   
				   
	Запрос.УстановитьПараметр("Дт",НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Дт1", КонецМЕсяца(Дата));
	тблПраздники = Запрос.Выполнить().Выгрузить();
	
	
	НачМЕс = НачалоМесяца(Дата);
	Для каждого Стр из Исполнители Цикл
		
		Если НачалоМесяца(Стр.Начало) <> НачМЕс ТОгда
			Сообщить("В строке - "+(Исполнители.Индекс(Стр)+1)+" период работы не совпадает с периодом документа!");
			Отказ = Истина;
		КонецЕСЛИ;
		
		Если ВидРасчета.УбратьАвтоРасчетПраздничных = Ложь ТОгда
			//Проставим праздничные
			ЕСли тблПраздники.Найти(НАчалоДня(Стр.Начало),"Дн")<>Неопределено Тогда
				Стр.ВремяПраздничное = Стр.ВремяРаботы;
			КонецЕСЛИ;
		КонецеСЛИ;
		
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = " SELECT
	|  Док.СОтрудник Сотр,
	|  ISNULL(тбСОтр.ЭтоОклад,Ложь) ЭтоОклад,
	|  ISNULL (ISNULL(ISNULL(ISNULL(тбВР.Норма,
	|               тбСОтр.Тариф),
	|               CASE WHEN Док.ВидРасчета = Значение(ПланВидовРасчета.уатОсновныеНачисления.ОплатаЗаРемонт)
	|                     или Док.ВидРасчета = Значение(ПланВидовРасчета.уатОсновныеНачисления.ОплатаЗаТО)     THEN тбТС.Ремонт
	|                    WHEN тбТС.ЛинияПов = 0 THEN тбТС.Линия
	|                    ELSE тбТС.Линия *(1 - ISNULL(тбКадр.Должность.ПовТариф,0))+тбТС.ЛинияПов* ISNULL(тбКадр.Должность.ПовТариф,0) END),
	|               CASE WHEN Док.ВидРасчета = Значение(ПланВидовРасчета.уатОсновныеНачисления.ОплатаЗаРемонт)
	|                     или Док.ВидРасчета = Значение(ПланВидовРасчета.уатОсновныеНачисления.ОплатаЗаТО)     THEN тбМод.Ремонт
	|                    WHEN тбМод.ЛинияПов = 0 THEN тбМод.Линия
	|                    ELSE тбМод.Линия*(1 - ISNULL(тбКадр.Должность.ПовТариф,0))+тбМод.ЛинияПов*ISNULL(тбКадр.Должность.ПовТариф,0) END),
	|               0) * Док.ВидРасчета.КоэфНачисления Линия,
	|  ISNULL (ISNULL(тбТС.Разрыв,тбМод.Разрыв),0) * Док.ВидРасчета.КоэфНачисления Разрыв,
	|  ISNULL (ISNULL(тбТС.Ремонт,тбМод.Ремонт),0) * Док.ВидРасчета.КоэфНачисления Ремонт
	|   INTo ВРТрф
	| FROM (SELECT DISTINCT Сотрудник, ССылка.Видрасчета Видрасчета FROM Документ.ДополнительныеНачисление.Исполнители Т WHERE Т.Ссылка = &Сс )  Док
	| LEFT OUTER JOIN РегистрСведений.ТарифыТСнаЗП.СрезПоследних(&Дт,Модель = &ТС) тбТС ON Док.ВидРасчета.ВариантТарифа <> Значение(Перечисление.ВариантТарифа.Сотрудник)
	| LEFT OUTER JOIN РегистрСведений.ТарифыТСнаЗП.СрезПоследних(&Дт,Модель = &Мод) тбМод ON Док.ВидРасчета.ВариантТарифа <> Значение(Перечисление.ВариантТарифа.Сотрудник)
	| LEFT OUTER JOIN РегистрСведений.уатТарифыСотрудников.СрезПоследних(&Дт,Сотрудник в (&МасСотр) ) тбСотр ON Док.ВидРасчета.ВариантТарифа <> Значение(Перечисление.ВариантТарифа.Модель) 
	|                                                                                                         и тбСотр.Тариф <> 0
	|                                                                                                         и тбСотр.Сотрудник = Док.Сотрудник
	| LEFT OUTER JOIN РегистрСведений.уатСведенияОСотрудниках.СрезПоследних(&Дт,Сотрудник в (&МасСотр) ) тбКадр ON тбКадр.Сотрудник = Док.Сотрудник
	| LEFT OUTER JOIN ПланВидовРасчета.уатОсновныеНачисления тбВР ON тбВР.ссылка =  Док.ВидРасчета и  тбВР.ВариантТарифа = Значение(Перечисление.ВариантТарифа.Сумма)
	|
	|;
	| SELECT
	| &Дт Период,
	| ТблЗП.Сотрудник Водитель,
	| ТблЗП.ССылка.ВидРасчета ВидРасчета,
	| НачалоПериода(ТблЗП.Начало,МЕсяц) ПериодРаботы,
	| ТблЗП.Начало ДатаРаботы,
	//чтобы не было машин по общим спискам
	//| CASE WHEN ISNULL(ТбТрф.Линия,0)=0 AND ТблЗП.ССылка.ВидРасчета.ВариантТарифа <> Значение(Перечисление.ВариантТарифа.Модель) THEN Неопределено ELSE &ТС END ТС,
	| &ТС Как ТС,
	| ISNULL(ТбТрф.Линия,0)  Тариф,
	|
	| CASE WHEN ISNULL(тбТрф.ЭтоОклад,ложь)=Ложь и ISNULL(ТбТрф.Линия,0)=0 и тблЗП.ССылка.ВидРасчета.КоэфНачисления<>0 ТОгда 1 ELSE 0 END Ошибка,
	|
	| CASE WHEN Час(ТБлЗП.ВремяРаботы) + Минута(ТБлЗП.ВремяРаботы)/60 = 0 THEN 1 ELSE 0 END ЧасыДляОборота,
	
	| ВЫразить(Час(ТБлЗП.ВремяРаботы)  + Минута(ТБлЗП.ВремяРаботы)/60 как Число(10,3)) Количество,
	| ВЫразить((Час(ТБлЗП.ВремяРаботы) + Минута(ТБлЗП.ВремяРаботы)/60) * ISNULL(ТбТрф.Линия,0)  как Число(10,2)) Сумма
	|
	|FROM Документ.ДополнительныеНачисление.Исполнители как тблЗП
	|LEFT OUTER JOIN ВРТрф как тбТрф ON тбТрф.Сотр = ТблЗП.Сотрудник OR тбТрф.Сотр IS NULL
	|WHERE тблЗП.ссылка = &сс
	|
	|UNION ALL
	|
	//ПРаздничные
	| SELECT
	| &Дт Период,
	| ТблЗП.Сотрудник Водитель,
	| тбВР.Ссылка ВидРасчета,
	| НачалоПериода(ТблЗП.Начало,МЕсяц) ПериодРаботы,
	| ТблЗП.Начало ДатаРаботы,
	//| CASE WHEN ISNULL(ТбТрф.Линия,0)=0 AND ТблЗП.ССылка.ВидРасчета.ВариантТарифа <> Значение(Перечисление.ВариантТарифа.Модель) THEN Неопределено ELSE &ТС END ТС,
	| &ТС Как ТС,
	| ISNULL(ТбТрф.Линия,0)  Тариф,
	|
	| CASE WHEN ISNULL(тбТрф.ЭтоОклад,ложь)=Ложь и ISNULL(ТбТрф.Линия,0)=0 и тблЗП.ССылка.ВидРасчета.КоэфНачисления<>0 ТОгда 1 ELSE 0 END Ошибка,
	|
	| CASE WHEN Час(ТБлЗП.ВремяРаботы) + Минута(ТБлЗП.ВремяРаботы)/60 = 0 THEN 1 ELSE 0 END ЧасыДляОборота,
	
	| ВЫразить(Час(ТБлЗП.ВремяРаботы)  + Минута(ТБлЗП.ВремяРаботы)/60 как Число(10,3)) Количество,
	| ВЫразить((Час(ТБлЗП.ВремяРаботы) + Минута(ТБлЗП.ВремяРаботы)/60) * ISNULL(ТбТрф.Линия,0)  как Число(10,2)) Сумма
	|
	|FROM Документ.ДополнительныеНачисление.Исполнители как тблЗП
	|LEFT OUTER JOIN ВРТрф как тбТрф ON тбТрф.Сотр = ТблЗП.Сотрудник OR тбТрф.Сотр IS NULL
	|INNER JOIN ПланВидовРасчета.уатОсновныеНачисления тбВР ON тбВР.Ссылка = Значение(ПланВидовРасчета.уатОсновныеНачисления.ДоплатаЗаПраздничныеИВыходные)
	|WHERE тблЗП.ссылка = &сс
	|   и  ВремяПраздничное <> ДатаВремя(1,1,1,0,0,0)
	|   и  тблЗП.ссылка.ВидРасчета.ЭтоРабочиеЧасы = Истина
	|
	|UNION ALL
	|
	//Вахтовые
	| SELECT
	| &Дт Период,
	| ТблЗП.Сотрудник Водитель,
	| СпрГрф.ВидРасчета,
	| НачалоПериода(ТблЗП.Начало,МЕсяц) ПериодРаботы,
	| ТблЗП.Начало ДатаРаботы,
	| &ТС Как ТС,
	//| CASE WHEN ISNULL(ТбТрф.Линия,0)=0 AND ТблЗП.ССылка.ВидРасчета.ВариантТарифа <> Значение(Перечисление.ВариантТарифа.Модель) THEN Неопределено ELSE &ТС END ТС,
	|
	| тбТрф.Линия  Тариф,
	|
	| 0 Ошибка,
	|
	| 1 ЧасыДляОборота,
	
	| 1 Количество,
	|	CASE WHEN ISNULL(СпрГрфМст.Надбавка,0) = 0 
	|         THEN СпрГрф.Надбавка
	|         ELSE СпрГрфМст.Надбавка END  Сумма
	|
	|FROM (SELECT DISTINCT 
	|           ссылка,
	|           Сотрудник,
	|           ВремяРаботы,
	|           Ссылка.Месторождение Месторождение,
	|           НачалоПериода(Начало,День) Начало 
	|        FROM Документ.ДополнительныеНачисление.Исполнители L1
	|       WHERE ссылка = &сс 
	|           и ВремяРаботы <> ДатаВремя(1,1,1,0,0,0) ) как тблЗП
	
	|LEFT OUTER JOIN ВРТрф как тбТрф ON тбТрф.Сотр = ТблЗП.Сотрудник OR тбТрф.Сотр IS NULL
	
	|INNER JOIN РегистрСведений.СведенияОГрафиках.СрезПоследних(&Дт,ФизЛицо в (&МасФЛ)) тбВхт ON  тбВхт.Физлицо = тблЗП.Сотрудник.ФизЛицо
	|                                                                                                            
	|INNER JOIN Справочник.уатГрафикиРаботы СпрГрф ON СпрГрф.ССылка = тбВхт.ГрафикРаботы                                                                                                             
	|                                                                     
	|LEFT OUTER JOIN Справочник.уатГрафикиРаботы.Месторождения СпрГрфМст ON СпрГрф.ССылка = СпрГрфМст.ССылка                                                                                                            
	|                                                                     и СпрГрфМст.Месторождение = тблЗП.Месторождение  
	
	
	|WHERE ISNULL(СпрГрфМст.Надбавка,0) + СпрГрф.Надбавка <> 0
	|  
	|";
	
	запрос.УстановитьПараметр("сс",Ссылка);
	запрос.УстановитьПараметр("Дт",КонецДня(Дата));
	запрос.УстановитьПараметр("ТС",ТранспортноеСредство);
	запрос.УстановитьПараметр("Мод",ТранспортноеСредство.Модель);
	Запрос.УстановитьПараметр("МасСотр",Исполнители.ВыгрузитьКолонку("Сотрудник"));
	
	Мас = Новый Массив;
	Т = Исполнители.Выгрузить(,"Сотрудник");
	Т.Свернуть("Сотрудник","");
	Для каждого с из Т Цикл
		Мас.Добавить(С.Сотрудник.ФизЛицо);
	КонецЦикла;
	Запрос.УстановитьПараметр("МасФЛ",Мас);
	
	Тбл = Запрос.Выполнить().Выгрузить();
	
	Если ТБл.Итог("ОШибка")<>0 ТОгда
		ОТказ=Истина;
		пТ = Тбл.Скопировать();
		пТ.Свернуть("Водитель","Ошибка");
		ДЛя каждого с из пТ Цикл
			Если с.ошибка<>0 ТОгда
				Сообщить("Нет тарифа по "+с.Водитель);
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕСЛИ;
	
	Рег = Движения.РаботаВодителей;
	Рег.Загрузить(Тбл);
	Рег.Записать();
	

КонецПроцедуры

Функция ДанныеПечать()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДополнительныеНачислениеИсполнители.Сотрудник,
	               |	ДополнительныеНачислениеИсполнители.Начало,
	               |	НачалоПериода(ДополнительныеНачислениеИсполнители.Начало,День) Дт,
				   |    1 Инд,
	               |	ДополнительныеНачислениеИсполнители.ВремяРаботы,
	               |	ДополнительныеНачислениеИсполнители.НомерСтроки,
	               |	ДополнительныеНачислениеИсполнители.Сотрудник.Код Код,
	               |	уатСведенияОСотрудникахСрезПоследних.ПодразделениеОрганизации
	               |ИЗ
	               |	Документ.ДополнительныеНачисление.Исполнители КАК ДополнительныеНачислениеИсполнители
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатСведенияОСотрудниках.СрезПоследних(&Дт, Сотрудник В (&МасСотр)) КАК уатСведенияОСотрудникахСрезПоследних
	               |		ПО ДополнительныеНачислениеИсполнители.Сотрудник = уатСведенияОСотрудникахСрезПоследних.Сотрудник
	               |ГДЕ
	               |	ДополнительныеНачислениеИсполнители.Ссылка = &Ссылка";
				   
				   Запрос.УстановитьПараметр("ССылка",ССылка);
				   Запрос.УстановитьПараметр("Дт",ССылка.Дата);
				   Запрос.УстановитьПараметр("МасСотр",Ссылка.Исполнители.ВыгрузитьКолонку("Сотрудник"));
				   
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура Печать(ИНдПеч="") Экспорт
	
	
	Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Таб = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Макет");
	
	обЗгл = Макет.ПолучитьОбласть("Заголовок");
	оТС   = Макет.ПолучитьОбласть("ТС");
	обШапка  = Макет.ПолучитьОбласть("Шапка");
	обСтрока = Макет.ПолучитьОбласть("Строка"+ИНдПеч);
	обИтог = Макет.ПолучитьОбласть("Итог"+ИНдПеч);
	
	обЗгл.Параметры.Заполнить(ССылка);
	обЗгл.Параметры.ДАтаДОк = Формат(Ссылка.Дата,"ДФ=dd.MM.yyyy");
	Таб.Вывести(обЗгл);
	
	Если ЗначениеЗаполнено(ТранспортноеСредство) Тогда
		оТС.Параметры.Заполнить(ССылка);
		оТС.Параметры.ГосНом = ТранспортноеСредство.ГосударственныйНомер;
		оТС.Параметры.ГарНом = ТранспортноеСредство.ГаражныйНомер;
		оТС.Параметры.КодМод = ТранспортноеСредство.Модель.Код;
		Таб.Вывести(оТС);
	КонецЕСЛИ;
	
	Таб.Вывести(обШапка);
	Таб.ПовторятьПриПечатиСтроки = Таб.Область(Таб.ВысотаТаблицы-2,1,Таб.ВысотаТаблицы,Таб.ШиринаТаблицы);
	
	итЧс = 0;
	ТБл = ДанныеПечать();
	
	ДЛя каждого стр из ТБл Цикл
		
		итЧс = итЧс +  (Стр.ВремяРаботы-НачалоДня(Стр.ВремяРаботы)) / 3600;
		
		обСтрока.Параметры.Заполнить(Стр);
		Таб.Вывести(обСтрока);
		
	КонецЦикла;
	
	ТБл.свернуть("Сотрудник,Дт,Инд","");
	ТБл.свернуть("","Инд");
	Стк = Новый Структура;
	Стк.Вставить("Часов",итЧс);
	Стк.Вставить("Дней",Тбл.Итог("Инд"));
	обИтог.Параметры.Заполнить(Стк);
	
	Таб.Вывести(обИтог);
	
	Если ИНдПеч = "" ТОгда
		Обл = Таб.Область(,11,,12);
		Таб.УдалитьОбласть(Обл,ТипСмещенияТабличногоДокумента.ПоВертикали);
	КонецеСЛИ;
	
	
	Таб.ТолькоПросмотр = Истина;
	Таб.ОтображатьСетку = Ложь;
	Таб.ОтображатьЗаголовки = Ложь;
	Таб.Показать();
	
КонецПроцедуры
