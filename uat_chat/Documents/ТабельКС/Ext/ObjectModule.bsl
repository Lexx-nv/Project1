
Функция СткШапка(Корректировка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТабельКС.Организация.НаименованиеПолное Организация,
	               |	ТабельКС.Организация Орг,
	               |	ТабельКС.Подразделение,
	               |	CASE WHEN ТабельКС.Переходной THEN ""(Переходной)"" ELSE "" "" END Переходной,
	               |	ТабельКС.Дата,
	               |	ISNULL(Подп0.Сотрудник.ФизЛицо,ОтвРук.ФизическоеЛицо)  КАК Рук,
	               |	ISNULL(Подп1.Сотрудник.ФизЛицо,ОтвОтиз.ФизическоеЛицо) КАК ОТИЗ,
	               |	ISNULL(Подп2.Сотрудник.ФизЛицо,ОтвНач.ФизическоеЛицо)  КАК Нач,
	               |	ISNULL(Подп3.Сотрудник.ФизЛицо,ОтвОК.ФизическоеЛицо)   КАК ОК
	               |ИЗ
	               |	Документ.ТабельКС КАК ТабельКС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дт,ОтветственноеЛицо = Значение(Перечисление.ОтветственныеЛицаОрганизации.ДирЭкспл)) КАК ОтвРук
	               |		ПО ТабельКС.Организация = ОтвРук.СтруктурнаяЕдиница
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дт,ОтветственноеЛицо = Значение(Перечисление.ОтветственныеЛицаОрганизации.НачОТИЗ)) КАК ОтвОтиз
	               |		ПО ТабельКС.Организация = ОтвОтиз.СтруктурнаяЕдиница
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дт,ОтветственноеЛицо = Значение(Перечисление.ОтветственныеЛицаОрганизации.НачОК)) КАК ОтвОК
	               |		ПО ТабельКС.Организация = ОтвОК.СтруктурнаяЕдиница
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дт,ОтветственноеЛицо = Значение(Перечисление.ОтветственныеЛицаОрганизации.Руководитель)) КАК ОтвНач
	               |		ПО ТабельКС.Подразделение = ОтвНач.СтруктурнаяЕдиница
				   |
				   |
				   |    LEFT OUTER JOIN Справочник.ПодразделенияОрганизаций.Подписи Подп0 ON  Подп0.Ссылка = ТабельКС.Подразделение и Подп0.НомерСтроки = 1 и Подп0.Сотрудник <> Значение(Справочник.уатСотрудники.ПустаяССылка)
				   |    LEFT OUTER JOIN Справочник.ПодразделенияОрганизаций.Подписи Подп1 ON  Подп0.Ссылка = ТабельКС.Подразделение и Подп0.НомерСтроки = 2 и Подп0.Сотрудник <> Значение(Справочник.уатСотрудники.ПустаяССылка)
				   |    LEFT OUTER JOIN Справочник.ПодразделенияОрганизаций.Подписи Подп2 ON  Подп0.Ссылка = ТабельКС.Подразделение и Подп0.НомерСтроки = 3 и Подп0.Сотрудник <> Значение(Справочник.уатСотрудники.ПустаяССылка)
				   |    LEFT OUTER JOIN Справочник.ПодразделенияОрганизаций.Подписи Подп3 ON  Подп0.Ссылка = ТабельКС.Подразделение и Подп0.НомерСтроки = 4 и Подп0.Сотрудник <> Значение(Справочник.уатСотрудники.ПустаяССылка)
				   |
				   |
				   |
				   |WHERE &сс = ТабельКС.ссылка";
				   Запрос.УстановитьПараметр("Дт",Ссылка.Дата);
				   Запрос.УстановитьПараметр("сс",Ссылка);
				   тбл = запрос.Выполнить().Выгрузить();
				   
				   Стк = Новый Структура("Переходной,Организация,Орг,Подразделение,Дата,Рук,ДлжРук,ОТИЗ,ДлжОТИЗ,Нач,ДлжНач,ОК,ДлжОК,ДлжДисп,Дисп");
				   ЗаполнитьЗначенияСвойств(Стк,Тбл[0]);
				   
				   С = уатОбщегоНазначенияТиповые.ДанныеФизЛица(Стк.Орг,Тбл[0].Рук,Стк.Дата);
				   Стк.Рук = С.Представление;
				   Стк.длжРук = С.Должность;
				   
				   С = уатОбщегоНазначенияТиповые.ДанныеФизЛица(Стк.Орг,Тбл[0].ОТИЗ,Стк.Дата);
				   Стк.ОТИЗ = С.Представление;
				   Стк.длжОТИЗ = С.Должность;
				   
				   С = уатОбщегоНазначенияТиповые.ДанныеФизЛица(Стк.Орг,Тбл[0].Нач,Стк.Дата);
				   Стк.Нач = С.Представление;
				   Стк.длжНач = С.Должность;
				   
				   С = уатОбщегоНазначенияТиповые.ДанныеФизЛица(Стк.Орг,Тбл[0].ОК,Стк.Дата);
				   Стк.ОК = С.Представление;
				   Стк.длжОК = С.Должность;
				   
				   С = уатОбщегоНазначенияТиповые.ДанныеФизЛица(Стк.Орг,ПараметрыСеанса.ТекущийПользователь.ФизЛицо,Стк.Дата);
				   Стк.дисп = С.Представление;
				   Стк.длжДисп = С.Должность;
				   
				   Если Корректировка Тогда
					   Стк.Переходной = " (корректировочный)";
				   КонецЕСЛИ;
				   
				   Возврат Стк;
	
КонецФункции

Функция ПолучитьТблНач(ФильтрСотр)
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	ТабельКСНачисления.Сотрудник,
	                |	ТабельКСНачисления.ВидРасчета,
	                |	ТабельКСНачисления.ВидРасчета.Код Код,
	                |	ТабельКСНачисления.Сумма,
	                |	ТабельКСНачисления.Часы,
	                |	ТабельКСНачисления.Дни
	                |ИЗ
	                |	Документ.ТабельКС.Начисления КАК ТабельКСНачисления
					|WHERE Ссылка = &сс 
					|и (Сотрудник = &ФильтрСотр или &ФильтрСотр = Неопределено)";
				   Запрос.УстановитьПараметр("сс",Ссылка);
				   Запрос.УстановитьПараметр("ФильтрСотр",ФильтрСотр);
				   
	Возврат Запрос.Выполнить().Выгрузить();			   
	
КонецФункции

Процедура РаскраситьВыхДни(Шапка1)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДЕНЬ(уатРегламентированныйПроизводственныйКалендарь.ДатаКалендаря) КАК Дт
	               |ИЗ
	               |	РегистрСведений.уатРегламентированныйПроизводственныйКалендарь КАК уатРегламентированныйПроизводственныйКалендарь
				   |where уатРегламентированныйПроизводственныйКалендарь.Шестидневка = 0 AND ДатаКалендаря >= &Дт и ДатаКалендаря < &Дт1";
				   Запрос.УстановитьПараметр("Дт",НачалоМесяца(Дата));
				   Запрос.УстановитьПараметр("Дт1",КонецМесяца(дата)+1);
				   Тбл = Запрос.Выполнить().Выгрузить();
				   
	  
   Для каждого стр из Тбл Цикл
		Шапка1.область("Ш"+Стр.Дт).ЦветФона = WebЦвета.ЛососьСветлый;   
   КонецЦикла;
	
КонецПроцедуры

Функция Данные(ФильтрСотр)
	
		
	Запрос = новый Запрос;
	Запрос.Текст = "
				   |ВЫБРАТЬ
				   |	Тбл.Сотрудник,
				   |	Тбл.ДатаРаботыНач,
				   |	Тбл.ДатаРаботыКон
				   |INTO ВРТбл	
				   |FROM &Тбл Тбл	
				   |;
				   |ВЫБРАТЬ
	               |	ТабельКС.Сотрудник КАК Сотрудник,
	               |	ТабельКС.ДатаПриема,
	               |	ТабельКС.ДатаУвольнения,
	               |	MIN(ТабельКС.ДатаРаботыНач) ДатаРаботыНач,
	               |	MAX(ТабельКС.ДатаРаботыКон)ДатаРаботыКон ,
	               |	SUM(ТабельКС.КлдДни) КлдДни,
	               |	CASE WHEN ТабельКС.ЭтоОклад THEN ""Оклад"" ELSE ""     "" END, 
				   //|        +  CASE WHEN ТабельКС.ПроцСделка<>0 THEN "" Сдел.вып.: "" END ЭтоОклад,
				   |    MAX(ТабельКС.Тариф) Тариф,
				   |    SUM(ТабельКС.ПроцСделка) ПроцСделка,
				   
	               |	ТабельКС.Сотрудник.Код КАК ТабельныйНомер,
	               |	уатСведенияОСотрудникахСрезПоследних.Должность КАК Должность,
	               |	уатГрафикиСрезПоследних.ГрафикРаботы КАК ГрафикРаботы,
				   
	               |	ISNULL(ВложенныйЗапрос.ЧасыДиспа,0) ЧасыДиспа,
				   
				   |    тбНач.Сумма,
				   |    тбФОВ.ЧасыРаб,
				   |    тбФОВ.ДниРаб,
				   |    тбФОВ.ДниКадр,
				   |    SUM(ТабельКС.Норма6чс) НормаЧасовВМесяц,
				   |    тбФОВ.НормаДниСвх  УменьшениеНормаЧасыСвх,
				   |    тбФОВ.НормаДниСвх,
				   |    SUM(ТабельКС.КлдДни) - тбФОВ.ДниРаб - тбФОВ.ДниКадр ВыхДни
	               |ИЗ
	               |	Документ.ТабельКС.Сотрудники КАК ТабельКС
				   |
				   |        ЛЕВОЕ Соединение (SELECT Сотрудник, 
				   |                                 SUM(ЧасыРаб)     ЧасыРаб, 
				   |                                 SUM(ДниРаб)      ДниРаб, 
				   |                                 SUM(ДниКадр)     ДниКадр, 
				   |                                 SUM(НормаДниСвх) НормаДниСвх 
				   |                          FROM  Документ.ТабельКС.ФОВ КАК ФОВ
				   |                          WHERE ССылка = &сс
				   |                          GROUP BY Сотрудник
				   |                          ) тбФОВ ON тбФОВ.Сотрудник = ТабельКС.Сотрудник
				   |
				   |        ЛЕВОЕ Соединение (SELECT Сотрудник, 
				   |                                 SUM(Сумма)     Сумма 
				   |                          FROM  Документ.ТабельКС.Начисления КАК Начисления
				   |                          WHERE ССылка = &сс
				   |                          GROUP BY Сотрудник
				   |                          ) тбНач ON тбНач.Сотрудник = ТабельКС.Сотрудник
				   |
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатСведенияОСотрудниках.СрезПоследних(&ПерДт1) КАК уатСведенияОСотрудникахСрезПоследних
	               |		ПО ТабельКС.Сотрудник = уатСведенияОСотрудникахСрезПоследних.Сотрудник
				   |
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОГрафиках.СрезПоследних(&ПерДт1) КАК уатГрафикиСрезПоследних
	               |		ПО ТабельКС.Сотрудник.ФизЛицо = уатГрафикиСрезПоследних.ФизЛицо
				   |
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (
				   |        Выбрать  Водитель1,
				   |                 СУММА(ЧасыДиспа) ЧасыДиспа
				   |        Из (
				   |		ВЫБРАТЬ
	               |			уатПутевойЛист.Водитель1 КАК Водитель1,
	               |			СУММА(уатПутевойЛист.ЧасыДиспа) КАК ЧасыДиспа
	               |		ИЗ
	               |			Документ.уатПутевойЛист КАК уатПутевойЛист
				   |        INNER JOIN ВРТбл Тбл ON Тбл.Сотрудник = уатПутевойЛист.Водитель1 
				   |                              и Тбл.ДатаРаботыНач <= НачалоПериода(уатПутевойЛист.ДатаВыезда,День)
				   |                              и Тбл.ДатаРаботыКон >= НачалоПериода(уатПутевойЛист.ДатаВыезда,День)
	               |		ГДЕ  Проведен = Истина
	               |			и уатПутевойЛист.ДатаВыезда >= &дт
	               |			И уатПутевойЛист.ДатаВыезда < &дт1
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			уатПутевойЛист.Водитель1
				   |
				   |        UNION ALL
				   |
	               |		ВЫБРАТЬ
	               |			уатПутевойЛист.Водитель2 КАК Водитель1,
	               |			СУММА(уатПутевойЛист.ЧасыДиспа2вод) КАК ЧасыДиспа
	               |		ИЗ
	               |			Документ.уатПутевойЛист КАК уатПутевойЛист
				   |        INNER JOIN ВРТбл Тбл ON Тбл.Сотрудник = уатПутевойЛист.Водитель2 
				   |                              и Тбл.ДатаРаботыНач <= НачалоПериода(уатПутевойЛист.ДатаВыезда,День)
				   |                              и Тбл.ДатаРаботыКон >= НачалоПериода(уатПутевойЛист.ДатаВыезда,День)
	               |		ГДЕ Проведен = Истина
	               |			И уатПутевойЛист.ДатаВыезда >= &дт
	               |			И уатПутевойЛист.ДатаВыезда < &дт1
	               |		    и Водитель2 <> Значение(Справочник.уатСотрудники.ПустаяСсылка)
	               |		СГРУППИРОВАТЬ ПО
	               |			уатПутевойЛист.Водитель2  ) Тбл
				   |
				   |       GROUP BY Водитель1
				   |
				   |) КАК ВложенныйЗапрос
	               |		ПО ТабельКС.Сотрудник = ВложенныйЗапрос.Водитель1
	               |ГДЕ
	               |	ТабельКС.Ссылка = &сс  
	               |и (ТабельКС.Сотрудник = &ФильтрСотр или &ФильтрСотр = Неопределено)
				   |GROUP BY
	               |	ТабельКС.Сотрудник,
	               |	ТабельКС.ДатаПриема,
	               |	ТабельКС.ДатаУвольнения,
	               |	CASE WHEN ТабельКС.ЭтоОклад THEN ""Оклад"" ELSE ""     "" END, 
				   //|        + CASE WHEN ТабельКС.ПроцСделка<>0 THEN "" Сдел.вып.: "" END,
				   
	               |	ТабельКС.Сотрудник.Код,
	               |	уатСведенияОСотрудникахСрезПоследних.Должность,
	               |	уатГрафикиСрезПоследних.ГрафикРаботы,
				   
	               |	ISNULL(ВложенныйЗапрос.ЧасыДиспа,0),
				   
				   |    тбНач.Сумма,
				   |    тбФОВ.ЧасыРаб,
				   |    тбФОВ.ДниРаб,
				   |    тбФОВ.ДниКадр,
				   |    тбФОВ.НормаДниСвх
				   |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТабельКС.Сотрудник.Наименование ";
				   Запрос.УстановитьПараметр("СС",ССылка);
				   Запрос.УстановитьПараметр("Дт",НачалоМесяца(Дата));
				   Запрос.УстановитьПараметр("Дт1",КонецМесяца(Дата)+1);
				   Запрос.УстановитьПараметр("ПерДт1",КонецМесяца(Дата));
				   Запрос.УстановитьПараметр("Тбл",Сотрудники.Выгрузить());
				   Запрос.УстановитьПараметр("ФильтрСотр",ФильтрСотр);
				   
				   
				   
	 Возврат Запрос.Выполнить().Выгрузить();
	 
КонецФункции

Функция ДанныеФОВ(ФильтрСотр)
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |    Сотрудник,
	               |	ДЕНЬ(ТабельКСФОВ.ДатаРаботы) КАК ДатаРаботы,
	               |	ТабельКСФОВ.ЧасыРаб,
	               |	ТабельКСФОВ.ДниКадр,
	               |	ТабельКСФОВ.Часы,
	               |	ТабельКСФОВ.Дни,
	               |	ТабельКСФОВ.ЭтоКорректировка,
	               |	ISNULL(ТабельКСФОВ.ВидВремени.БуквенныйКод,""    "") КАК Код
	               |ИЗ
	               |	Документ.ТабельКС.ФОВ КАК ТабельКСФОВ
	               |ГДЕ
	               |	ТабельКСФОВ.Ссылка = &сс
	               |и (Сотрудник = &ФильтрСотр или &ФильтрСотр = Неопределено)
	               |УПОРЯДОЧИТЬ ПО
	               |	Сотрудник,
	               |	ТабельКСФОВ.ВидВремени.ЦифровойКод
	               |ИТОГИ Сумма(ЧасыРаб), Сумма(Часы), Сумма(ДниКадр) ПО
	               |	Сотрудник,
	               |	ДатаРаботы";
				   Запрос.УстановитьПараметр("СС",ССылка);
				   Запрос.УстановитьПараметр("ФильтрСотр",ФильтрСотр);
				   
	 Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	 ВЫборка.Следующий();
	 Возврат Выборка;
	
КонецФункции

Процедура Печать(ФильтрСотр=Неопределено,Корректировка=Ложь,Таб=Неопределено,Индикатор=0) Экспорт
	
	Таб.Очистить();
	//Таб = Новый ТабличныйДокумент;
	
	Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Макет = ПолучитьМакет("Макет");
	врТаб = Новый ТабличныйДокумент;
	Таб.ИмяПараметровПечати = "ПечатьТабельА3";
	врТаб.ИмяПараметровПечати = "ПечатьТабельА3";
	
	Попытка 
		врТаб.ПроверитьВывод(Макет);		
	Исключение
		Таб.Вывести(Макет);
		Предупреждение("Укажите параметры печати:
		|Файл -> Параметры печати!");
		ВозвраТ;
	КонецПопытки;
	
	обСтрокаНач = Макет.ПолучитьОбласть("Строка|й2");
	обСтрокаИт  = Макет.ПолучитьОбласть("Строка|й3");
	обСтрокаКдр = Макет.ПолучитьОбласть("Строка|й4");
	
	Мак = Макет.ПолучитьОбласть("Мак");
	
	Шапка1 = Макет.ПолучитьОбласть("Шапка|й1");
	Шапка2 = Макет.ПолучитьОбласть("Шапка|й2");
	Шапка3 = Макет.ПолучитьОбласть("Шапка|й3");
	Шапка4 = Макет.ПолучитьОбласть("Шапка|й4");
	
	Итог1 = Макет.ПолучитьОбласть("Итог|й1");
	Итог2 = Макет.ПолучитьОбласть("Итог|й2");
	Итог3 = Макет.ПолучитьОбласть("Итог|й3");
	Итог4 = Макет.ПолучитьОбласть("Итог|й4");
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	Шрифт1 = Новый Шрифт(Макет.Область("Шрифт1").Шрифт);
	Шрифт2 = Новый Шрифт(Макет.Область("Шрифт2").Шрифт);
	ЧислоКонецМесяца = День(КонецМЕсяца(Дата));
	
	максДлинаДня = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Организация, ПланыВидовХарактеристик.уатПраваИНастройки.ПродолжительностьРабочегоДняНорма);
	
	Если ФильтрСотр<>Неопределено Тогда
		тблКадры = ФОВ.Выгрузить(Новый Структура("Сотрудник",ФильтрСотр));
	ИНаче
		тблКадры = ФОВ.Выгрузить();
	КонецЕслИ;
	
	тблКадры.Свернуть("Сотрудник,ВидВремени","ДниКадр");
	итКадры = тблКадры.Скопировать();
	итКадры.Свернуть("ВидВремени","ДниКадр");
	Для а=-итКадры.Количество() по -1 Цикл
		с = итКадры[-а-1];
		Если с.Дникадр = 0 Тогда
			итКадры.Удалить(с);
		КонецеСЛИ;
	КонецЦикла;
	
	тбНач = ПолучитьТблНач(ФильтрСотр);
	итНач = тбНач.Скопировать(,"ВидРасчета,Код,Сумма,Часы,Дни");
	итНач.Свернуть("ВидРасчета,Код","Сумма,Часы,Дни");
	итНач.Сортировать("Код");
	
	
	//вывести шапку
	СткШапка = СткШапка(Корректировка);
	Мак.Параметры.Заполнить(СткШапка);
	врТаб.Вывести(Мак);
	
	РаскраситьВыхДни(Шапка1);
	
	врТаб.Вывести(Шапка1);
	
	ДЛя каждого стр из итНач Цикл
		Шапка2.Параметры.ИмяВР = стр.ВидРасчета;	
		врТаб.Присоединить(Шапка2);
	КонецЦикла;
	
	врТаб.Присоединить(Шапка3);
	
	ДЛя каждого стр из итКадры Цикл
		Шапка4.Параметры.ИмяВР = стр.ВидВремени;	
		врТаб.Присоединить(Шапка4);
	КонецЦикла;
	
	ОблПостШапка = врТаб.ПолучитьОбласть(6,,8);
	
	//ВЫВОД ТАБЛИЦЫ
	ВыбФОВ = ДанныеФОВ(ФильтрСотр);
	тбСотр = данные(ФильтрСотр);
	Для каждого Стр из тбСотр Цикл
		
		ном = тбСотр.Индекс(Стр)+1;
		Индикатор = ном/тбСотр.Количество()*100;
		
		обСтрока = Макет.ПолучитьОбласть("Строка|й1");
		обСтрока.Параметры.Ном = ном;
		обСтрока.Параметры.Заполнить(Стр);
		
		МасДн = Новый Массив;
		//Выведем таблицу по дням
		ВЫбФов.Сбросить();
		Если ВыбФов.НайтиСледующий(Новый Структура("Сотрудник",Стр.Сотрудник)) Тогда
			
			ВыбДт = ВыбФов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыбДт.Следующий() Цикл
				Выб = ВыбДт.Выбрать();
				МасДн.Добавить(ВыбДТ.ДатаРаботы);
				
				ВыбКол = Выб.Количество();
				Позиция=0;
				Пока Выб.Следующий() Цикл
					Если СокрЛП(Выб.Код) = ""	Тогда ПродолжитЬ; КонецЕСЛИ;
					
					Позиция = Позиция+1;
					обСтрока.Параметры["Д"+Выб.ДатаРаботы+"_"+Позиция] = ""+?(Выб.Часы=0,"",Выб.Часы)+""+?(Выб.ЭтоКорректировка,НРЕГ(СокрЛП(Выб.Код)),СокрЛП(Выб.Код));
					
					Если Позиция=4 ТОгда Прервать; КонецЕСЛИ;
				КонецЦикла;
				
				Если Позиция = 1 Тогда
					Яч = обСтрока.Область("Дт"+ВыбДТ.ДатаРаботы);
					Яч.Объединить();
					Яч.Шрифт = Шрифт1;
				КонецЕСЛИ;
				Если Позиция = 2 Тогда
					Яч = обСтрока.Область("Дт"+ВыбДТ.ДатаРаботы+"_2");
					Яч.Объединить();
					Яч.Шрифт = Шрифт2;
				КонецЕСЛИ;
				Если Позиция = 2 или Позиция = 3 Тогда
					Яч = обСтрока.Область("Дт"+ВыбДТ.ДатаРаботы+"_1");
					Яч.Объединить();
					Яч.Шрифт = Шрифт2;
				КонецЕСЛИ;
				
				Если (ВыбДт.ДниКадр > 0 и ВыбДт.Часы > 0) 
					или (ВыбДТ.ЧасыРаб > максДлинаДня) Тогда
					обСтрока.Область("Дт"+ВыбДТ.ДатаРаботы).ЦветФона = WebЦвета.ЛососьСветлый;
				КонецЕСЛИ;
				
			
				
			КонецЦиклА;
		КонецЕслИ;
		
		//Проставим выходные и нерабочие символы
		НачДн = День(Стр.ДатаРаботыНач);
		КонДн = День(Стр.ДатаРаботыКон);
		Для а=1 по 31 Цикл
			Рез = МасДн.Найти(а);
			Яч = обСтрока.Область("Дт"+а);
			Если Рез =неопределено Тогда
				Если а > ЧислоКонецМесяца Тогда
					обСтрока.Параметры["Д"+а+"_1"] = "Х";
				ИНаче
					обСтрока.Параметры["Д"+а+"_1"] = "-";
				КонецЕСЛИ;
				
				Яч.Объединить();	
				Яч.Шрифт = Шрифт1;
			ИНачеЕсли Рез <>неопределено и а<НачДн или а>КонДн Тогда
				Яч.ЦветФона = WebЦвета.ЛососьСветлый;
			КонецЕСЛИ;
		КонецЦиклА;
		
		 //пМас = тбНач.НайтиСтроки(Новый Структура("Сотрудник,ВидРасчета",Стр.Сотрудник,ПланыВидовРасчета.уатОсновныеНачисления.ОплатаПоЧасовомуТарифу));
		 //Если пМас.Количество() <> 0 ТОгда
		 //	Если Стр.ЧасыДиспа <> пМас[0].Часы Тогда
		 //   	 обСтрока.Область("чсДисп").ЦветФона = WebЦвета.ЛососьСветлый;		 
		 //   	 обСтрока.Область("чсДисп").Текст = Стр.ЧасыДиспа;		 
		 //	КонецЕСЛИ;
		 //КонецЕСЛИ;
		 
		 Если Стр.ПроцСделка<>0 и
			 (Стр.ПроцСделка>130 OR Стр.ПроцСделка<55) Тогда
				 обСтрока.Область("полеОклад").ЦветФона = WebЦвета.ЛососьСветлый;		 
		 КонецеСЛИ;
		 
		 //Проверим вывод страницы на печать
		 МасВыв = Новый Массив;
		 МасВыв.Добавить(обСтрока);
		 
		 Если Таб.ВысотаТаблицы > 30 Тогда //т.е у нас больше 1 страницы
			 МасВыв.Добавить(ОблПостШапка);
		 КонецЕСЛИ;
	 
		 Если тбСотр.Индекс(Стр)+1 = тбСотр.Количество() Тогда
			 МасВыв.Добавить(Итог1);
			 МасВыв.Добавить(Подвал);
		 КонецЕСЛИ;
		 
	 	 Если Не врТаб.ПроверитьВывод(МасВыв) Тогда
			 Таб.вывести(врТаб);
			 Таб.ВывестиГоризонтальныйРазделительСтраниц();
			 врТаб.УдалитьОбласть(врТаб.Область(1,,врТаб.ВысотаТаблицы),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		 КонецесЛИ;
		 врТаб.Вывести(обСтрока);
		 
		 
		 //Секция начислений
		 Для каждого стНач из итНач Цикл
			 пМас = тбНач.НайтиСтроки(Новый Структура("Сотрудник,ВидРасчета",Стр.Сотрудник,стНач.ВидРасчета));
			 Если пМас.Количество()<>0 Тогда 
				обСтрокаНач.Параметры.Заполнить(пМас[0]);	 
			 ИНаче
				обСтрокаНач.Параметры.Сумма=0;
				обСтрокаНач.Параметры.Часы=0;
				обСтрокаНач.Параметры.Дни=0;
			 КонецЕсЛИ;
			  врТаб.Присоединить(обСтрокаНач);
		  КонецЦикла;
		  
		  //Секция итогов
		  обСтрокаИт.Параметры.Заполнить(Стр);
		  врТаб.Присоединить(обСтрокаИт);
		  
		  //Секция кадров
		  Для каждого стКдр из итКадры Цикл
			 пМас = тблКадры.НайтиСтроки(Новый Структура("Сотрудник,ВидВремени",Стр.Сотрудник,стКдр.ВидВремени));
			 Если пМас.Количество()<>0 Тогда 
				обСтрокаКдр.Параметры.ДниКадр = пМас[0].ДниКадр;	 
			 ИНаче
				обСтрокаКдр.Параметры.ДниКадр=0;
			 КонецЕсЛИ;
			  врТаб.Присоединить(обСтрокаКдр);
		  КонецЦиклА;
		
	  КонецЦиклА;
	  Таб.ВЫвести(врТаб);
	  
	  
	  тбСотр.СвернутЬ("","Сумма,ЧасыРаб,ДниРаб,КлдДни,ВыхДни");
	  
	  Таб.Вывести(Итог1);
	  Для каждого стНач из итНач Цикл
		  Итог2.Параметры.Заполнить(стНач);	 
		  Таб.Присоединить(Итог2);
	  КонецЦикла;
	  Итог3.Параметры.Заполнить(тбСотр[0]);
	  Таб.Присоединить(Итог3);
	  
	  Для каждого стКдр из итКадры Цикл
		  Итог4.Параметры.ДниКадр = стКдр.ДниКадр;
		  Таб.Присоединить(Итог4);
	  КонецЦиклА;
	  
	  Подвал.Параметры.Заполнить(СткШапка);
	  Таб.Вывести(Подвал);
	  
	  Таб.ПовторятьПриПечатиСтроки = Таб.Область(6,,8);
	  
	  Таб.ФиксацияСверху = 8;
	  Таб.ФиксацияСлева = 2;
	  Таб.ОтображатьЗаголовки = Ложь;
	  Таб.ОтображатьСетку = Ложь;
	  Таб.ТолькоПросмотр = Истина;
	 //Таб.Показать();
	
	
	
КонецПроцедуры
