// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	мЗапрос = Новый Запрос;
	мЗапрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Регистратор,
	|	ТаблицаДокумента.Ссылка.Дата КАК Период,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.Количество,
	|	ТаблицаДокумента.ТС,
	|	ТаблицаДокумента.Водитель,
	|	ТаблицаДокумента.Сумма КАК Стоимость,
	|	ТаблицаДокумента.Ссылка.Склад КАК Склад,
	|	0 КАК СтоимостьУпр
	|ИЗ
	|	Документ.уатВыдачаРасходныхМатериалов.Материалы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	
	Если уатРаботаСМетаданными.естьСпрЕдиницыИзмерения() тогда
		СтрокаПоиска  = "ТаблицаДокумента.Количество";
		СтрокаЗамены  = "ВЫРАЗИТЬ(ТаблицаДокумента.Количество * ТаблицаДокумента.ЕдиницаИзмерения.Коэффициент / ТаблицаДокумента.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)) КАК Количество ";
		мЗапрос.Текст = СтрЗаменить(мЗапрос.Текст,СтрокаПоиска,СтрокаЗамены);
	КонецЕсли;
	мЗапрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	ТаблицаДокумента = мЗапрос.Выполнить().Выгрузить();
	
	//управляемая блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатПартииТоваровНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ТаблицаДокумента;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатНоменклатураТС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ТаблицаДокумента;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ТС", "ТС");
	Блокировка.Заблокировать();
	
	Если уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ДокументСсылка.Организация, ПланыВидовХарактеристик.уатПраваИНастройки.ВестиСкладскойУчетУАТ) Тогда
		ТаблицаПартий = уатПроведение.ПолучитьТаблицуПартийДляСписания(ТаблицаДокумента, уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ДокументСсылка.Организация, ПланыВидовХарактеристик.уатПраваИНастройки.СпособОценкиМПЗ),СтруктураДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		ТаблицаПартий.Колонки.Добавить("ОсталосьКол");
		ТаблицаПартий.Колонки.Добавить("ОсталосьСтоимость");
		ТаблицаПартий.Колонки.Добавить("ОсталосьСтоимостьУпр");
		Для каждого ТекСтрокаПартий ИЗ ТаблицаПартий Цикл
			ТекСтрокаПартий.ОсталосьКол          = ТекСтрокаПартий.Количество;
			ТекСтрокаПартий.ОсталосьСтоимость    = ТекСтрокаПартий.Стоимость;
			ТекСтрокаПартий.ОсталосьСтоимостьУпр = ТекСтрокаПартий.СтоимостьУпр;
		КонецЦикла;
		Для каждого ТекСтрокаДокумента ИЗ ТаблицаДокумента Цикл
			СписатьСтоимость    = 0;
			СписатьСтоимостьУпр = 0;
			ОсталосьСписать     = ТекСтрокаДокумента.Количество;
			
			Для каждого ТекСтрокаПартий ИЗ ТаблицаПартий Цикл
				Если ТекСтрокаПартий.Номенклатура <> ТекСтрокаДокумента.Номенклатура 
				 ИЛИ ТекСтрокаПартий.ОсталосьКол = 0 тогда
					Продолжить;
				КонецЕсли;
				Если ОсталосьСписать = 0 тогда
					Прервать;
				КонецЕсли;
				СписатьКол = Мин(ТекСтрокаПартий.ОсталосьКол,ОсталосьСписать);
				Если СписатьКол = ТекСтрокаПартий.ОсталосьКол тогда
					СписатьСтоимость    = СписатьСтоимость    + ТекСтрокаПартий.ОсталосьСтоимость;
					СписатьСтоимостьУпр = СписатьСтоимостьУпр + ТекСтрокаПартий.ОсталосьСтоимостьУпр;
				Иначе
					СписатьСтоимость    = СписатьСтоимость    + Окр(ТекСтрокаПартий.ОсталосьСтоимость    / ТекСтрокаПартий.ОсталосьКол * СписатьКол,2);
					СписатьСтоимостьУпр = СписатьСтоимостьУпр + Окр(ТекСтрокаПартий.ОсталосьСтоимостьУпр / ТекСтрокаПартий.ОсталосьКол * СписатьКол,2);
				КонецЕсли;
				ТекСтрокаПартий.ОсталосьКол          = ТекСтрокаПартий.ОсталосьКол          - СписатьКол;
				ТекСтрокаПартий.ОсталосьСтоимость    = ТекСтрокаПартий.ОсталосьСтоимость    - СписатьСтоимость;
				ТекСтрокаПартий.ОсталосьСтоимостьУпр = ТекСтрокаПартий.ОсталосьСтоимостьУпр - СписатьСтоимостьУпр;
				ОсталосьСписать = ОсталосьСписать - СписатьКол;
			КонецЦикла;
			ТекСтрокаДокумента.Стоимость    = СписатьСтоимость;
			ТекСтрокаДокумента.СтоимостьУпр = СписатьСтоимостьУпр;
		КонецЦикла;
	Иначе
		
	КонецЕсли;
	
	ТаблицаНоменклатурыТС = ТаблицаДокумента.Скопировать();
	
	ЗапросПартии = Новый Запрос();
	ЗапросПартии.Текст = 
	"ВЫБРАТЬ
	|	ТабДанных.Склад,
	|	ТабДанных.Номенклатура,
	|	ТабДанных.Партия,
	|	ТабДанных.Количество,
	|	ТабДанных.Стоимость,
	|	ТабДанных.СтоимостьУпр
	|ПОМЕСТИТЬ ВремТаблицаПартий
	|ИЗ
	|	&ТаблицаПарам КАК ТабДанных
	|;
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период,
	|	&Регистратор,
	|	ТабДанных.Склад КАК Склад,
	|	ТабДанных.Партия,
	|	ТабДанных.Номенклатура,
	|	ТабДанных.Количество,
	|	ТабДанных.Стоимость,
	|	ТабДанных.СтоимостьУпр
	|ИЗ ВремТаблицаПартий КАК ТабДанных";
	
	ЗапросПартии.УстановитьПараметр("Период"         , ДокументСсылка.Дата);
	ЗапросПартии.УстановитьПараметр("ТаблицаПарам"   , ТаблицаПартий);
	ЗапросПартии.УстановитьПараметр("Регистратор"    , ДокументСсылка);
	
	МассивРезультатов = ЗапросПартии.ВыполнитьПакет();

	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДокумента"     , ТаблицаДокумента);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартии"        , МассивРезультатов[1].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНоменклатурыТС", ТаблицаНоменклатурыТС);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ДокументСсылка);
	
	мЗапрос = Новый Запрос;
	мЗапрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц; 
	мЗапрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.Ссылка КАК Регистратор,
	|	уатПартииТоваровНаСкладахОстатки.КоличествоОстаток
	|ИЗ
	|	Документ.уатВыдачаРасходныхМатериалов.Материалы КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.уатПартииТоваровНаСкладах.Остатки(
	|				&МоментВремени,
	|				Склад = &Склад
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							ТабНоменклатуры.Номенклатура
	|						ИЗ
	|							Документ.уатВыдачаРасходныхМатериалов.Материалы КАК ТабНоменклатуры
	|						ГДЕ
	|						 	ТабНоменклатуры.Ссылка = &Ссылка
	|							)) КАК уатПартииТоваровНаСкладахОстатки
	|		ПО &Склад = уатПартииТоваровНаСкладахОстатки.Склад
	|		  И	ТаблицаДокумента.Номенклатура = уатПартииТоваровНаСкладахОстатки.Номенклатура
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ЕСТЬNULL(уатПартииТоваровНаСкладахОстатки.КоличествоОстаток, 0) < 0";
	
	мЗапрос.УстановитьПараметр("Склад"        , ДокументСсылка.Склад);
	мЗапрос.УстановитьПараметр("Ссылка"       , ДокументСсылка);
	мЗапрос.УстановитьПараметр("МоментВремени", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
	
	Выборка = мЗапрос.Выполнить().Выбрать();
	Если Выборка.Количество() тогда
		Пока Выборка.Следующий() Цикл
			#Если ТонкийКлиент тогда	
			#Иначе
				ТекстСообщения = "Для """ + Выборка.Номенклатура + """ получены отрицательные остатки на складе """ + мЗапрос.Параметры.Склад + """. Остаток на складе: " + Выборка.КоличествоОстаток;
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Отказ,Заголовок);	
			#КонецЕсли
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
						  
						  
						  
						  
						  
						  
								
		
		
