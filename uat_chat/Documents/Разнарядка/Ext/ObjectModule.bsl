Функция ПолучитьДопМрш(ТБл,ТС)
	
	Стр ="";
	Мас = Тбл.НайтиСтроки(Новый Структура("ТС",ТС));
	ДЛя каждого эл из Мас Цикл
		Стр = Стр+Эл.Маршрут+" ; ";
	КонецЦИкла;
	
	Возврат Стр;
	
КонецФункции

Процедура ПечатьПодр(ТекПодр) экспорт
	Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	кэшМрш = Задания.Выгрузить(Новый Структура("ДополнительныйМаршрут",Истина));
	
	
	Запрос = Новый Запрос;
	Запрос.текст = "ВЫБРАТЬ
	               |	РазнарядкаЗадания.Маршрут.Владелец.Код КАК КодКА,
	               |	РазнарядкаЗадания.Маршрут.Владелец КАК Контрагент,
	               |	РазнарядкаЗадания.Маршрут.НаименованиеПолное Маршрут,
	               |	РазнарядкаЗадания.Маршрут.Ответсвенный КАК Ответсвенный,
	               |	РазнарядкаЗадания.Маршрут.Начало КАК Начало,
	               |	уатМестонахождениеТССрезПоследних.ТС,
	               |	уатМестонахождениеТССрезПоследних.ТС.ГосударственныйНомер КАК ГосНомер,
	               |	уатМестонахождениеТССрезПоследних.ТС.ГаражныйНомер КАК ГарНомер,
	               |	ВЫБОР
	               |		КОГДА РазнарядкаЗадания.Маршрут ЕСТЬ NULL 
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Инд,
	               |	РазнарядкаЗадания.Маршрут.ВремяВПути ЧасыЛ,
	               |	РазнарядкаЗадания.Маршрут.ВремяУсл3 ЧасыР,
	               |	РазнарядкаЗадания.Маршрут.ВремяУсл2 ЧасыО,
	               |	РазнарядкаЗадания.Маршрут.ВремяВПутиВод ЧасыЛВод,
	               |	РазнарядкаЗадания.Маршрут.ВремяУсл3Вод ЧасыРВод,
	               |	РазнарядкаЗадания.Маршрут.ВремяУсл2Вод ЧасыОВод
	               |ИЗ
	               |	РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ДТ) КАК уатМестонахождениеТССрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Разнарядка.Задания КАК РазнарядкаЗадания
	               |		ПО уатМестонахождениеТССрезПоследних.ТС = РазнарядкаЗадания.ТС
	               |			И (НАЧАЛОПЕРИОДА(РазнарядкаЗадания.Ссылка.Дата, ДЕНЬ) = &Дт)
	               |			И (РазнарядкаЗадания.Маршрут <> ЗНАЧЕНИЕ(Справочник.уатМаршруты.ПустаяСсылка))
	               |			И (РазнарядкаЗадания.ДополнительныйМаршрут = Ложь)
	               |WHERE   уатМестонахождениеТССрезПоследних.Подразделение = &Подр И (НЕ уатМестонахождениеТССрезПоследних.Состояние.ЗапретитьВыпискуПЛ)
	               |УПОРЯДОЧИТЬ ПО
	               |	Инд,
	               |	ГарНомер,
	               |	Начало";
				   Запрос.УстановитьПараметр("Дт",НачалоДня(Дата));
				   Запрос.УстановитьПараметр("Подр",ТекПодр);
				   Запрос.УстановитьПараметр("Док",Ссылка);
				   
	ТБл =Запрос.Выполнить().Выгрузить();
	
	Таб = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Макет");
	
			 Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");

	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.НазваниеОрганизации = СокрлП(Организация.НаименованиеПолное);
	Шапка.Параметры.ДатаДОк = Формат(Ссылка.Дата,"ДФ=dd.MM.yyyy");
	Шапка.Параметры.Подр = ТекПодр;
	Таб.Вывести(Шапка);
	
	Строка = Макет.ПолучитьОбласть("Строка0");
	ном = 1;
	пТС = Неопределено;
	ВысТаб=0;
	НольДата = Дата(1,1,1);
	Для каждого стр из Тбл Цикл
		
		ЗаполнитьЗначенияСвойств(Строка.Параметры,Стр);
		Строка.Параметры.Ном = Ном;
		Если Стр.ЧасыР = НольДата и Стр.ЧасыРВод<>НольДата Тогда
			Строка.Параметры.ЧасыР = Формат(Стр.ЧасыРВод,"ДФ=Ч")+" В";
		ИНачеЕсли Стр.ЧасыР <> НольДата и Стр.ЧасыР <> null ТОгда
			Строка.Параметры.ЧасыР = Формат(Стр.ЧасыР,"ДФ=Ч")+" р";
		КонецЕСЛИ;
		Строка.Параметры.Комм = ПолучитьДопМрш(кэшМрш,Стр.ТС);
		Таб.Вывести(Строка);
		
		Если пТС = Стр.ТС Тогда
			Таб.Область(высТаб,7,Таб.ВысотаТаблицы,7).Объединить();
			Таб.Область(высТаб,8,Таб.ВысотаТаблицы,8).Объединить();
			Таб.Область(высТаб,13,Таб.ВысотаТаблицы,14).Объединить();
		ИНаче
			пТс = Стр.ТС;
			Ном=Ном+1;
			ВысТаб = Таб.ВысотаТаблицы;
		КонецЕслИ;
		
	КонецЦикла;
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Таб.Вывести(Подвал);
	
	Таб.ТолькоПросмотр = Истина;
	Таб.ОтображатьЗаголовки = Ложь;
	Таб.ОтображатьСетку = Ложь;
	Таб.ПовторятьПриПечатиСтроки = Таб.Область(6,,7,);
	Таб.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ксРазнарядка";
	Таб.Показать("ПечРазнарядка");
				   
				   
	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РазнарядкаЗадания.ТС КАК ТС,
	               |	РазнарядкаЗадания.Водитель КАК Водитель,
	               |	РазнарядкаЗадания.Смена1 КАК Смена1,
	               |	РазнарядкаЗадания.Маршрут.Владелец КА,
	               |	РазнарядкаЗадания.Маршрут,
	               |	Час(РазнарядкаЗадания.Маршрут.ВремяВПути) Усл1,
	               |	Час(РазнарядкаЗадания.Маршрут.ВремяУсл2)  Усл2,
	               |	Час(РазнарядкаЗадания.Маршрут.ВремяУсл3)  Усл3
	               |ИЗ
	               |	Документ.Разнарядка.Задания КАК РазнарядкаЗадания
				   |WHERE Ссылка = &сс  и  РазнарядкаЗадания.ТС <> Значение(Справочник.уатТС.пустаяСсылка)
				   |ORDER BY РазнарядкаЗадания.Маршрут.ВремяВПути DESC
	               |ИТОГИ ПО
	               |	ТС,
				   |	Водитель,
	               |	Смена1";
				   Запрос.УстановитьПараметр("сс",ссылка);
	Выборка	= Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Наб = Движения.ЗаявкиИзРазнарядки;
	
	
	Пока Выборка.Следующий() Цикл  //ТС
		
		Есть1смена = Ложь;
		Есть2Смена = Ложь;
		
		ВыбВод = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыбВод.Следующий() Цикл  //Водитель
			
			Выб = ВыбВод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);   //Смена
			Пока Выб.Следующий() Цикл
				
				ВыбКА = Выб.Выбрать();  //Детальные записи
				Если ВыбКА.Следующий() Тогда
					Если ВыбКА.Смена1 и Есть1Смена = Истина ТОгда
						Продолжить;
					ИНачеЕсли  Есть2Смена = Истина Тогда
						Продолжить;
					КонецЕСЛИ;
					
					Зап = Наб.Добавить();
					Зап.Период = Дата;
					Зап.Регистратор = ссылка;
					Зап.Контрагент  = ВыбКА.КА;
					Зап.Смена1 = ВыбКА.Смена1;
					Зап.ТС     = ВыбКА.ТС;
					Зап.Усл1   = ВыбКА.Усл1;
					Зап.Усл2   = ВыбКА.Усл2;
					Зап.Усл3   = ВыбКА.Усл3;
					Зап.Маршрут= ВыбКА.Маршрут;
					
					Если ВыбКА.Смена1 ТОгда
						Есть1Смена = Истина;
					ИНаче
						Есть2Смена = Истина;
					КонецЕСЛИ;
				КонецЕСЛИ;
				
				
				//Если ЗначениеЗаполнено(ВыбВод.Водитель) Тогда
					Прервать;      // На одну машину - одна заявка
				//КонецеСЛИ;
				
				Если Есть1Смена и Есть2Смена ТОгда ПрерватЬ; КонецЕСЛИ;
					
			КонеЦЦикла;
			
					Прервать;      // На одну машину - одна заявка
			Если Есть1Смена и Есть2Смена ТОгда ПрерватЬ; КонецЕСЛИ;
			
		КонеЦЦикла;
		
	КонецЦикла;
	
	Наб.Записать();
				   
КонецПроцедуры
