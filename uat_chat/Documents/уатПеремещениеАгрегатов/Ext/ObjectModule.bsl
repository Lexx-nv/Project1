////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБЪЕКТА

Перем Права Экспорт; // Переменная объекта - ссылка на коллекцию прав, настроек и переменных окружения.

#Если Клиент Тогда

	Функция ПечатьПеремещение()
		
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеАгрегатов_Перемещение";
		Макет       = ПолучитьМакет("Перемещение");
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	уатПеремещениеАгрегатовШины.СерияНоменклатуры.Модель КАК Модель,
		|	уатПеремещениеАгрегатовШины.СерияНоменклатуры.СерийныйНомер КАК СерийныйНомер
		|ИЗ
		|	Документ.уатПеремещениеАгрегатов.Шины КАК уатПеремещениеАгрегатовШины
		|ГДЕ
		|	уатПеремещениеАгрегатовШины.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	уатПеремещениеАгрегатовАккумуляторы.СерияНоменклатуры.Модель КАК Модель,
		|	уатПеремещениеАгрегатовАккумуляторы.СерияНоменклатуры.СерийныйНомер КАК СерийныйНомер
		|ИЗ
		|	Документ.уатПеремещениеАгрегатов.Аккумуляторы КАК уатПеремещениеАгрегатовАккумуляторы
		|ГДЕ
		|	уатПеремещениеАгрегатовАккумуляторы.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	уатПеремещениеАгрегатовПрочиеАгрегаты.СерияНоменклатуры.Модель КАК Модель,
		|	уатПеремещениеАгрегатовПрочиеАгрегаты.СерияНоменклатуры.СерийныйНомер КАК СерийныйНомер
		|ИЗ
		|	Документ.уатПеремещениеАгрегатов.ПрочиеАгрегаты КАК уатПеремещениеАгрегатовПрочиеАгрегаты
		|ГДЕ
		|	уатПеремещениеАгрегатовПрочиеАгрегаты.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		ТЗШины		   = Запрос.ВыполнитьПакет()[0].Выгрузить();
		ТЗАккумуляторы = Запрос.ВыполнитьПакет()[1].Выгрузить();
		ТЗПрочие 	   = Запрос.ВыполнитьПакет()[2].Выгрузить();
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, "Перемещение агрегатов");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("РеквизитыОрганизации");
		ОбластьМакета.Параметры.Организация 	 = Ссылка.Организация;
		ОбластьМакета.Параметры.СкладПолучатель	 = Ссылка.СкладПолучатель;
		ОбластьМакета.Параметры.СкладОтправитель = Ссылка.СкладОтправитель;
		ТабДокумент.Вывести(ОбластьМакета);
		
		Если ТЗШины.Количество() Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыШины");
			ТабДокумент.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаШины");
			Для Каждого ВыборкаСтрок Из ТЗШины Цикл
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
				ОбластьМакета.Параметры.НомерСтроки = ТЗШины.Индекс(ВыборкаСтрок) + 1;
				
				ТабДокумент.Вывести(ОбластьМакета);			
			КонецЦикла;
			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалШины");
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		Если ТЗАккумуляторы.Количество() Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыАккумуляторы");
			ТабДокумент.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаАккумуляторы");
			Для Каждого ВыборкаСтрок Из ТЗАккумуляторы Цикл			
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
				ОбластьМакета.Параметры.НомерСтроки = ТЗАккумуляторы.Индекс(ВыборкаСтрок) + 1;
				
				ТабДокумент.Вывести(ОбластьМакета);			
			КонецЦикла;
			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалАккумуляторы");
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		Если ТЗПрочие.Количество() Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыПрочие");
			ТабДокумент.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПрочие");
			Для Каждого ВыборкаСтрок Из ТЗПрочие Цикл			
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
				ОбластьМакета.Параметры.НомерСтроки = ТЗПрочие.Индекс(ВыборкаСтрок) + 1;
				
				ТабДокумент.Вывести(ОбластьМакета);			
			КонецЦикла;
			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалПрочие");
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Ответственный = Ссылка.Ответственный;
		ТабДокумент.Вывести(ОбластьМакета);
		
		Возврат ТабДокумент;
		
	КонецФункции
	
 // Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(НазваниеМакета = "", КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не ?(Права = Неопределено, Ложь, уатПраваИНастройки.уатПраво("ПечатьНепроведенных", Права)) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;
	
	Если Не уатОбщегоНазначенияТиповые.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(НазваниеМакета) = Тип("СправочникСсылка.ВнешниеОбработки") Тогда
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ОбъектВнешнейФормы = НазваниеМакета.ПолучитьОбъект();
		Если ОбъектВнешнейФормы = Неопределено Тогда
			Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;			
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Попытка
			Обработка.СсылкаНаОбъект = Ссылка;
			ТабДокумент = Обработка.Печать();
			уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Права);
		Исключение
			Сообщить("Ошибка формата внешней обработки. Возможно выбрана обработка не для печати.", СтатусСообщения.Важное);
		КонецПопытки;
		
	Иначе
		
		Если НазваниеМакета = "Перемещение" тогда
			
			ТабДокумент = ПечатьПеремещение();
			уатОбщегоНазначенияТиповые.уатНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ЭтотОбъект, ""), Права);
			
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

	
	// Возвращает доступные варианты печати документа
	//
	// Возвращаемое значение:
	//  Структура, каждая строка которой соответствует одному из вариантов печати
	//  
	//Функция ПолучитьСписокПечатныхФорм() Экспорт
	Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
		
		СтруктураМакетов = Новый Структура;
		
		СтруктураМакетов.Вставить("Перемещение", "Перемещение агрегатов");
		
		Возврат СтруктураМакетов ;
		
	КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА


//////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	Документы.уатПеремещениеАгрегатов.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	уатПроведение.ОтразитьОстаткиАгрегатов(ДополнительныеСвойства, Движения, Отказ);
	
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	Документы.уатПеремещениеАгрегатов.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
КонецПроцедуры

// Процедура вызывается перед записью документа 
//
Процедура ПередЗаписью(Отказ,РежимЗаписи , РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначения.уатПроверкаПравПередЗаписьюВДокументах(ЭтотОбъект, Отказ, , Права);
КонецПроцедуры // ПередЗаписью

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
	
	СтруктураШапкиДокумента = Новый Структура("СкладОтправитель, СкладПолучатель, Организация");
	уатОбщегоНазначенияТиповые.уатПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураШапкиДокумента, Отказ, Заголовок);
	
	СтруктураПолей = Новый Структура("СерияНоменклатуры");
	уатОбщегоНазначенияТиповые.уатПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Шины", СтруктураПолей, Отказ, Заголовок);
	уатОбщегоНазначенияТиповые.уатПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Аккумуляторы", СтруктураПолей, Отказ, Заголовок);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.уатПеремещениеАгрегатов.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

// сохранение ссылки на коллекцию прав, настроек и окружения
Права = Неопределено;
#Если Клиент Тогда
	Права = глПраваУАТ;
#КонецЕсли

