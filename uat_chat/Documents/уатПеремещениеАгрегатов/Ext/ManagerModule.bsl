// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	СформироватьТаблицуОстаткиАгрегатов(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицуОстаткиАгрегатов(ДокументСсылка, СтруктураДополнительныеСвойства)
	тблОстаткиАгрегатов = Новый ТаблицаЗначений;
	тблОстаткиАгрегатов.Колонки.Добавить("Регистратор");
	тблОстаткиАгрегатов.Колонки.Добавить("Период");
	тблОстаткиАгрегатов.Колонки.Добавить("ВидДвижения");
	тблОстаткиАгрегатов.Колонки.Добавить("СерияНоменклатуры");
	тблОстаткиАгрегатов.Колонки.Добавить("Склад");
	тблОстаткиАгрегатов.Колонки.Добавить("Количество");
	
	//расход
	Для Каждого ТекСтрока Из ДокументСсылка.Шины Цикл
		НоваяСтрока = тблОстаткиАгрегатов.Добавить();
		НоваяСтрока.Регистратор       = ДокументСсылка;
		НоваяСтрока.Период            = ДокументСсылка.Дата;
		НоваяСтрока.ВидДвижения       = ВидДвиженияНакопления.Расход;
		НоваяСтрока.Склад             = ДокументСсылка.СкладОтправитель;
		НоваяСтрока.СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
		НоваяСтрока.Количество        = 1;
	КонецЦикла;
	Для Каждого ТекСтрока Из ДокументСсылка.Аккумуляторы Цикл
		НоваяСтрока = тблОстаткиАгрегатов.Добавить();
		НоваяСтрока.Регистратор       = ДокументСсылка;
		НоваяСтрока.Период            = ДокументСсылка.Дата;
		НоваяСтрока.ВидДвижения       = ВидДвиженияНакопления.Расход;
		НоваяСтрока.Склад             = ДокументСсылка.СкладОтправитель;
		НоваяСтрока.СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
		НоваяСтрока.Количество        = 1;
	КонецЦикла;
	Для Каждого ТекСтрока Из ДокументСсылка.ПрочиеАгрегаты Цикл
		НоваяСтрока = тблОстаткиАгрегатов.Добавить();
		НоваяСтрока.Регистратор       = ДокументСсылка;
		НоваяСтрока.Период            = ДокументСсылка.Дата;
		НоваяСтрока.ВидДвижения       = ВидДвиженияНакопления.Расход;
		НоваяСтрока.Склад             = ДокументСсылка.СкладОтправитель;
		НоваяСтрока.СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
		НоваяСтрока.Количество        = 1;
	КонецЦикла;

	//приход
	Для Каждого ТекСтрока Из ДокументСсылка.Шины Цикл
		НоваяСтрока = тблОстаткиАгрегатов.Добавить();
		НоваяСтрока.Регистратор = ДокументСсылка;
		НоваяСтрока.Период = ДокументСсылка.Дата;
		НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
		НоваяСтрока.Склад = ДокументСсылка.СкладПолучатель;
		НоваяСтрока.СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
		НоваяСтрока.Количество = 1;
	КонецЦикла;
	Для Каждого ТекСтрока Из ДокументСсылка.Аккумуляторы Цикл
		НоваяСтрока = тблОстаткиАгрегатов.Добавить();
		НоваяСтрока.Регистратор = ДокументСсылка;
		НоваяСтрока.Период = ДокументСсылка.Дата;
		НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
		НоваяСтрока.Склад = ДокументСсылка.СкладПолучатель;
		НоваяСтрока.СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
		НоваяСтрока.Количество = 1;
	КонецЦикла;
	Для Каждого ТекСтрока Из ДокументСсылка.ПрочиеАгрегаты Цикл
		НоваяСтрока = тблОстаткиАгрегатов.Добавить();
		НоваяСтрока.Регистратор       = ДокументСсылка;
		НоваяСтрока.Период            = ДокументСсылка.Дата;
		НоваяСтрока.ВидДвижения       = ВидДвиженияНакопления.Приход;
		НоваяСтрока.Склад             = ДокументСсылка.СкладПолучатель;
		НоваяСтрока.СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
		НоваяСтрока.Количество        = 1;
	КонецЦикла;
	
	//управляемая блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатОстаткиАгрегатов");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = тблОстаткиАгрегатов;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СерияНоменклатуры", "СерияНоменклатуры");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад"            , "Склад");
	Блокировка.Заблокировать();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОстатковАгрегатов", тблОстаткиАгрегатов);
КонецПроцедуры // СформироватьТаблицуОстаткиАгрегатов()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ДокументСсылка);
	
	мЗапрос = Новый Запрос;
	мЗапрос.Текст = 
	"ВЫБРАТЬ
	|	уатОстаткиАгрегатовОстатки.Склад,
	|	уатОстаткиАгрегатовОстатки.СерияНоменклатуры,
	|	уатОстаткиАгрегатовОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.уатОстаткиАгрегатов.Остатки(
	|			&Период,
	|			Склад = &Склад
	|				И СерияНоменклатуры В
	|					(ВЫБРАТЬ
	|						уатПеремещениеАгрегатовШины.СерияНоменклатуры
	|					ИЗ
	|						Документ.уатПеремещениеАгрегатов.Шины КАК уатПеремещениеАгрегатовШины
	|					ГДЕ
	|						уатПеремещениеАгрегатовШины.Ссылка = &Ссылка
	|			
	|					ОБЪЕДИНИТЬ ВСЕ
	|			
	|					ВЫБРАТЬ
	|						уатПеремещениеАгрегатовАккумуляторы.СерияНоменклатуры
	|					ИЗ
	|						Документ.уатПеремещениеАгрегатов.Аккумуляторы КАК уатПеремещениеАгрегатовАккумуляторы
	|					ГДЕ
	|						уатПеремещениеАгрегатовАккумуляторы.Ссылка = &Ссылка
	|			
	|					ОБЪЕДИНИТЬ ВСЕ
	|			
	|					ВЫБРАТЬ
	|						уатПеремещениеАгрегатовПрочиеАгрегаты.СерияНоменклатуры
	|					ИЗ
	|						Документ.уатПеремещениеАгрегатов.ПрочиеАгрегаты КАК уатПеремещениеАгрегатовПрочиеАгрегаты
	|					ГДЕ
	|						уатПеремещениеАгрегатовПрочиеАгрегаты.Ссылка = &Ссылка)) КАК уатОстаткиАгрегатовОстатки
	|ГДЕ
	|	уатОстаткиАгрегатовОстатки.КоличествоОстаток < 0";
	мЗапрос.УстановитьПараметр("Период", Новый Граница(ДокументСсылка.Дата, ВидГраницы.Включая));
	мЗапрос.УстановитьПараметр("Склад" , ДокументСсылка.СкладОтправитель);
	мЗапрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Выборка = мЗапрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор тогда
			ТекстСообщения = "Аккумулятор """;
		ИначеЕсли Выборка.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина тогда
			ТекстСообщения = "Шина """;
		Иначе
			ТекстСообщения = "Агрегат """;
		КонецЕсли;
		ТекстСообщения = ТекстСообщения + Выборка.СерияНоменклатуры.СерийныйНомер + """ отсутствует на складе """ + ДокументСсылка.СкладОтправитель + """";
		
		ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);	
	КонецЦикла;
	
КонецПроцедуры
