&НаКлиенте
Процедура ПечатьПЛ(Команда)
	мМассивПечатныхФорм = ПечатьПЛНаСервере(ПреобразоватьТаблицуВМассивСтруктур(фТаблицаТС, Ложь, "ВремяПодачи, Колонна, ТипТС, Ответственный, МестоОказанияУслуг, ЦехМаршрут, ВтораяСмена, ИдентификаторСтрокиЗаявки, ТабНомерВодителя, ГосНомерТС, ГарНомерТС, ВремяВозврата, ВремяВыезда, Водитель, Водитель2, ТС, ДатаВозврата, Прицеп, ИзмененоПослеСогласования, Контрагент, ТСПринудительноСтерто, Смена, ПозицияПП"), фДатаНачала, фДатаОкончания);
	Для Каждого мПечатнаяФорма Из мМассивПечатныхФорм Цикл
		Если фПечатьСразуНаПринтер Тогда
			мПечатнаяФорма.Напечатать();
		Иначе
			мПечатнаяФорма.Показать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПреобразоватьТаблицуВМассивСтруктур(пТаблица, пЧистыйМассив = Ложь, пИменаКолонок = Неопределено)
	вМассив = Новый Массив;
	Если пИменаКолонок = Неопределено Тогда
		мСтрокаИменКолонок = "";
		Для Каждого мКолонка Из пТаблица.Колонки Цикл
			мСтрокаИменКолонок = мСтрокаИменКолонок + "," + мКолонка.Имя;
		КонецЦикла;
		мСтрокаИменКолонок = Сред(мСтрокаИменКолонок, 2);
	Иначе
		мСтрокаИменКолонок = пИменаКолонок;
	КонецЕсли;
	мЧистыйМассив = пЧистыйМассив И Найти(мСтрокаИменКолонок, ",") = 0;
	
	Для Каждого мСтрока Из пТаблица Цикл
		Если Не мЧистыйМассив Тогда
			мСтруктура = Новый Структура(мСтрокаИменКолонок);
			ЗаполнитьЗначенияСвойств(мСтруктура, мСтрока);
			вМассив.Добавить(мСтруктура);
		Иначе
			вМассив.Добавить(мСтрока[мСтрокаИменКолонок]);
		КонецЕсли;
	КонецЦикла;
	
	Возврат вМассив;
КонецФункции

&НаСервереБезКонтекста
Функция ПечатьПЛНаСервере(пТаблица, пДатаНачала, пДатаОкончания)
	мИменаКолонок = "ИдентификаторСтрокиЗаявки, ТС, Водитель, Водитель2, ВремяПодачи, ВремяВозврата, ЦехМаршрут, Колонна, МестоОказанияУслуг, Ответственный, ТипТС, Комментарий, СтатусыОтказа, Прицеп, ИзмененоПослеСогласования, ТСПринудительноСтерто, Смена, Контрагент, ПозицияПП";
	вМассивТД = Новый Массив;
	
	пДатаДляЦикла = пДатаНачала;
	Пока пДатаДляЦикла <= пДатаОкончания Цикл
		мСоответствиеОбъектовПутевыхЛистов = Новый Соответствие;
		Для Каждого мСтрокаТаблицы Из пТаблица Цикл
			// 1.Создаем ПЛ по параметрам:
			мСтрокаТаблицы.Вставить("ДатаФормирования", пДатаДляЦикла + (мСтрокаТаблицы.ВремяВыезда - НачалоДня(мСтрокаТаблицы.ВремяВыезда)));
			мОбъектПутевогоЛиста = Документы.уатПутевойЛист.СоздатьПутевойЛист(мСтрокаТаблицы);
			// 2.Записываем факт выписки в регистр
			РегистрыСведений.ВыпискаПЛПоИдентификаторам.ЗафиксироватьФактВыписки(мСтрокаТаблицы.ДатаФормирования, мОбъектПутевогоЛиста.Ссылка, Новый Структура("ИдентификаторСтрокиЗаявки, ТС, Водитель", мСтрокаТаблицы.ИдентификаторСтрокиЗаявки, мСтрокаТаблицы.ТС, мСтрокаТаблицы.Водитель));
			мСоответствиеОбъектовПутевыхЛистов.Вставить(мОбъектПутевогоЛиста.Ссылка, мОбъектПутевогоЛиста);
		КонецЦикла;
		//отдельный цикл, т.к. некоторые строки разнарядки могут иметь одно и то же ТС в пределах одной смены (доп.маршруты и т.д.)
		// путевка для них будет одна и ПФ тоже одна
		Для Каждого мОбъектПЛ Из мСоответствиеОбъектовПутевыхЛистов Цикл
			// 3.Формируем печатную форму
			мПечатнаяФорма = Новый ТабличныйДокумент;
			мОбъектПЛ.Значение.Печать("ПечататьВесьПутевойЛист", , Истина, , , мПечатнаяФорма);
			// 4.Добавляем к массиву возвращаемых ТД нашу ПФ
			вМассивТД.Добавить(мПечатнаяФорма);
			// 5.Фиксируем факт печати
			РегистрыСведений.ПечатьПЛ.ЗафиксироватьФактПечати(мОбъектПЛ.Значение.Ссылка, ТекущаяДата());
		КонецЦикла;
		
		// 6.Принудительно пишем в разнарядку данные
		мСтруктурыСтрок = ПреобразоватьТаблицуВМассивСтруктур(пТаблица, Ложь, мИменаКолонок);
		Если мСтруктурыСтрок.Количество() > 0 Тогда
			мРезультатЗаписи = ЗаписатьСтрокиРазнарядкиНаСервере(пДатаДляЦикла, мСтруктурыСтрок);
		КонецЕсли;
		пДатаДляЦикла = пДатаДляЦикла + (24 * 3600);	//след.день
	КонецЦикла;
	
	
	Возврат вМассивТД;
КонецФункции

// функция обязана вернуть структуру в полями:
//	Успешно - Булево - результат выполнения, Истина - все записано, Ложь - записано частично или ничего
//	МассивЗаписанныхИдентификаторов - Массив строк - содержит элеенты со значениями поля ИдентификаторСтрокиЗаявки тех записей, которые небыли записаны в базу
//	ЗаписьУточнения - число (0/1/2), где 0 - запись полей разнарядки (ТС и Водители), 1 - запись прочих полей, 2 - запись всех полей
&НаСервереБезКонтекста
Функция ЗаписатьСтрокиРазнарядкиНаСервере(пДата, пСтруктурыСтрок)
	Возврат РегистрыСведений.Разнарядка.ЗаписатьСтрокиРазнарядкиНаСервере(пДата, пСтруктурыСтрок);
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	фАдминистратор = РольДоступна("уатАдминистратор");
	фПечатьСразуНаПринтер = Не фАдминистратор;
	Если Не Параметры.Свойство("МассивСтрокКПечати") Тогда
		Возврат;
	КонецЕсли;
	фДатаНачала = Параметры.ДатаНачала;
	фДатаОкончания = Параметры.ДатаНачала;
	//тут необходимо правильно сформировать таблицу
	// не нашлось времени отказаться от такой коварной вещи,r как запрос в цикле, да простят меня Боги...
	Для Каждого мСтрока Из Параметры.МассивСтрокКПечати Цикл
		//необходимо подобрать время выезда и возврата для каждого ТС в соответствии со сменой строки
		
		мНоваяСтрокаТаблицы = фТаблицаТС.Добавить();
		ЗаполнитьЗначенияСвойств(мНоваяСтрокаТаблицы, мСтрока);
		мНоваяСтрокаТаблицы.ДатаВозврата = Дата("00010101");
		//ГарНомерТС
		//ГосНомерТС
		//ТабНомерВодителя
		мДанныеПредыдущегоПЛ = Неопределено;
		Если Не ЗначениеЗаполнено(мСтрока.ПутевойЛист) Тогда
			мДанныеПредыдущегоПЛ = Документы.уатПутевойЛист.ПолучитьДанныеПредыдущегоПЛ(фДатаНачала, мСтрока.ТС, мСтрока.ВтораяСмена);
		КонецЕсли;
		Если мДанныеПредыдущегоПЛ <> Неопределено И мДанныеПредыдущегоПЛ.мПредыдущийПЛНайден Тогда
			//TODO: Избыточность - ВремяВыезда и ВремяПодачи
			мНоваяСтрокаТаблицы.ВремяВыезда = мДанныеПредыдущегоПЛ.ДатаВыезда;
			мНоваяСтрокаТаблицы.ВремяВозврата = мДанныеПредыдущегоПЛ.ДатаВозвращения;
			мНоваяСтрокаТаблицы.ВремяПодачи = мДанныеПредыдущегоПЛ.ДатаВыезда;
		Иначе
			мНоваяСтрокаТаблицы.ВремяВыезда = мНоваяСтрокаТаблицы.ВремяПодачи;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура фТаблицаТСВремяВыездаПриИзменении(Элемент)
	Если Элементы.фТаблицаТС.ТекущиеДанные <> Неопределено Тогда
		Элементы.фТаблицаТС.ТекущиеДанные.ВремяПодачи = Элементы.фТаблицаТС.ТекущиеДанные.ВремяВыезда;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура фТаблицаТСВодительАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если Текст <> "" Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = НайтиВодителя(Текст);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиВодителя(пТекст)
	
	вСписок = Новый СписокЗначений;
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	уатСотрудники.Ссылка,
	|	уатСотрудники.Наименование,
	|	уатСотрудники.Код
	|ИЗ
	|	Справочник.уатСотрудники КАК уатСотрудники
	| ГДЕ (уатСотрудники.Наименование ПОДОБНО ""%"" + &СтрПск + ""%""
	|	ИЛИ уатСотрудники.Код ПОДОБНО &СтрПск + ""%"")
	|	И уатСотрудники.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
	|	И уатСотрудники.ДатаПриема <> ДАТАВРЕМЯ(1, 1, 1)";
	
	Запрос.УстановитьПараметр("СтрПск", "" + пТекст);	
	мТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	Если мТаблицаРезультата.Количество() > 0 ТОгда
		Для Каждого мСтрокаТаблицы Из мТаблицаРезультата Цикл
			вСписок.Добавить(мСтрокаТаблицы.Ссылка, СокрЛП(мСтрокаТаблицы.Код) + " " + СокрЛП(мСтрокаТаблицы.Наименование));
		КонецЦикла;
	КонецЕсли;
	
	Возврат вСписок;
КонецФункции

&НаКлиенте
Процедура фТаблицаТСВодительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	Если Текст <> "" Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = НайтиВодителя(Текст);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура фТаблицаТСВодительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Элементы.фТаблицаТС.ТекущиеДанные.Водитель = ВыбранноеЗначение;
КонецПроцедуры

&НаКлиенте
Процедура фТаблицаТСВодительПриИзменении(Элемент)
	мСтрокаТекущихДанных = Элементы.фТаблицаТС.ТекущиеДанные;
	Если мСтрокаТекущихДанных <> Неопределено Тогда
		Если ЗначениеЗаполнено(мСтрокаТекущихДанных.Водитель) Тогда
			мРеквизитыВодителя = ПолучитьРеквизитыОбъекта(мСтрокаТекущихДанных.Водитель, "Код");
			мСтрокаТекущихДанных.ТабНомерВодителя = мРеквизитыВодителя.Код;
		Иначе
			мСтрокаТекущихДанных.ТабНомерВодителя = "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыОбъекта(пОбъект, пСтрокаРеквизитов);
	вСтруктура = Новый Структура();
	мСтрокаРеквизитов = СтрЗаменить(пСтрокаРеквизитов, ",", Символы.ПС);
	Если СтрДлина(мСтрокаРеквизитов) > 0 Тогда
		Для Итр = 1 По СтрЧислоСтрок(мСтрокаРеквизитов) Цикл
			мПоле = СокрЛП(СтрПолучитьСтроку(мСтрокаРеквизитов, Итр));
			вСтруктура.Вставить(мПоле, пОбъект[мПоле]);
		КонецЦикла;
	КонецЕсли;
	
	Возврат вСтруктура;
КонецФункции