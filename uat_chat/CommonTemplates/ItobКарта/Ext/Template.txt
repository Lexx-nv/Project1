<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Map data</title>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8"></head>
    <link rel="stylesheet" href="$MapServerName/theme/default/style.css" type="text/css" />
    <link rel="stylesheet" href="$MapServerName/style.css" type="text/css" />
	<style type="text/css">
	<!--
	html, body {
	  margin:0;
	  padding:0;
	  width:100%;
	  height:100%;
	}
	#map {
	  position: relative;
	  min-height: 100%;
	  /*background-color:#FF0000;*/
	}
	* html #map {
	  height: 100%;
	}
	#footer {
	  position: relative;
	  margin-top: -2.5em;
	  height: 2.5em;
	}
	.olControlLayerSwitcher .layersDiv {
       padding-top: 5px;
       padding-left: 10px;
       padding-bottom: 5px;
       padding-right: 65px;
       background-color: #eae5d8;
       width: 100%;
       height: 100%;
	   color:black;
	}
	.olControlOverviewMapElement {
	    padding: 10px 18px 10px 10px;
	    background-color: #eae5d8; /*#00008B; */
    	-moz-border-radius: 1em 0 0 0;
		border-style:solid;
		border-width:1px;
		border-color:#898477;	
	}
	-->
	</style>
	
    <script type="text/javascript" src="$MapServerName/OpenLayers.js"></script>
    <script type="text/javascript" src="$MapServerName/Custom.js"></script>
	<script type="text/javascript">
        
			var m_map;
			var firstLat = 57;
			var firstLon = 84;
			var firstZoom = 4;
			var firstLayerName = "";
			var geozones_control;
			var mapLoaded = false;
			var disable_double_click = false;
			var disable_double_click_control = null;
			var LayersWithBackingLayers = [];
			var routes_list = null;
			var routes_list_pos = null;
			var play_route_sec = null;
			var play_route_max = 0;
			var play_route_k = 1000;
			var play_route_intervalid = null;
			var play_route_start_date = null;
			var play_route_pause = false;
			// $VARIABLES
			
            function webgis_map_options(opts) {
				if (typeof opts != 'object') opts = new Object;
				opts.maxExtent = new OpenLayers.Bounds( - 20037508.3427892, -20037508.3427892, 20037508.3427892, 20037508.3427892);
				opts.numZoomLevels = 19;
				opts.maxResolution = 156543.0339;
				opts.units = 'm';
				opts.projection = "EPSG:900913";
				opts.displayProjection = new OpenLayers.Projection("EPSG:4326");
				return opts;
			}
			
			function init(){
                
				var map_options = webgis_map_options({
					controls: [],
					theme: null,
					eventListeners: {                     
                        "changebaselayer": mapBaseLayerChanged
                    }
				});
				m_map = new OpenLayers.Map('map', map_options);
				
				var layers = new Array;				
				
				// $MAPS
								
				m_map.addLayers(layers);
																				
				m_map.addControl(new OpenLayers.Control.MousePosition());
				m_map.addControl(new OpenLayers.Control.ScaleLine());
				m_map.addControl(new OpenLayers.Control.Navigation());				
				m_map.addControl(new OpenLayers.Control.LayerSwitcher({roundedCorner: true, roundedCornerColor: "#eae5d8"}));
				
				
				var opt = webgis_map_options({
					controls: [],
					theme: null
				});	
				var overviewControl = new OpenLayers.Control.OverviewMap({
					mapOptions: opt
				});				
				m_map.addControl(overviewControl);
				
				// $ATTRIBUTES
				
				var pt = new OpenLayers.LonLat(firstLon, firstLat);
				pt.transform(m_map.displayProjection, m_map.getProjectionObject());
				m_map.setCenter(pt, firstZoom);
				
				if (firstLayerName != "") {
					var find_lays = m_map.getLayersByName(firstLayerName);
					if (find_lays.length > 0) {
						m_map.setBaseLayer(find_lays[0]);
					}
				}
				
				mapLoaded = true;
				
				disable_double_click_control = new OpenLayers.Control.DisableDoubleClickControl();
				m_map.addControl(disable_double_click_control);
				disable_double_click_control.deactivate();
				
				if (disable_double_click) {
					var CustomClick = new OpenLayers.Control.DisableDoubleClickControl();
					m_map.addControl(CustomClick);
					CustomClick.activate();
				}				

            }			
			
			function mapBaseLayerChanged(event) {				
				
				for (var i = 0, len = LayersWithBackingLayers.length; i < len; i++) {
					if (m_map.baseLayer == LayersWithBackingLayers[i]) {
						m_map.baseLayer.top_layer.setVisibility(true);
					} else if (LayersWithBackingLayers[i].top_layer.getVisibility()==true) {
						LayersWithBackingLayers[i].top_layer.setVisibility(false);
					}					
				}
			
            }			
			
			/* Geozone manage */
			
			function create_geozones_control() {
				var geozone_layer = new OpenLayers.Layer.Vector("Geozone creation", {displayInLayerSwitcher: false});
				m_map.addLayer(geozone_layer);
				
				var default_style = {
        			fillColor: "#197B30",
			        fillOpacity: 0.4,
			        hoverFillColor: "white",
			        hoverFillOpacity: 0.8,
			        strokeColor: "#004A80",
			        strokeOpacity: 0.5,
			        strokeWidth: 1,
			        strokeLinecap: "round",
			        hoverStrokeColor: "#FDC689",
			        hoverStrokeOpacity: 0.5,
			        hoverStrokeWidth: 0.2,
			        pointRadius: 4,
			        hoverPointRadius: 1,
			        hoverPointUnit: "%",
			        pointerEvents: "visiblePainted"
			    }
								
				var geozone_style = OpenLayers.Util.extend({}, default_style);				
	            
				var geozone_last_style = OpenLayers.Util.extend({}, default_style);				
	            geozone_last_style.fillColor = "#FF0000";
	            geozone_last_style.fillOpacity = 0.9;
	            geozone_last_style.hoverFillColor = "red";
	            geozone_last_style.pointRadius = 4;
	            geozone_last_style.strokeColor = "#FF0000";
	            geozone_last_style.strokeWidth = 1; 
				
				var polyOptions = {
                    handlerOptions: {
                        style: geozone_style,
                        lastStyle: geozone_last_style
                    }
                }; 				
            	geozones_control = new OpenLayers.Control.DrawFeature(geozone_layer,
                                            OpenLayers.Handler.PolygonEx,
                                            polyOptions);
				m_map.addControl(geozones_control);
				
				m_map.events.register('zoomend', this, function() {
            		if (geozone_layer && geozones_control) geozone_redraw();
        		});
				
				geozones_control.activate();
			}
			
			function destroy_geozones_control() {
				if (geozones_control) {
					geozones_control.deactivate();
					m_map.removeControl(geozones_control);
					geozones_control = null;
				}
				var find_lays = m_map.getLayersByName("Geozone creation");
				if (find_lays.length > 0) {
					m_map.removeLayer(find_lays[0]);
				}
			}
			
			function geozone_redraw() {
				if (geozones_control.handler) {
                	geozones_control.handler.drawFeature();
            	}
			}
			
			/* Play routes */
			function PlayRouteHandlier() {
				var CurPos;
				
				if (play_route_pause != true) {				
				
					play_route_sec = play_route_sec+play_route_k/10;
					
					var CurDate = new Date(play_route_start_date.getTime() + 1000*play_route_sec);
					var CurDateStr = ""+CurDate.getDate()+"."+(CurDate.getMonth()+1)+"."+CurDate.getFullYear()+" "+CurDate.getHours()+":"+CurDate.getMinutes();//+":"+CurDate.getSeconds();
					
					if (play_route_sec > play_route_max) {
						StopPlayRoute();
					}
					
					for (var i = 0, len = routes_list.length; i < len; i++) {
						CurPos = routes_list_pos[i][0];
						OldPos = CurPos;
						
						if (routes_list[i].length <= CurPos+1) {
							continue;
						}	
						
						while(CurPos < routes_list[i].length && routes_list[i][CurPos][1] < play_route_sec) {
							CurPos = CurPos+1;
						}
						
						if (CurPos > 0) {
							CurPos = CurPos-1;
						}	
						routes_list_pos[i][0] = CurPos;
						
						pointFeature = routes_list_pos[i][1];
						
						if (OldPos != CurPos) {
							pt = routes_list[i][CurPos][0];
							pointFeature.move(pt);
												
							if (routes_list.length == 1) {
								m_map.setCenter(pt, m_map.getZoom());
							}
							
						}
						
						pointFeature.style.label = CurDateStr;
						// update
						pointFeature.layer.drawFeature(pointFeature);
											
					}
				}
				
			}
			
			function StopPlayRoute() {
				clearInterval(play_route_intervalid);
				play_route_intervalid = null;
				play_route_pause = false;

			}			
			
		
  </script>
  </head>
  <body onload="init()">
    <div id="map"></div>
    <div id="footer">
      <form name="form" method="get" style="visibility:hidden; height:0px; background-color:#FF0000;">
        <input name="result" type="hidden" value="" />
      </form>
    </div>
  </body>
</html>