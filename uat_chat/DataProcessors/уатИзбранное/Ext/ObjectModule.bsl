#Если Клиент Тогда
	
Перем ИдентификаторИзбранное Экспорт;		// Переменная объекта - строка, идентифицирующая данные объекта в регистре сведений
											// "КартинкиИФайлы" как избранное


//Добавление объектов в избранное:
//
//Параметры:
// ДобавляемыйОбъект      - тип: ЛюбаяСсылка или Строка - в случае добавления объекта является ссылкой
//                          на объект; в остальных случаях - это представление объекта в избранном.
// ТипДобавляемогоОбъекта - тип: Строка - представление добавляемого объекта в метаданных
//							(например	"Обработки.Избранное"); 
//                          если добавляется объект (ссылка) - параметр игнорируется.
// ИмяФормы			      - тип: Строка - имя формы объекта, которую необъодимо открыть; например "ФормаСписка";
//							если добавляется объект (ссылка) - параметр игнорируется.
//
// ОБЪЕКТЫ в избранном хранятся по ссылке; Для доступа к конкретной ФОРМЕ хранится команда ее получения строкой,
//  например "Справочники.Банки.ПолучитьФорму("ФормаСписка")", в этом случае параметры будут такие:
//  ДобавляемыйОбъект = <Строка представления>; ТипДобавляемогоОбъекта = "Справочники.Банки"; ИмяФормы = "ФормаСписка";
//
//Возвращаемое значение:
// Нет.
//
Процедура ДобавитьВИзбранное(ДобавляемыйОбъект, ТипДобавляемогоОбъекта = "", ИмяФормы = "") Экспорт

	Если ТипЗнч(ДобавляемыйОбъект) <> Тип("Строка") Тогда
		// Не все добавляемые объекты имеют ссылочный тип и возможность записи
		Попытка
			Если ДобавляемыйОбъект.ЭтоНовый() Тогда
				Ответ = Вопрос("" + ДобавляемыйОбъект + " не записан. Записать?", РежимДиалогаВопрос.ДаНет);
				Если Ответ = КодВозвратаДиалога.Да Тогда
					Попытка
						ДобавляемыйОбъект.Записать()
					Исключение
						Возврат;
					КонецПопытки;
				Иначе
					Возврат;
				КонецЕсли;
			КонецЕсли; 
		Исключение КонецПопытки;	
	КонецЕсли; 
	
	// В качестве параметра передаем ссылку на объект,
	// а если объект не ссылочного типа, используем то, что нам передали
	Попытка ПараметрОбъект = ДобавляемыйОбъект.Ссылка;
	Исключение ПараметрОбъект = ДобавляемыйОбъект;
	КонецПопытки;
	
	ПараметрТип = ТипДобавляемогоОбъекта;
	ПараметрИмяФормы = ИмяФормы;
	
	Форма=ПолучитьФорму("ДобавитьВИзбранное");
	Форма.ОткрытьМодально();
КонецПроцедуры

// Открытие элемента избранного
Процедура ОткрытьИзбранныйЭлемент(Элемент, ВыбраннаяСтрока) Экспорт
	ТипОбъекта=ВыбраннаяСтрока.ТипОбъекта;
	ЭкземплярОбъекта=ВыбраннаяСтрока.ЭкземплярОбъекта;	
	ПредставлениеОбъекта=ВыбраннаяСтрока.Представление;
	
	Если (ТипОбъекта="Папка") ИЛИ (ТипОбъекта="Избранное") Тогда
		Если Элемент.Развернут(ВыбраннаяСтрока) Тогда
			Элемент.Свернуть(ВыбраннаяСтрока);
		Иначе
			Элемент.Развернуть(ВыбраннаяСтрока);
		КонецЕсли;	
		Возврат;
	КонецЕсли;
	
	Попытка
		Если ТипЗнч(ЭкземплярОбъекта) = Тип("Строка") Тогда
			Если Лев(ЭкземплярОбъекта, СтрДлина("Константы")) = "Константы" Тогда
				// константы - частный случай
				Элемент = Прав(ЭкземплярОбъекта, СтрДлина(ЭкземплярОбъекта) - СтрДлина("Константы") - 1);
				Форма=Константы.ПолучитьФорму();
				ТекЭлемент=Форма.ЭлементыФормы.Найти(Элемент);
				Форма.Открыть();
				Если ТекЭлемент<>Неопределено Тогда
					Форма.ТекущийЭлемент=ТекЭлемент;
				КонецЕсли;
			Иначе	
				Форма = Вычислить(ЭкземплярОбъекта);
				Форма.Открыть();
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ЭкземплярОбъекта) = Тип("Структура") Тогда
			Если НЕ ЭкземплярОбъекта.Свойство("ТабличныйДокумент") Тогда
				// открываем форму отчета с передачей структуры настроек
				СтрокаОткрытияФормы = ЭкземплярОбъекта.Менеджер + ".ПолучитьФорму(""" + ЭкземплярОбъекта.ИмяФормыНастроек + """)";
				
				Форма = Вычислить(СтрокаОткрытияФормы);
				Форма.СохраненныеНастройки = ЭкземплярОбъекта;
				Форма.ВосстанавливатьЗначенияПриОткрытии = Ложь;
				Форма.Открыть();
				
			Иначе // выводим на экран mxl-таблицу
				Таблица = ЗначениеИзСтрокиВнутр(ЭкземплярОбъекта.ТабличныйДокумент.Таблица);
				Таблица.Область(1, 1, Таблица.ВысотаТаблицы, Таблица.ШиринаТаблицы).Расшифровка = Неопределено;
				Для Каждого ТекСвойство Из ЭкземплярОбъекта.ТабличныйДокумент.Свойства Цикл
					Попытка Таблица[ТекСвойство.Ключ] = ТекСвойство.Значение;
					Исключение КонецПопытки;	
				КонецЦикла;	
				Таблица.Показать(ПредставлениеОбъекта);
			КонецЕсли;
			
		Иначе // иначе это ссылка
			// если объект по ссылке существует, от откроем его, 
			// иначе спросим и удалим эту ссылку из избранного
			ЭкземплярОбъектаСуществует = ЭкземплярОбъекта.Ссылка.ПолучитьОбъект() <> Неопределено;
			Если ЭкземплярОбъектаСуществует Тогда
				ОткрытьЗначение(ЭкземплярОбъекта);
			Иначе
				Ответ = Вопрос("Ссылка указывает на несуществующий объект. Удалить ссылку?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да,"Избранное");
				Если Ответ = КодВозвратаДиалога.Да тогда
					Отбор = Новый Структура;
					Отбор.Вставить("Представление",    ПредставлениеОбъекта);
					Отбор.Вставить("ТипОбъекта",       ТипОбъекта);
					Отбор.Вставить("ЭкземплярОбъекта", ЭкземплярОбъекта);
					НайденныеСтроки = ДеревоИзбранного.Строки.НайтиСтроки(Отбор, Истина);
					Для каждого стр Из НайденныеСтроки Цикл
						род = стр.родитель.строки;
						род.Удалить(стр);
					КонецЦикла;
					СохранитьИзбранное();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Исключение
		Предупреждение("Невозможно открыть " + ПредставлениеОбъекта);
		Возврат;
	КонецПопытки;
КонецПроцедуры

// Открывает форму для упорядочивания избранного
Процедура УпорядочитьИзбранное() Экспорт
	Форма=ПолучитьФорму("УпорядочитьИзбранное");
	Форма.ОткрытьМодально();	
КонецПроцедуры

// Инициализация избранного (получение данных из регистра сведений "КартинкиИФайлы")
Процедура ИнициализироватьИзбранное() Экспорт
	РегКартинкиИФайлы = РегистрыСведений.уатКартинкиИФайлы.СоздатьМенеджерЗаписи();
	РегКартинкиИФайлы.Объект = ПараметрыСеанса.ТекущийПользователь;
	РегКартинкиИФайлы.Идентификатор = ИдентификаторИзбранное;
	РегКартинкиИФайлы.Прочитать();
	ДеревоИзбранного = РегКартинкиИФайлы.Данные.Получить();
	Если ТипЗнч(ДеревоИзбранного) <> Тип("ДеревоЗначений") Тогда
		ДеревоИзбранного = Новый ДеревоЗначений;
	КонецЕсли;
	
	Если ДеревоИзбранного.Колонки.Количество()=0 Тогда
		ДеревоИзбранного.Колонки.Добавить("Представление");
		ДеревоИзбранного.Колонки.Добавить("ТипОбъекта");
		ДеревоИзбранного.Колонки.Добавить("ОткрытьПриЗапуске");
		ДеревоИзбранного.Колонки.Добавить("ВидОбъекта");
		ДеревоИзбранного.Колонки.Добавить("ЭкземплярОбъекта");
		ДеревоИзбранного.Колонки.Добавить("ФормаОбъекта");
	КонецЕсли;
	Если ДеревоИзбранного.Строки.Количество()=0 Тогда
		НовыйЭлемент=ДеревоИзбранного.Строки.Добавить();
		НовыйЭлемент.Представление="Избранное";
		НовыйЭлемент.ТипОбъекта="Избранное";
	КонецЕсли;	
КонецПроцедуры

// Сохранение избранного в регистре сведений КартинкиИФайлы
Процедура СохранитьИзбранное(Оповещать = Истина) Экспорт
	РегКартинкиИФайлы = РегистрыСведений.уатКартинкиИФайлы.СоздатьМенеджерЗаписи();
	РегКартинкиИФайлы.Объект = ПараметрыСеанса.ТекущийПользователь;
	РегКартинкиИФайлы.Идентификатор = ИдентификаторИзбранное;
	РегКартинкиИФайлы.Данные = Новый ХранилищеЗначения(ДеревоИзбранного, Новый СжатиеДанных(9));
	РегКартинкиИФайлы.Записать(Истина);
	
	Если Оповещать Тогда
		Оповестить("ОповещениеИзменениеИзбранного");
	КонецЕсли;	
КонецПроцедуры

ИдентификаторИзбранное = "ИзбранноеПользователя";
ИнициализироватьИзбранное();

#КонецЕсли