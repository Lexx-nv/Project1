#Если Клиент Тогда


// Функция формирует таблицу учетных записей для отправки/получения писем
// текущим пользователем.
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//   ТаблицаЗначений
//
Функция ПолучитьТаблицуУчетныхЗаписейДляТранспорта()

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТекущийПользователь", глЗначениеПеременной("глТекущийПользователь"));
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	уатУчетныеЗаписиЭлектроннойПочты.Ссылка                                 КАК УчетнаяЗапись,
	|	уатУчетныеЗаписиЭлектроннойПочты.АдресЭлектроннойПочты                  КАК АдресЭлектроннойПочты,
	|	уатУчетныеЗаписиЭлектроннойПочты.ИнтервалАвтоПолученияОтправкиСообщений КАК ИнтервалОбновления,
	|	уатУчетныеЗаписиЭлектроннойПочты.ДействиеАвтополученияОтправкиСообщений КАК Действие
	|ИЗ
	|	Справочник.уатУчетныеЗаписиЭлектроннойПочты КАК уатУчетныеЗаписиЭлектроннойПочты
	|ГДЕ
	|	уатУчетныеЗаписиЭлектроннойПочты.АвтоПолучениеОтправкаСообщений
	|	И
	|	уатУчетныеЗаписиЭлектроннойПочты.ОтветственныйЗаАвтоПолучениеОтправкуСообщений = &ТекущийПользователь
	|	И
	|	НЕ уатУчетныеЗаписиЭлектроннойПочты.ПометкаУдаления
	|";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

// Процедура обновляет список необходимых для транспорта текущим пользователем
// учетных записей.
Процедура ОбновитьСписокУчетныхЗаписей() Экспорт
	
	ТаблицаУчетныхЗаписей = ПолучитьТаблицуУчетныхЗаписейДляТранспорта();

	СохраненнаяТаблица = ВосстановитьЗначение("уат_ТаблицаУчетныхЗаписейАвтоПолученияОтправки");

	Если ТипЗнч(СохраненнаяТаблица) = Тип("ТаблицаЗначений") Тогда
		Для каждого СтрокаТаблицы Из СохраненнаяТаблица Цикл
			НайденнаяСтрока = ТаблицаУчетныхЗаписей.Найти(СтрокаТаблицы.УчетнаяЗапись, "УчетнаяЗапись");
			Если НайденнаяСтрока <> Неопределено Тогда
				Если НайденнаяСтрока.ИнтервалОбновления <> СтрокаТаблицы.ИнтервалОбновления Тогда
					Сообщить("Изменился интервал автополучения/отправки писем для учетной записи """ + НайденнаяСтрока.УчетнаяЗапись + """. Новое значение " + НайденнаяСтрока.ИнтервалОбновления + " мин.");
				КонецЕсли;
				Если НайденнаяСтрока.Действие <> СтрокаТаблицы.Действие Тогда
					Сообщить("Изменилось действие автополучения/отправки писем для учетной записи """ + НайденнаяСтрока.УчетнаяЗапись + """. Новое значение " + НайденнаяСтрока.Действие + ".");
				КонецЕсли;
			Иначе
				Сообщить("Из списка автополучения/отправки удалена учетная запись """ + СтрокаТаблицы.УчетнаяЗапись + """.");
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	УчетныеЗаписиАвтоматическогоТранспортаПисем.Очистить();
	
	Для каждого СтрокаТаблицы Из ТаблицаУчетныхЗаписей Цикл
		
		НоваяСтрокаТЧ = УчетныеЗаписиАвтоматическогоТранспортаПисем.Добавить();
		НоваяСтрокаТЧ.УчетнаяЗапись         = СтрокаТаблицы.УчетнаяЗапись;
		НоваяСтрокаТЧ.ИнтервалОбновления    = СтрокаТаблицы.ИнтервалОбновления;
		НоваяСтрокаТЧ.АдресЭлектроннойПочты = СтрокаТаблицы.АдресЭлектроннойПочты;
		НоваяСтрокаТЧ.Действие              = СтрокаТаблицы.Действие;
		
		Если ТипЗнч(СохраненнаяТаблица) = Тип("ТаблицаЗначений") Тогда
			НайденнаяСтрока = СохраненнаяТаблица.Найти(СтрокаТаблицы.УчетнаяЗапись, "УчетнаяЗапись");
		Иначе
			НайденнаяСтрока = Неопределено;
		КонецЕсли;
		
		Если НайденнаяСтрока = Неопределено Тогда
			Сообщить("В список автополучения/отправки добавлена учетная запись """ + СтрокаТаблицы.УчетнаяЗапись + """. Интервал обновления " + СтрокаТаблицы.ИнтервалОбновления + " мин. Действие: " + СтрокаТаблицы.Действие);
		КонецЕсли; 
	
	КонецЦикла;
	
	СохранитьЗначение("уат_ТаблицаУчетныхЗаписейАвтоПолученияОтправки", ТаблицаУчетныхЗаписей.Скопировать());
	
КонецПроцедуры



#КонецЕсли


