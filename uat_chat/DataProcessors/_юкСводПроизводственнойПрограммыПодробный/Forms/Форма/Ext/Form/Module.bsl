
&НаКлиенте
Процедура СформироватьОтчет(Команда)
	фТабличныйДокумент = СформироватьОтчетНаСервере(фДата, фЛот, фМакет, фВыводитьСтрокиДокументаЛота);
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьОтчетНаСервере(пДата, пЛот = Неопределено, пМакет, пВыводитьСтрокиДокументаЛота)
	вТабличныйДокумент = Новый ТабличныйДокумент;
	вТабличныйДокумент.АвтоМасштаб = Истина;
	мЗапрос = Новый Запрос("ВЫБРАТЬ // 0 - Отсторнированные лоты, движения которых не должны попадать как детальные строки регистра ДополнительныеСведенияЗаявок
	|ЛотыПроизводственнойПрограммы.Идентификатор КАК Идентификатор,
	|ЛотыПроизводственнойПрограммы.ДокументЛота КАК ДокументЛота
	|ПОМЕСТИТЬ ОтсторнированныеДокументы
	|ИЗ РегистрНакопления.ЛотыПроизводственнойПрограммы КАК ЛотыПроизводственнойПрограммы
	|ГДЕ ЛотыПроизводственнойПрограммы.ДокументЛота <> ЗНАЧЕНИЕ(Документ.юкЛот.ПустаяСсылка) И ЛотыПроизводственнойПрограммы.ДокументЛота <> ЛотыПроизводственнойПрограммы.Регистратор
	|	И (НАЧАЛОПЕРИОДА(ЛотыПроизводственнойПрограммы.МесяцЛота, ГОД) = НАЧАЛОПЕРИОДА(&Год, ГОД))
	|;
	|ВЫБРАТЬ // 1
	|	ЛотыПроизводственнойПрограммыОбороты.Идентификатор КАК Идентификатор,
	|	ЛотыПроизводственнойПрограммы.МесяцЛота КАК МесяцЛота,
	|	ЛотыПроизводственнойПрограммы.ДокументЛота КАК ДокументЛота,
	|	СУММА(ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену) КАК ДнейВРаботеЗаСмену
	|ПОМЕСТИТЬ ОстаткиСИдентификаторами
	|ИЗ
	|	РегистрНакопления.ЛотыПроизводственнойПрограммы.Обороты(НАЧАЛОПЕРИОДА(&Год, ГОД), КОНЕЦПЕРИОДА(&Год, ГОД), , ) КАК ЛотыПроизводственнойПрограммыОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЛотыПроизводственнойПрограммы КАК ЛотыПроизводственнойПрограммы
	|		ПО ЛотыПроизводственнойПрограммыОбороты.Идентификатор = ЛотыПроизводственнойПрограммы.Идентификатор
	|			И (НАЧАЛОПЕРИОДА(ЛотыПроизводственнойПрограммы.МесяцЛота, ГОД) = НАЧАЛОПЕРИОДА(&Год, ГОД))
	|			И ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.Идентификатор В(ВЫБРАТЬ ОтсторнированныеДокументы.Идентификатор ИЗ ОтсторнированныеДокументы) Тогда НЕ ЛотыПроизводственнойПрограммы.Регистратор В(ВЫБРАТЬ ОтсторнированныеДокументы.ДокументЛота ИЗ ОтсторнированныеДокументы) ИНАЧЕ ИСТИНА КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЛотыПроизводственнойПрограммыОбороты.Идентификатор,
	|	ЛотыПроизводственнойПрограммы.МесяцЛота,
	|	ЛотыПроизводственнойПрограммы.ДокументЛота
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену) > 0
	|;
	|выбрать	// 2
	|	лоты.Номенклатура1 как номенклатура
	|поместить ПодзапросНоменклатуры
	|из документ.юклот как лоты
	|	ГДЕ лоты.Проведен И (НАЧАЛОПЕРИОДА(лоты.НачалоПериодаДокумента, ГОД) = НАЧАЛОПЕРИОДА(&Год, ГОД))
	|объединить
	|выбрать
	|	лоты.номенклатура2
	|	из документ.юклот как лоты
	|	ГДЕ лоты.Проведен И (НАЧАЛОПЕРИОДА(лоты.НачалоПериодаДокумента, ГОД) = НАЧАЛОПЕРИОДА(&Год, ГОД))
	|объединить
	|выбрать
	|	лоты.номенклатура3
	|из документ.юклот как лоты
	|	ГДЕ лоты.Проведен И (НАЧАЛОПЕРИОДА(лоты.НачалоПериодаДокумента, ГОД) = НАЧАЛОПЕРИОДА(&Год, ГОД))
	|;
	|выбрать	// 3
	|	ПодзапросНоменклатуры.Номенклатура
	|из ПодзапросНоменклатуры как ПодзапросНоменклатуры
	|где ПодзапросНоменклатуры.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|;
	|	ВЫБРАТЬ		// 4
	|	ЛотыПроизводственнойПрограммыОбороты.Идентификатор КАК ИдентификаторСтрокиЛота,
	|	ЛотыПроизводственнойПрограммыОбороты.МесяцЛота КАК МесяцЛота,
	|	ЛотыПроизводственнойПрограммы.Контрагент КАК Контрагент,
	|	ЛотыПроизводственнойПрограммы.Договор КАК Договор,
	|	ЛотыПроизводственнойПрограммы.ТипТС КАК ТипТС,
	|	ЛотыПроизводственнойПрограммы.РежимРаботы КАК РежимРаботы,
	|	ЛотыПроизводственнойПрограммы.ГрупповойТип КАК ГруппаТипов,
	|	ЛотыПроизводственнойПрограммы.ЧасыРаботы КАК ЧасыРаботы,
	|	ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену > 0 И ЛотыПроизводственнойПрограммы.КоличествоТС > 0 ТОГДА (ЛотыПроизводственнойПрограммы.ЧасыРаботы + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура1.Наименование = ""Отстой""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура2.Наименование = ""Отстой""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга2
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура3.Наименование = ""Отстой""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга3
	|		ИНАЧЕ 0
	|	КОНЕЦ) * ЛотыПроизводственнойПрограммы.Сменность * ЛотыПроизводственнойПрограммы.КоличествоТС * ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену / ЛотыПроизводственнойПрограммы.КоличествоТС ИНАЧЕ 0 КОНЕЦ КАК ЧасовВсего,
	|	ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену > 0 И ЛотыПроизводственнойПрограммы.КоличествоТС > 0 ТОГДА ЛотыПроизводственнойПрограммы.ЧасыРаботы * ЛотыПроизводственнойПрограммы.Сменность * ЛотыПроизводственнойПрограммы.КоличествоТС * ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену / ЛотыПроизводственнойПрограммы.КоличествоТС ИНАЧЕ 0 КОНЕЦ КАК ЧасовВРаботе,
	|	ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура1.Наименование = ""Отстой""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура2.Наименование = ""Отстой""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга2
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура3.Наименование = ""Отстой""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга3
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Простой,
	|	ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену > 0 И ЛотыПроизводственнойПрограммы.КоличествоТС > 0 ТОГДА (ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура1.Наименование ПОДОБНО ""Перепробег%""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура2.Наименование ПОДОБНО ""Перепробег%""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга2
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура3.Наименование ПОДОБНО ""Перепробег%""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга3
	|		ИНАЧЕ 0
	|	КОНЕЦ) ИНАЧЕ 0 КОНЕЦ КАК Перепробег,
	|	ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену > 0 И ЛотыПроизводственнойПрограммы.КоличествоТС > 0 ТОГДА (ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура1.Наименование ПОДОБНО ""Перепробег%""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура2.Наименование ПОДОБНО ""Перепробег%""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга2
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура3.Наименование ПОДОБНО ""Перепробег%""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга3
	|		ИНАЧЕ 0
	|	КОНЕЦ) * ЛотыПроизводственнойПрограммы.Сменность * ЛотыПроизводственнойПрограммы.КоличествоТС * ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену / ЛотыПроизводственнойПрограммы.КоличествоТС ИНАЧЕ 0 КОНЕЦ КАК ПерепробегЗаМесяц,
	|	ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену > 0 И ЛотыПроизводственнойПрограммы.КоличествоТС > 0 ТОГДА (ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура1.Наименование = ""Отстой""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура2.Наименование = ""Отстой""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга2
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура3.Наименование = ""Отстой""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга3
	|		ИНАЧЕ 0
	|	КОНЕЦ) * ЛотыПроизводственнойПрограммы.Сменность * ЛотыПроизводственнойПрограммы.КоличествоТС * ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену / ЛотыПроизводственнойПрограммы.КоличествоТС ИНАЧЕ 0 КОНЕЦ КАК ЧасовПростой,
	|	ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура1.Наименование = ""мото/час""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура2.Наименование = ""мото/час""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга2
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура3.Наименование = ""мото/час""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга3
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РВО,
	|	ЛотыПроизводственнойПрограммы.ТарифЧасовой КАК ТарифЧасовой,
	|	ЛотыПроизводственнойПрограммы.ТарифПробег КАК ТарифПробег,
	|	ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура1.Наименование = ""Отстой""
	|			ТОГДА ЛотыПроизводственнойПрограммы.ТарифУслуга1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура2.Наименование = ""Отстой""
	|			ТОГДА ЛотыПроизводственнойПрограммы.ТарифУслуга2
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура3.Наименование = ""Отстой""
	|			ТОГДА ЛотыПроизводственнойПрограммы.ТарифУслуга3
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТарифПростой,
	|	ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура1.Наименование ПОДОБНО ""Перепробег%""
	|			ТОГДА ЛотыПроизводственнойПрограммы.ТарифУслуга1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура2.Наименование ПОДОБНО ""Перепробег%""
	|			ТОГДА ЛотыПроизводственнойПрограммы.ТарифУслуга2
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура3.Наименование ПОДОБНО ""Перепробег%""
	|			ТОГДА ЛотыПроизводственнойПрограммы.ТарифУслуга3
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТарифПерепробег,
	|	ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура1.Наименование = ""мото/час""
	|			ТОГДА ЛотыПроизводственнойПрограммы.ТарифУслуга1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура2.Наименование = ""мото/час""
	|			ТОГДА ЛотыПроизводственнойПрограммы.ТарифУслуга2
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура3.Наименование = ""мото/час""
	|			ТОГДА ЛотыПроизводственнойПрограммы.ТарифУслуга3
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТарифРВО,
	|	ЛотыПроизводственнойПрограммы.КоличествоУслуга1 КАК КоличествоУслуга1,
	|	ЛотыПроизводственнойПрограммы.КоличествоУслуга2 КАК КоличествоУслуга2,
	|	ЛотыПроизводственнойПрограммы.КоличествоУслуга3 КАК КоличествоУслуга3,
	|	ЛотыПроизводственнойПрограммы.Пробег КАК Пробег,
	|	ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену > 0 ТОГДА ЛотыПроизводственнойПрограммы.Сменность ИНАЧЕ 0 КОНЕЦ КАК Сменность,
	|	ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену > 0 И ЛотыПроизводственнойПрограммы.КоличествоТС > 0 ТОГДА ЛотыПроизводственнойПрограммы.КоличествоТС / ЛотыПроизводственнойПрограммы.КоличествоТС ИНАЧЕ 0 КОНЕЦ КАК КоличествоТС,
	|	ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену КАК ДнейВМесяце,
	|	ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену > 0 И ЛотыПроизводственнойПрограммы.КоличествоТС > 0 ТОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену * ЛотыПроизводственнойПрограммы.КоличествоТС / ЛотыПроизводственнойПрограммы.КоличествоТС ИНАЧЕ 0 КОНЕЦ КАК ДнейВРаботе,
	|	ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену > 0 И ЛотыПроизводственнойПрограммы.КоличествоТС > 0 ТОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену * ЛотыПроизводственнойПрограммы.КоличествоТС * ЛотыПроизводственнойПрограммы.Сменность / ЛотыПроизводственнойПрограммы.КоличествоТС ИНАЧЕ 0 КОНЕЦ КАК СменЗаМесяц,
	|	ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену > 0 И ЛотыПроизводственнойПрограммы.КоличествоТС > 0 ТОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену * ЛотыПроизводственнойПрограммы.КоличествоТС * ЛотыПроизводственнойПрограммы.Сменность * ЛотыПроизводственнойПрограммы.Пробег / ЛотыПроизводственнойПрограммы.КоличествоТС ИНАЧЕ 0 КОНЕЦ КАК ПробегЗаМесяц,
	|	ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену > 0 И ЛотыПроизводственнойПрограммы.КоличествоТС > 0 ТОГДА (ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура1.Наименование = ""мото/час""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура2.Наименование = ""мото/час""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга2
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.Номенклатура3.Наименование = ""мото/час""
	|			ТОГДА ЛотыПроизводственнойПрограммы.КоличествоУслуга3
	|		ИНАЧЕ 0
	|	КОНЕЦ) * ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену * ЛотыПроизводственнойПрограммы.КоличествоТС * ЛотыПроизводственнойПрограммы.Сменность / ЛотыПроизводственнойПрограммы.КоличествоТС ИНАЧЕ 0 КОНЕЦ КАК РвоЗаМесяц,
	|	ЛотыПроизводственнойПрограммы.ОграничениеПоВозрастуТС КАК ОграничениеПоВозрастуТС,
	|	ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену > 0 И ЛотыПроизводственнойПрограммы.КоличествоТС > 0 ТОГДА ВЫБОР
	|		КОГДА ЛотыПроизводственнойПрограммы.СуммаЧасы = 12
	|			ТОГДА 0
	|		ИНАЧЕ ЛотыПроизводственнойПрограммы.СуммаЧасы + ЛотыПроизводственнойПрограммы.СуммаУслуги + ЛотыПроизводственнойПрограммы.СуммаПробег
	|	КОНЕЦ / ЛотыПроизводственнойПрограммы.КоличествоТС ИНАЧЕ 0 КОНЕЦ КАК СуммаИтого,
	|	ЛотыПроизводственнойПрограммы.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	ЛотыПроизводственнойПрограммы.Номенклатура1.Наименование КАК Номенклатура1,
	|	ЛотыПроизводственнойПрограммы.Номенклатура2.Наименование КАК Номенклатура2,
	|	ЛотыПроизводственнойПрограммы.Номенклатура3.Наименование КАК Номенклатура3,
	|	ЛотыПроизводственнойПрограммы.НаименованиеТипаКонтрагента КАК НаименованиеТипаКонтрагента,
	|	ЛотыПроизводственнойПрограммы.МесторождениеСтрокой КАК Месторождение,
	|	"""" КАК Разделитель,
	|	ЛотыПроизводственнойПрограммы.ДокументЛота КАК Документ,
	|	ПроизводственнаяПрограмма.ТС КАК ТС,
	|	ПроизводственнаяПрограмма.ТС.ГаражныйНомер КАК ГаражныйНомер,
	|	ВЫБОР КОГДА ЕСТЬNULL(ПроизводственнаяПрограмма.ТС, ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка) ТОГДА ""Собственные"" ИНАЧЕ ""Подрядные"" КОНЕЦ КАК ВидПодряда,
	|	ВЫБОР КОГДА ЕСТЬNULL(ПроизводственнаяПрограмма.ТС, ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка) ТОГДА ВЫБОР КОГДА (НЕ уатМестонахождениеТССрезПоследних.Состояние = ЗНАЧЕНИЕ(Справочник.уатСостояниеТС.Выбыло)) ТОГДА уатМестонахождениеТССрезПоследних.Подразделение ИНАЧЕ уатМестонахождениеТССрезПоследних.Состояние КОНЕЦ ИНАЧЕ ПроизводственнаяПрограмма.КолоннаТС КОНЕЦ КАК Колонна,
	|	ЛотыПроизводственнойПрограммы.НомерСтрокиДокумента КАК НомерСтрокиЛота,
	|	ВЫБОР КОГДА ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену > 0 И ЛотыПроизводственнойПрограммы.КоличествоТС > 0 ТОГДА ((ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену * ЛотыПроизводственнойПрограммы.КоличествоТС * ЛотыПроизводственнойПрограммы.Сменность * ЛотыПроизводственнойПрограммы.Пробег * ПроизводственнаяПрограмма.ТарифСубподрядПробег) + (ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену * ЛотыПроизводственнойПрограммы.КоличествоТС * ЛотыПроизводственнойПрограммы.Сменность * ЛотыПроизводственнойПрограммы.ЧасыРаботы * ПроизводственнаяПрограмма.ТарифСубподрядЧасовой) + (ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену * ЛотыПроизводственнойПрограммы.КоличествоТС * ЛотыПроизводственнойПрограммы.Сменность * ЛотыПроизводственнойПрограммы.КоличествоУслуга1 * ПроизводственнаяПрограмма.ТарифСубподрядУслуга1))  / ЛотыПроизводственнойПрограммы.КоличествоТС ИНАЧЕ 0 КОНЕЦ КАК СуммаСубподряд,
	|	ПроизводственнаяПрограмма.НомерСтрокиДокумента КАК НомерСтрокиПП,
	|	ПроизводственнаяПрограмма.ТарифСубподрядЧасовой КАК ТарифСубподрядЧасовой,
	|	ПроизводственнаяПрограмма.ТарифСубподрядПробег КАК ТарифСубподрядПробег,
	|	ПроизводственнаяПрограмма.ТарифСубподрядУслуга1 КАК ТарифСубподрядУслуга1
	|ИЗ
	|	РегистрНакопления.ЛотыПроизводственнойПрограммы.Обороты(НАЧАЛОПЕРИОДА(&Год, ГОД), КОНЕЦПЕРИОДА(&Год, ГОД), , ) КАК ЛотыПроизводственнойПрограммыОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиСИдентификаторами КАК ОстаткиСИдентификаторами
	|		ПО (ОстаткиСИдентификаторами.Идентификатор = ЛотыПроизводственнойПрограммыОбороты.Идентификатор)
	|			И (НАЧАЛОПЕРИОДА(ОстаткиСИдентификаторами.МесяцЛота, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ЛотыПроизводственнойПрограммыОбороты.МесяцЛота, МЕСЯЦ))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЛотыПроизводственнойПрограммы КАК ЛотыПроизводственнойПрограммы
	|		ПО (ОстаткиСИдентификаторами.Идентификатор = ЛотыПроизводственнойПрограммы.Идентификатор)
	|			И (ОстаткиСИдентификаторами.ДокументЛота = ЛотыПроизводственнойПрограммы.Регистратор)
	|			И (НАЧАЛОПЕРИОДА(ОстаткиСИдентификаторами.МесяцЛота, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ЛотыПроизводственнойПрограммы.МесяцЛота, МЕСЯЦ))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПроизводственнаяПрограмма КАК ПроизводственнаяПрограмма
	|		ПО ОстаткиСИдентификаторами.Идентификатор = ПроизводственнаяПрограмма.Идентификатор
	|			И (НАЧАЛОПЕРИОДА(ЛотыПроизводственнойПрограммыОбороты.МесяцЛота, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПроизводственнаяПрограмма.Месяц, МЕСЯЦ))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатМестонахождениеТС.СрезПоследних(КОНЕЦПЕРИОДА(&Год, ГОД), Состояние <> ЗНАЧЕНИЕ(Справочник.уатСостояниеТС.Выбыло)) КАК уатМестонахождениеТССрезПоследних
	|			ПО ПроизводственнаяПрограмма.ТС = уатМестонахождениеТССрезПоследних.ТС
	|ГДЕ
	|	ВЫБОР КОГДА &пЛот <> ЗНАЧЕНИЕ(Документ.юкЛот.ПустаяСсылка) ТОГДА ЛотыПроизводственнойПрограммы.Регистратор = &пЛот ИНАЧЕ ИСТИНА КОНЕЦ
	|	И НАЧАЛОПЕРИОДА(ЛотыПроизводственнойПрограммыОбороты.МесяцЛота, ГОД) = НАЧАЛОПЕРИОДА(&Год, ГОД)
	|	И НЕ ЛотыПроизводственнойПрограммы.ДнейВРаботеЗаСмену ЕСТЬ NULL
	|	И (ЛотыПроизводственнойПрограммыОбороты.СуммаЧасыОборот > 0
	|			ИЛИ ЛотыПроизводственнойПрограммыОбороты.СуммаУслугиОборот > 0
	|			ИЛИ ЛотыПроизводственнойПрограммыОбороты.СуммаПробегОборот > 0)");
	мЗапрос.УстановитьПараметр("Год", КонецГода(пДата));
	мЗапрос.УстановитьПараметр("пЛот", ?(ЗначениеЗаполнено(пЛот), пЛот, ПредопределенноеЗначение("Документ.юкЛот.ПустаяСсылка")));
	
	мРезультатПакета = мЗапрос.ВыполнитьПакет();
	мРезультатНоменклатура = мРезультатПакета[3].Выгрузить();
	мРезультатПолный = мРезультатПакета[4].Выгрузить();
	
	Если мРезультатНоменклатура.Количество() > 0 Тогда
		//есть номенклатура - нужны отдельные колонки под тарифы и количество по этим услугам
		//	ключ доступа к колонке Таблицы - "Тариф" + СоответствиеНоменклатурКодамКолонок.Получить(Номенклатура.Код);
		//	
	КонецЕсли;
	
	//итоги детальные; детальные по периодам
	мТаблицаДеталиПоПериодам = мРезультатПолный.Скопировать();
	мТаблицаДеталиПоПериодам.Свернуть("Документ, ИдентификаторСтрокиЛота, НаименованиеТипаКонтрагента, НомерСтрокиЛота, МесяцЛота", "КоличествоТС, Сменность, ДнейВМесяце, ДнейВРаботе, ЧасовВсего, ЧасовВРаботе, ЧасовПростой, СменЗаМесяц, ПробегЗаМесяц, ПерепробегЗаМесяц, РвоЗаМесяц, СуммаИтого, СуммаСубподряд");
	мТаблицаДеталиПоПериодам.Сортировать("Документ, НомерСтрокиЛота ВОЗР, ИдентификаторСтрокиЛота");
	мТаблицаДетали = мТаблицаДеталиПоПериодам.Скопировать();
	мТаблицаДетали.Свернуть("Документ, ИдентификаторСтрокиЛота, НаименованиеТипаКонтрагента", "КоличествоТС, Сменность, ДнейВМесяце, ДнейВРаботе, ЧасовВсего, ЧасовВРаботе, ЧасовПростой, СменЗаМесяц, ПробегЗаМесяц, ПерепробегЗаМесяц, РвоЗаМесяц, СуммаИтого, СуммаСубподряд");
	мТаблицаДетали.Индексы.Добавить("ИдентификаторСтрокиЛота");
	мТаблицаДеталиТСПоПериодам = мРезультатПолный.Скопировать();
	мТаблицаДеталиТСПоПериодам.Свернуть("Документ, ИдентификаторСтрокиЛота, НаименованиеТипаКонтрагента, ТС, Колонна, НомерСтрокиПП, МесяцЛота", "КоличествоТС, Сменность, ДнейВМесяце, ДнейВРаботе, ЧасовВсего, ЧасовВРаботе, ЧасовПростой, СменЗаМесяц, ПробегЗаМесяц, ПерепробегЗаМесяц, РвоЗаМесяц, СуммаИтого, СуммаСубподряд");
	мТаблицаДеталиТС = мРезультатПолный.Скопировать();
	мТаблицаДеталиТС.Свернуть("Документ, ИдентификаторСтрокиЛота, НаименованиеТипаКонтрагента, ТС, Колонна, НомерСтрокиПП", "КоличествоТС, Сменность, ДнейВМесяце, ДнейВРаботе, ЧасовВсего, ЧасовВРаботе, ЧасовПростой, СменЗаМесяц, ПробегЗаМесяц, ПерепробегЗаМесяц, РвоЗаМесяц, СуммаИтого, СуммаСубподряд");
	мТаблицаДеталиТС.Индексы.Добавить("ИдентификаторСтрокиЛота");
	
	//итоги по договорам и документам; договорам, документам и периодам
	мТаблицаДокументыПоПериодам = мРезультатПолный.Скопировать();
	мТаблицаДокументыПоПериодам.Свернуть("Документ, МесяцЛота", "КоличествоТС, Сменность, ДнейВМесяце, ДнейВРаботе, ЧасовВсего, ЧасовВРаботе, ЧасовПростой, СменЗаМесяц, ПробегЗаМесяц, ПерепробегЗаМесяц, РвоЗаМесяц, СуммаИтого, СуммаСубподряд");
	мТаблицаДокументы = мТаблицаДокументыПоПериодам.Скопировать();
	мТаблицаДокументы.Свернуть("Документ", "КоличествоТС, Сменность, ДнейВМесяце, ДнейВРаботе, ЧасовВсего, ЧасовВРаботе, ЧасовПростой, СменЗаМесяц, ПробегЗаМесяц, ПерепробегЗаМесяц, РвоЗаМесяц, СуммаИтого, СуммаСубподряд");
	
	//итоги по документам и видам подряда; документам, видам подряда и периодам
	мТаблицаДокументыВидыПодрядаСИдентификаторами = мРезультатПолный.Скопировать();
	мТаблицаДокументыВидыПодрядаСИдентификаторами.Свернуть("Документ, ВидПодряда, ИдентификаторСтрокиЛота, НомерСтрокиЛота", "КоличествоТС, Сменность, ДнейВМесяце, ДнейВРаботе, ЧасовВсего, ЧасовВРаботе, ЧасовПростой, СменЗаМесяц, ПробегЗаМесяц, ПерепробегЗаМесяц, РвоЗаМесяц, СуммаИтого, СуммаСубподряд");
	мТаблицаДокументыВидыПодрядаСИдентификаторами.Сортировать("Документ, НомерСтрокиЛота ВОЗР, ИдентификаторСтрокиЛота");
	мТаблицаДокументыВидыПодрядаСИдентификаторами.Индексы.Добавить("Документ");
	
	мТаблицаДокументыВидыПодрядаПоПериодам = мРезультатПолный.Скопировать();
	мТаблицаДокументыВидыПодрядаПоПериодам.Свернуть("Документ, ВидПодряда, МесяцЛота", "КоличествоТС, Сменность, ДнейВМесяце, ДнейВРаботе, ЧасовВсего, ЧасовВРаботе, ЧасовПростой, СменЗаМесяц, ПробегЗаМесяц, ПерепробегЗаМесяц, РвоЗаМесяц, СуммаИтого, СуммаСубподряд");
	мТаблицаДокументыВидыПодряда = мТаблицаДокументыВидыПодрядаПоПериодам.Скопировать();
	мТаблицаДокументыВидыПодряда.Свернуть("Документ, ВидПодряда", "КоличествоТС, Сменность, ДнейВМесяце, ДнейВРаботе, ЧасовВсего, ЧасовВРаботе, ЧасовПростой, СменЗаМесяц, ПробегЗаМесяц, ПерепробегЗаМесяц, РвоЗаМесяц, СуммаИтого, СуммаСубподряд");
	
	//итоги по договорам; договорам и периодам
	мТаблицаГруппировок = мРезультатПолный.Скопировать();
	мТаблицаГруппировок.Свернуть("Договор, Документ", "");
	
	мТаблицаДоговораПоПериодам = мРезультатПолный.Скопировать();
	мТаблицаДоговораПоПериодам.Свернуть("Договор, МесяцЛота", "КоличествоТС, Сменность, ДнейВМесяце, ДнейВРаботе, ЧасовВсего, ЧасовВРаботе, ЧасовПростой, СменЗаМесяц, ПробегЗаМесяц, ПерепробегЗаМесяц, РвоЗаМесяц, СуммаИтого, СуммаСубподряд");
	мТаблицаДоговора = мТаблицаДоговораПоПериодам.Скопировать();
	мТаблицаДоговора.Свернуть("Договор", "КоличествоТС, Сменность, ДнейВМесяце, ДнейВРаботе, ЧасовВсего, ЧасовВРаботе, ЧасовПростой, СменЗаМесяц, ПробегЗаМесяц, ПерепробегЗаМесяц, РвоЗаМесяц, СуммаИтого, СуммаСубподряд");
	
	// общие итоги по периодам
	мТаблицаПериодов = мРезультатПолный.Скопировать();
	мТаблицаПериодов.Свернуть("МесяцЛота", "КоличествоТС, Сменность, ДнейВМесяце, ДнейВРаботе, ЧасовВсего, ЧасовВРаботе, ЧасовПростой, СменЗаМесяц, ПробегЗаМесяц, ПерепробегЗаМесяц, РвоЗаМесяц, СуммаИтого, СуммаСубподряд");
	мТаблицаПериодов.Сортировать("МесяцЛота ВОЗР");
	мТаблицаОбщихИтогов = мТаблицаПериодов.Скопировать();
	мТаблицаОбщихИтогов.Свернуть("", "КоличествоТС, Сменность, ДнейВМесяце, ДнейВРаботе, ЧасовВсего, ЧасовВРаботе, ЧасовПростой, СменЗаМесяц, ПробегЗаМесяц, ПерепробегЗаМесяц, РвоЗаМесяц, СуммаИтого, СуммаСубподряд");
	
	мМассивПоказателейПериодов = Новый Массив();
	
	мМассивПоказателейПериодов.Добавить("КоличествоТс");
	мМассивПоказателейПериодов.Добавить("Сменность");
	мМассивПоказателейПериодов.Добавить("ДнейВМесяце");
	мМассивПоказателейПериодов.Добавить("ДнейВРаботе");
	мМассивПоказателейПериодов.Добавить("ЧасовВсего");
	мМассивПоказателейПериодов.Добавить("ЧасовВРаботе");
	мМассивПоказателейПериодов.Добавить("ЧасовПростой");
	мМассивПоказателейПериодов.Добавить("СменЗаМесяц");
	мМассивПоказателейПериодов.Добавить("ПробегЗаМесяц");
	мМассивПоказателейПериодов.Добавить("ПерепробегЗаМесяц");
	мМассивПоказателейПериодов.Добавить("РвоЗаМесяц");
	мМассивПоказателейПериодов.Добавить("СуммаИтого");
	мМассивПоказателейПериодов.Добавить("СуммаСубподряд");
	
	мМассивВидовПодряда = Новый Массив;
	мМассивВидовПодряда.Добавить("Собственные");
	мМассивВидовПодряда.Добавить("Подрядные");
	
	мСтруктураЗамен = Новый Структура("ИдентификаторСтрокиЛота, ТС", "НаименованиеТипаКонтрагента", "НаименованиеТипаКонтрагента");
	
	
	//вывод шапки
	мОбластьПараметрШапка = пМакет.ПолучитьОбласть("ОбластьПараметрШапка");		//Заголовок
	мОбластьПериодШапка = пМакет.ПолучитьОбласть("ОбластьПериодШапка");			//Заголовок
	мОбластьКварталШапка = пМакет.ПолучитьОбласть("ОбластьКварталШапка");
	мОбластьРеквизитШапка = пМакет.ПолучитьОбласть("ОбластьРеквизитШапка");
	мОбластьРеквизитПоказательШапка = пМакет.ПолучитьОбласть("ОбластьРеквизитПоказательШапка");
	мОбластьРеквизитРазделительШапка = пМакет.ПолучитьОбласть("ОбластьРеквизитРазделительШапка");
	
	мОбластьЯчейкаРаздел0 = пМакет.ПолучитьОбласть("ОбластьЯчейкаРаздел0");		//Наименование
	мОбластьЯчейкаРаздел1 = пМакет.ПолучитьОбласть("ОбластьЯчейкаРаздел1");
	мОбластьЯчейкаРаздел2 = пМакет.ПолучитьОбласть("ОбластьЯчейкаРаздел2");
	мОбластьЯчейкаРаздел3 = пМакет.ПолучитьОбласть("ОбластьЯчейкаРаздел3");
	
	мОбластьРеквизит0 = пМакет.ПолучитьОбласть("ОбластьРеквизит0");
	мОбластьРеквизит1 = пМакет.ПолучитьОбласть("ОбластьРеквизит1");
	мОбластьРеквизит2 = пМакет.ПолучитьОбласть("ОбластьРеквизит2");
	мОбластьРеквизит3 = пМакет.ПолучитьОбласть("ОбластьРеквизит3");
	
	мОбластьЯчейкаЗначение0 = пМакет.ПолучитьОбласть("ОбластьЯчейкаЗначение0");	//Значение
	мОбластьЯчейкаЗначение1 = пМакет.ПолучитьОбласть("ОбластьЯчейкаЗначение1");
	мОбластьЯчейкаЗначение2 = пМакет.ПолучитьОбласть("ОбластьЯчейкаЗначение2");
	мОбластьЯчейкаЗначение3 = пМакет.ПолучитьОбласть("ОбластьЯчейкаЗначение3");
	
	мОбластьЯчейкаЗначениеКвартала0 = пМакет.ПолучитьОбласть("ОбластьЯчейкаЗначениеКвартала0");
	мОбластьЯчейкаЗначениеКвартала1 = пМакет.ПолучитьОбласть("ОбластьЯчейкаЗначениеКвартала1");
	мОбластьЯчейкаЗначениеКвартала2 = пМакет.ПолучитьОбласть("ОбластьЯчейкаЗначениеКвартала2");
	мОбластьЯчейкаЗначениеКвартала3 = пМакет.ПолучитьОбласть("ОбластьЯчейкаЗначениеКвартала3");
	
	мОбластьРазделитель0 = пМакет.ПолучитьОбласть("ОбластьЯчейкаРазделитель0");
	мОбластьРазделитель1 = пМакет.ПолучитьОбласть("ОбластьЯчейкаРазделитель1");
	мОбластьРазделитель2 = пМакет.ПолучитьОбласть("ОбластьЯчейкаРазделитель2");
	мОбластьРазделитель3 = пМакет.ПолучитьОбласть("ОбластьЯчейкаРазделитель3");
	
	мМассивПоказателейИзмерений = "Месторождение р, Колонна р, ГаражныйНомер п, РежимРаботы п, ЧасыРаботы п, Простой п, Пробег п, Перепробег п, Рво п, Разделитель1 0,ТарифЧасовой п, ТарифПробег п, ТарифПерепробег п, ТарифПростой п, ТарифРво п, Разделитель2 0, ТарифСубподрядЧасовой п, ТарифСубподрядПробег п, ТарифСубподрядУслуга1 п";
	мМассивПоказателейИзмерений = СтрЗаменить(мМассивПоказателейИзмерений, ",", Символы.ПС);
	мСтруктураПоказателейИзмерений = Новый Структура();
	мСоответствиеПоказателейИзмеренийОбластям = Новый Соответствие();
	Для Итр = 1 По СтрЧислоСтрок(мМассивПоказателейИзмерений) Цикл
		мСтрока = СокрЛП(СтрПолучитьСтроку(мМассивПоказателейИзмерений, Итр));
		мПозицияПробела = Найти(мСтрока, " ");
		мИмя = Лев(мСтрока, мПозицияПробела - 1);
		мВидПоказателя = Сред(мСтрока, мПозицияПробела + 1);
		мСтруктураПоказателейИзмерений.Вставить(мИмя);
		мСоответствиеПоказателейИзмеренийОбластям.Вставить(мИмя, мВидПоказателя);
	КонецЦикла;
	
	мСтруктураДополнительныхПоказателей = Новый Структура();
	мСтруктураДополнительныхПоказателей.Вставить("СтруктураПолей", мСтруктураПоказателейИзмерений);
	мСтруктураДополнительныхПоказателей.Вставить("СоответствиеОбластям", мСоответствиеПоказателейИзмеренийОбластям);
	
	мОбластьПараметрШапка.Параметры.Заголовок = "Договор / Лот / Наименование ТС";
	вТабличныйДокумент.Вывести(мОбластьПараметрШапка, 0);
	
	вТабличныйДокумент.НачатьАвтогруппировкуКолонок();
	мУровень = 0;
	мВывестиРазделительВКонец = Ложь;
	Для Каждого мПараКлючЗначениеПоказателяИзмерений Из мСтруктураДополнительныхПоказателей.СтруктураПолей Цикл
		мОбластьРеквизита = мОбластьРеквизитШапка;
		мВидРеквизита = мСоответствиеПоказателейИзмеренийОбластям.Получить(мПараКлючЗначениеПоказателяИзмерений.Ключ);
		мУровень = ?(мУровень = -1, 1, мУровень);
		Если мВидРеквизита = "п" Тогда
			мОбластьРеквизита = мОбластьРеквизитПоказательШапка;
		ИначеЕсли мВидРеквизита = "0" Тогда
			мОбластьРеквизита = мОбластьРеквизитРазделительШапка;
			мУровень = -1;
			мВывестиРазделительВКонец = Истина;
		КонецЕсли;
		мОбластьРеквизита.Параметры.Заголовок = ПреобразоватьВЗаголовок(мПараКлючЗначениеПоказателяИзмерений.Ключ);
		вТабличныйДокумент.Присоединить(мОбластьРеквизита, ?(мУровень = -1, 0, мУровень));
	КонецЦикла;
	Если мВывестиРазделительВКонец Тогда
		вТабличныйДокумент.Присоединить(мОбластьРеквизитРазделительШапка, 0);
	КонецЕсли;
	вТабличныйДокумент.ЗакончитьАвтогруппировкуКолонок();
	
	//шапка периодов: месяцы, кварталы
	вТабличныйДокумент.НачатьАвтогруппировкуКолонок();
	Для Каждого мПериод Из мТаблицаПериодов Цикл
		мНачало = вТабличныйДокумент.ШиринаТаблицы + 1;
		Для Каждого мПоказатель Из мМассивПоказателейПериодов Цикл
			мОбластьПериодШапка.Параметры.Показатель = ПреобразоватьВЗаголовок(мПоказатель);
			мОбластьПериодШапка.Параметры.Период = мПериод.МесяцЛота;
			вТабличныйДокумент.Присоединить(мОбластьПериодШапка, 1);
		КонецЦикла;
		вТабличныйДокумент.Область("R1C" + мНачало + ":R1C" + вТабличныйДокумент.ШиринаТаблицы).Объединить();
		Если КонецМесяца(мПериод.МесяцЛота) = КонецКвартала(мПериод.МесяцЛота) Тогда
			мНачало = вТабличныйДокумент.ШиринаТаблицы + 1;
			Для Каждого мПоказатель Из мМассивПоказателейПериодов Цикл
				мОбластьКварталШапка.Параметры.Показатель = ПреобразоватьВЗаголовок(мПоказатель, "квартал");
				мОбластьКварталШапка.Параметры.Период = "" + (Месяц(мПериод.МесяцЛота) / 3) + "-й квартал";
				вТабличныйДокумент.Присоединить(мОбластьКварталШапка, 0);
			КонецЦикла;
			вТабличныйДокумент.Область("R1C" + мНачало + ":R1C" + вТабличныйДокумент.ШиринаТаблицы).Объединить();
		КонецЕсли;
	КонецЦикла;
	
	//шапка итога года
	мНачало = вТабличныйДокумент.ШиринаТаблицы + 1;
	Для Каждого мПоказатель Из мМассивПоказателейПериодов Цикл
		мОбластьКварталШапка.Параметры.Показатель = ПреобразоватьВЗаголовок(мПоказатель, "год");
		мОбластьКварталШапка.Параметры.Период = "Итого за год";
		вТабличныйДокумент.Присоединить(мОбластьКварталШапка, 0);
	КонецЦикла;
	вТабличныйДокумент.Область("R1C" + мНачало + ":R1C" + вТабличныйДокумент.ШиринаТаблицы).Объединить();
	вТабличныйДокумент.ЗакончитьАвтогруппировкуКолонок();
	
	//Доп
	мОбластьКварталШапка.Параметры.Показатель = "Прибыль";
	мОбластьКварталШапка.Параметры.Период = "";
	вТабличныйДокумент.Присоединить(мОбластьКварталШапка, 0);
	
	//вывод строк
	мВыводитьПодпериоды = Ложь;
	вТабличныйДокумент.НачатьАвтогруппировкуСтрок();
	Для Каждого мДоговор Из мТаблицаДоговора Цикл
		мОтборПоДоговору = Новый Структура("Договор", мДоговор.Договор);
		мСтрокиДокументов = мТаблицаГруппировок.НайтиСтроки(мОтборПоДоговору);
		ВывестиСтроку(вТабличныйДокумент, Неопределено, мСтруктураДополнительныхПоказателей, мМассивПоказателейПериодов, мОтборПоДоговору, мТаблицаДоговораПоПериодам, мТаблицаПериодов, мОбластьЯчейкаРаздел0, мОбластьРеквизит0, мОбластьЯчейкаЗначение0, мОбластьЯчейкаЗначениеКвартала0, мОбластьРазделитель0, мВыводитьПодпериоды, 0);
		Для Каждого мДокумент из мСтрокиДокументов Цикл
			мОтборПоДокументу = Новый Структура("Документ", мДокумент.Документ);
			//мСтрокиИдентификаторов = мТаблицаДетали.НайтиСтроки(мОтборПоДокументу);
			ВывестиСтроку(вТабличныйДокумент, Неопределено, мСтруктураДополнительныхПоказателей, мМассивПоказателейПериодов, мОтборПоДокументу, мТаблицаДокументыПоПериодам, мТаблицаПериодов, мОбластьЯчейкаРаздел1, мОбластьРеквизит1, мОбластьЯчейкаЗначение1, мОбластьЯчейкаЗначениеКвартала1, мОбластьРазделитель1, мВыводитьПодпериоды, 1);
			Для Каждого мВидПодряда Из мМассивВидовПодряда Цикл
				мОтборПоВидуПодряда = Новый Структура("ВидПодряда, Документ", мВидПодряда, мДокумент.Документ);
				мСтрокиИдентификаторовПоВидуПодряда = мТаблицаДокументыВидыПодрядаСИдентификаторами.НайтиСтроки(мОтборПоВидуПодряда);
				Если мСтрокиИдентификаторовПоВидуПодряда.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				ВывестиСтроку(вТабличныйДокумент, Неопределено, мСтруктураДополнительныхПоказателей, мМассивПоказателейПериодов, мОтборПоВидуПодряда, мТаблицаДокументыВидыПодрядаПоПериодам, мТаблицаПериодов, мОбластьЯчейкаРаздел2, мОбластьРеквизит2, мОбластьЯчейкаЗначение2, мОбластьЯчейкаЗначениеКвартала2, мОбластьРазделитель2, мВыводитьПодпериоды, 1);
				мНомерПП = 1;
				Для Каждого мИдентификатор Из мСтрокиИдентификаторовПоВидуПодряда Цикл
					мОтборПоИдентификатору = Новый Структура("ИдентификаторСтрокиЛота", мИдентификатор.ИдентификаторСтрокиЛота);
					мСтрокиДеталей = мТаблицаДетали.НайтиСтроки(мОтборПоИдентификатору);
					Если пВыводитьСтрокиДокументаЛота Тогда
						ВывестиСтроку(вТабличныйДокумент, Неопределено, мСтруктураДополнительныхПоказателей, мМассивПоказателейПериодов, мОтборПоИдентификатору, мТаблицаДеталиПоПериодам, мТаблицаПериодов, мОбластьЯчейкаРаздел2, мОбластьРеквизит2, мОбластьЯчейкаЗначение2, мОбластьЯчейкаЗначениеКвартала2, мОбластьРазделитель2, мВыводитьПодпериоды, 2, мСтруктураЗамен);
					КонецЕсли;
					Для Каждого мСтрока Из мСтрокиДеталей Цикл
						мОтборПоИдентификаторуДляТС = Новый Структура("ИдентификаторСтрокиЛота", мСтрока.ИдентификаторСтрокиЛота);
						мСтрокиТС = мТаблицаДеталиТС.НайтиСтроки(мОтборПоИдентификаторуДляТС);
						
						Для Каждого мСтрокаТС Из мСтрокиТС Цикл
							мОтборПоТС = Новый Структура("ТС, Колонна, НомерСтрокиПП", мСтрокаТС.ТС, мСтрокаТС.Колонна, мСтрокаТС.НомерСтрокиПП);
							ВывестиСтроку(вТабличныйДокумент, мНомерПП, мСтруктураДополнительныхПоказателей, мМассивПоказателейПериодов, мОтборПоТС, мРезультатПолный, мТаблицаПериодов, мОбластьЯчейкаРаздел3, мОбластьРеквизит3, мОбластьЯчейкаЗначение3, мОбластьЯчейкаЗначениеКвартала3, мОбластьРазделитель3, мВыводитьПодпериоды, 3, мСтруктураЗамен);
							мНомерПП = мНомерПП + 1;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	вТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
	вТабличныйДокумент.ФиксацияСверху = 2;
	вТабличныйДокумент.ФиксацияСлева = 10;
	Возврат вТабличныйДокумент;
КонецФункции

&НаСервереБезКонтекста
Функция ПреобразоватьВЗаголовок(пСтрока, пСтрокаЗаменыМесяц = Неопределено)
	вСтрока = Лев(пСтрока, 1);
	Для Итр = 2 По СтрДлина(пСтрока) Цикл
		пСимвол = Сред(пСтрока, Итр, 1);
		Если НРег(пСимвол) = пСимвол Тогда
			вСтрока = вСтрока + пСимвол;
		Иначе
			вСтрока = вСтрока + " " + НРег(пСимвол);
		КонецЕсли;
	КонецЦикла;
	Возврат СтрЗаменить(вСтрока, "месяц", ?(пСтрокаЗаменыМесяц = Неопределено, "месяц", пСтрокаЗаменыМесяц));
КонецФункции

&НаСервереБезКонтекста
Процедура ВывестиСтроку(пТабличныйДокумент, пНомерПП, Знач пСтруктураИзмерений, пМассивПоказателейПериодов, пОтбор, пТаблица, пТаблицаПериодов, пОбластьРаздел, пОбластьРеквизит, пОбластьЗначение, пОбластьЗначениеКвартала, пОбластьРазделитель, пВыводитьПодпериоды, пУровень, пСтруктураЗамен = Неопределено)
	//выводим сам показатель
	мОтбор = пОтбор;
	Для Каждого мПара Из мОтбор Цикл
		//Если Не ЗначениеЗаполнено(мПара.Значение) Тогда
		//	Прервать;
		//КонецЕсли;
		Если пСтруктураЗамен <> Неопределено И пСтруктураЗамен.Свойство(мПара.Ключ) Тогда
			мЗначениеЗамены = пСтруктураЗамен[мПара.Ключ];
			мСтроки = пТаблица.НайтиСтроки(пОтбор);
			пОбластьРаздел.Параметры.Наименование = мСтроки[0][мЗначениеЗамены];
		Иначе
			пОбластьРаздел.Параметры.Наименование = мПара.Значение;
		КонецЕсли;
		Прервать;	//защита от множественных отборов? о_О
	КонецЦикла;
	Если пНомерПП <> Неопределено Тогда
		пОбластьРаздел.Параметры.НомерПП = пНомерПП;
	КонецЕсли;
	пТабличныйДокумент.Вывести(пОбластьРаздел, пУровень);
	мОтборПоПериоду = пОтбор;
	
	мСтрокиЗаГод = пТаблица.НайтиСтроки(мОтборПоПериоду);
	//префикс "Знач" в параметрах  не помогает - значения запоминаются в структуре...
	//	сделаем финт ушами чтобы заставить систему скопировать структуру
	мПредварительнаяСтруктураПоказателейИзмерений = Новый ФиксированнаяСтруктура(пСтруктураИзмерений.СтруктураПолей);
	мСтруктураПоказателейИзмерений = Новый Структура(мПредварительнаяСтруктураПоказателейИзмерений);
	
	//показатели измерений выводятся ДО месяцев и подпериодов
	ЗаполнитьЗначенияСвойств(мСтруктураПоказателейИзмерений, ?(мСтрокиЗаГод.Количество() > 0, мСтрокиЗаГод[0], Новый Структура()));
	мВывестиРазделительВКонец = Ложь;
	Для Каждого мПараКлючЗначениеПоказателяИзмерений Из мСтруктураПоказателейИзмерений Цикл
		мОбласть = пСтруктураИзмерений.СоответствиеОбластям.Получить(мПараКлючЗначениеПоказателяИзмерений.Ключ);
		мОбластьПоказателя = пОбластьРеквизит;
		Если мОбласть = "п" Тогда
			мОбластьПоказателя = пОбластьЗначение;
		ИначеЕсли мОбласть = "0" Тогда
			мОбластьПоказателя = пОбластьРазделитель;
			мВывестиРазделительВКонец = Истина;
		КонецЕсли;
		мОбластьПоказателя.Параметры.Значение = мПараКлючЗначениеПоказателяИзмерений.Значение;
		пТабличныйДокумент.Присоединить(мОбластьПоказателя);
	КонецЦикла;
	Если мВывестиРазделительВКонец Тогда
		пТабличныйДокумент.Присоединить(пОбластьРазделитель, 0);
	КонецЕсли;
	
	мСтруктураИтоговСтроки = Новый Структура;
	мСтруктураИтоговКвартал = Новый Структура;
	Для Каждого мПериод Из пТаблицаПериодов Цикл
		//выводим по периодам значения из таблицы:
		мОтборПоПериоду.Вставить("МесяцЛота", мПериод.МесяцЛота);
		мСтрокиЗаМесяц = пТаблица.НайтиСтроки(мОтборПоПериоду);
		Если мСтрокиЗаМесяц.Количество() > 0 Тогда
			Для Каждого мПоказатель Из пМассивПоказателейПериодов Цикл
				пОбластьЗначение.Параметры.Значение = мСтрокиЗаМесяц[0][мПоказатель];
				пТабличныйДокумент.Присоединить(пОбластьЗначение);
				Если Найти("КоличествоТсСменность", мПоказатель) > 0 Тогда
					мСтруктураИтоговСтроки.Вставить(мПоказатель, Макс(?(мСтруктураИтоговСтроки.Свойство(мПоказатель), мСтруктураИтоговСтроки[мПоказатель], 0), ?(мСтрокиЗаМесяц[0][мПоказатель] = Null, 0, мСтрокиЗаМесяц[0][мПоказатель])));
					мСтруктураИтоговКвартал.Вставить(мПоказатель, Макс(?(мСтруктураИтоговКвартал.Свойство(мПоказатель), мСтруктураИтоговКвартал[мПоказатель], 0), ?(мСтрокиЗаМесяц[0][мПоказатель] = Null, 0, мСтрокиЗаМесяц[0][мПоказатель])));
				Иначе
					мСтруктураИтоговСтроки.Вставить(мПоказатель, ?(мСтруктураИтоговСтроки.Свойство(мПоказатель), мСтруктураИтоговСтроки[мПоказатель], 0) + ?(мСтрокиЗаМесяц[0][мПоказатель] = Null, 0, мСтрокиЗаМесяц[0][мПоказатель]));
					мСтруктураИтоговКвартал.Вставить(мПоказатель, ?(мСтруктураИтоговКвартал.Свойство(мПоказатель), мСтруктураИтоговКвартал[мПоказатель], 0) + ?(мСтрокиЗаМесяц[0][мПоказатель] = Null, 0, мСтрокиЗаМесяц[0][мПоказатель]));
				КонецЕсли;
			КонецЦикла;
		Иначе
			Для Каждого мПоказатель Из пМассивПоказателейПериодов Цикл
				пОбластьЗначение.Параметры.Значение = "";
				пТабличныйДокумент.Присоединить(пОбластьЗначение);
			КонецЦикла;
		КонецЕсли;
		
		Если КонецМесяца(мПериод.МесяцЛота) = КонецКвартала(мПериод.МесяцЛота) Тогда
			Для Каждого мПоказатель Из пМассивПоказателейПериодов Цикл
				пОбластьЗначениеКвартала.Параметры.Значение = ?(мСтруктураИтоговКвартал.Свойство(мПоказатель), мСтруктураИтоговКвартал[мПоказатель], "");
				пТабличныйДокумент.Присоединить(пОбластьЗначениеКвартала);
				Если мСтруктураИтоговКвартал.Свойство(мПоказатель) Тогда
					мСтруктураИтоговКвартал[мПоказатель] = 0;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	////вывод итогов по строке
	Для Каждого мПоказатель Из пМассивПоказателейПериодов Цикл
		пОбластьЗначениеКвартала.Параметры.Значение = ?(мСтруктураИтоговСтроки.Свойство(мПоказатель), мСтруктураИтоговСтроки[мПоказатель], "");
		пТабличныйДокумент.Присоединить(пОбластьЗначениеКвартала);
	КонецЦикла;
	
	пОбластьЗначениеКвартала.Параметры.Значение = ?(мСтруктураИтоговСтроки.Свойство("СуммаИтого") И мСтруктураИтоговСтроки.Свойство("СуммаСубподряд"), мСтруктураИтоговСтроки["СуммаИтого"] - мСтруктураИтоговСтроки["СуммаСубподряд"], "");
	пТабличныйДокумент.Присоединить(пОбластьЗначениеКвартала);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	мОбъект = РеквизитФормыВЗначение("Объект");
	фМакет = мОбъект.ПолучитьМакет("Макет");
КонецПроцедуры

