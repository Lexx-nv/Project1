
&НаКлиенте
Процедура СформироватьРабота(Команда)
	мРезультат = ПолучитьДанныеПоЖурналу(фПериодФормирования, фЗначениеФильтрПроекта);
	
	Для Каждого тСтрокаИтогов Из ДеревоРаботыПользователей.ПолучитьЭлементы() Цикл
		тСтрокаИтогов.Дни = Цел(тСтрокаИтогов.Продолжительность / 86400);
		тСтрокаИтогов.Часы = Цел((тСтрокаИтогов.Продолжительность - (тСтрокаИтогов.Дни * 86400)) / 3600);
		тСтрокаИтогов.Минуты = Цел(Цел(тСтрокаИтогов.Продолжительность  - ((тСтрокаИтогов.Дни) * 86400) - ((тСтрокаИтогов.Часы) * 3600)) / 60);
	КонецЦикла;
	//ТаблицаРаботыПользователей.Очистить();
	//Для Каждого мЭлемент Из мМассивСтруктурТаблицыЖурнала Цикл
	//	мНоваяСтрокаТаблицы = ТаблицаРаботыПользователей.Добавить();
	//	ЗаполнитьЗначенияСвойств(мНоваяСтрокаТаблицы, мЭлемент);
	//КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивСтруктурФильтров(пТаблицаФильтров)
	вМассив = Новый Массив;
	Для Каждого мСтрока Из пТаблицаФильтров Цикл
		мСтуктураСтроки = Новый Структура("Пользователь, Проект");
		ЗаполнитьЗначенияСвойств(мСтуктураСтроки, мСтрока);
		вМассив.Добавить(мСтуктураСтроки);
	КонецЦикла;
	
	Возврат вМассив;
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьДанныеНастроекНаСервере(пДанные)
	ХранилищеОбщихНастроек.Сохранить("СтруктураСписковСтатистикиРаботыПользователей", "СпискиПользователейДляФильтров", пДанные, , "ОбщаяНастройка");
КонецПроцедуры
	
&НаСервере
Функция ПолучитьДанныеПоЖурналу(пПериод, пФильтрПроект = Неопределено)
	УстановитьПривилегированныйРежим(Истина);
	мСтрокаКолонок = "Дата, Пользователь, Событие";
	//мТаблицаЖурнала = ПолучитьСтруктуруЖурнала(мСтрокаКолонок);
	мТаблицаЖурнала = Новый ТаблицаЗначений;
	мКвалифиторДатаВремя = Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя);
	мКвалифиторСтрока40 = Новый КвалификаторыСтроки(40, ДопустимаяДлина.Переменная);
	мКвалифиторЧисло = Новый КвалификаторыЧисла(10, 1);
	мОписаниеТипаДата = Новый ОписаниеТипов("Дата", , , мКвалифиторДатаВремя);
	мОписаниеТипаСтрока40 = Новый ОписаниеТипов("Строка", , мКвалифиторСтрока40);
	мОписаниеТипаЧисло = Новый ОписаниеТипов("Число", мКвалифиторЧисло);
	мТаблицаЖурнала.Колонки.Добавить("Дата", мОписаниеТипаДата);
	мТаблицаЖурнала.Колонки.Добавить("Пользователь", Новый ОписаниеТипов("УникальныйИдентификатор"));
	мТаблицаЖурнала.Колонки.Добавить("Событие", мОписаниеТипаСтрока40);
	
	мОтбор = ПолучитьОтбор(пПериод);
	ВыгрузитьЖурналРегистрации(мТаблицаЖурнала, мОтбор, мСтрокаКолонок, , );
	мКолонкаДата1 = мТаблицаЖурнала.Колонки.Добавить("Дата1", мОписаниеТипаДата);
	
	мТаблицаЖурнала.Сортировать("Пользователь, Дата ВОЗР");
	мТаблицаЖурнала.Колонки.Добавить("ПользовательСсылка", Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	мТаблицаЖурнала.Колонки.Добавить("Количество", мОписаниеТипаЧисло);
	мТаблицаЖурнала.Колонки.Добавить("Продолжительность", мОписаниеТипаЧисло);
	мТаблицаЖурнала.Колонки.Добавить("ДатаОкончания", мОписаниеТипаДата);
	мТаблицаЖурнала.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	
	мСтрокаНачалаСеанса = Неопределено;
	мЭтоСтрокаЗавершенияСеанса = Ложь;
	мПользователь = Неопределено;
	мКрайняяСтрокаНачалаСеанса = Неопределено;
	Для Каждого мСтрокаЖурнала Из мТаблицаЖурнала Цикл
		мСтрокаЖурнала.Дата1 = мСтрокаЖурнала.Дата;
		Если мПользователь = Неопределено Или мПользователь <> мСтрокаЖурнала.Пользователь Тогда
			мПользователь = мСтрокаЖурнала.Пользователь;
			Если мСтрокаНачалаСеанса <> Неопределено И мКрайняяСтрокаНачалаСеанса.ДатаОкончания = Дата("00010101") Тогда
				мСтрокаНачалаСеанса.ДатаОкончания = Мин(НачалоДня(мСтрокаНачалаСеанса.Дата) + (18 * 3600), мСтрокаЖурнала.Дата);
				мСтрокаНачалаСеанса.Количество = 1;
			КонецЕсли;
			мСтрокаНачалаСеанса = Неопределено;
		КонецЕсли;
		мПользовательСсылка2 = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(мСтрокаЖурнала.Пользователь);
		мПользовательСсылка = Справочники.Пользователи.НайтиПоКоду(мПользовательСсылка2.Имя);
		мСтрокаЖурнала.ПользовательСсылка = мПользовательСсылка;
		мСтрокаЖурнала.ФизЛицо = мПользовательСсылка.ФизЛицо;
		
		Если мСтрокаЖурнала.Событие = "_$Session$_.Finish" И мСтрокаНачалаСеанса <> Неопределено Тогда
			мСтрокаНачалаСеанса.Количество = 1;
			мСтрокаНачалаСеанса.ДатаОкончания = мСтрокаЖурнала.Дата;
			//мСтрокаНачалаСеанса.Продолжительность = Цел((мСтрокаНачалаСеанса.ДатаОкончания - мСтрокаНачалаСеанса.Дата) / 60);
			мСтрокаНачалаСеанса = Неопределено;
		ИначеЕсли мСтрокаНачалаСеанса <> Неопределено Тогда
			//двойное начало? ...Inception...
			мСтрокаНачалаСеанса.ДатаОкончания = Мин(НачалоДня(мСтрокаНачалаСеанса.Дата) + (18 * 3600), мСтрокаЖурнала.Дата);
			//мСтрокаНачалаСеанса.Продолжительность = Цел((мСтрокаНачалаСеанса.ДатаОкончания - мСтрокаНачалаСеанса.Дата) / 60);
			мСтрокаНачалаСеанса.Количество = 1;
			мСтрокаНачалаСеанса = мСтрокаЖурнала;
		ИначеЕсли мСтрокаЖурнала.Событие = "_$Session$_.Start" Тогда
			мСтрокаНачалаСеанса = мСтрокаЖурнала;
		КонецЕсли;
		мКрайняяСтрокаНачалаСеанса = мСтрокаЖурнала;
	КонецЦикла;
	Если мКрайняяСтрокаНачалаСеанса <> Неопределено Тогда
		мКрайняяСтрокаНачалаСеанса.ДатаОкончания = НачалоДня(мКрайняяСтрокаНачалаСеанса.Дата) + (18 * 3600);
		мКрайняяСтрокаНачалаСеанса.Количество = 1;
	КонецЕсли;
	мТаблицаЖурнала.Колонки.Удалить("Дата");
	мТаблицаЖурнала.Колонки.Удалить("Пользователь");
	мТаблицаЖурнала.Колонки.Удалить("Событие");
	мКолонкаДата1.Имя = "Дата";
	//мКолонкаПользователь1.Имя = "Пользователь";
	//мКолонкаСобытие1.Имя = "Событие";
	
	мМенеджер = Новый МенеджерВременныхТаблиц;
	мЗапрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВнешняяТаблица.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ПредвыборкаВнешней
	|ИЗ
	|	&Таблица КАК ВнешняяТаблица
	|;
	|ВЫБРАТЬ
	|	ВнешняяТаблица.Дата КАК Дата,
	|	ВнешняяТаблица.ДатаОкончания КАК ДатаОкончания,
	|	ВнешняяТаблица.ПользовательСсылка КАК ПользовательСсылка,
	|	ВнешняяТаблица.ФизЛицо КАК ФизЛицо,
	|	ВнешняяТаблица.Количество КАК Количество
	|ПОМЕСТИТЬ ПредВыборкаВнешняяТаблица
	|ИЗ
	|	&Таблица КАК ВнешняяТаблица
	|;
	|ВЫБРАТЬ
	|	ПредВыборкаВнешняяТаблица.Дата,
	|	ПредВыборкаВнешняяТаблица.ДатаОкончания,
	|	ПредВыборкаВнешняяТаблица.ПользовательСсылка,
	|	ВЫРАЗИТЬ(ПредВыборкаВнешняяТаблица.ФизЛицо КАК Справочник.ФизическиеЛица).Наименование КАК ПользовательСсылкаНаименование,
	|	ПредВыборкаВнешняяТаблица.ФизЛицо,
	|	ПредВыборкаВнешняяТаблица.Количество
	|поместить ВнешняяТаблица
	|ИЗ ПредВыборкаВнешняяТаблица КАК ПредВыборкаВнешняяТаблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1,1,1) КАК Дата,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОкончания,
	|	Пользователи.Ссылка,
	|	Пользователи.Наименование,
	|	Пользователи.ФизЛицо КАК ФизЛицо,
	|	0
	|ИЗ Справочник.Пользователи КАК Пользователи
	|	ГДЕ (Не Пользователи.ПометкаУдаления)
	|	И (Не Пользователи.ФизЛицо В(Выбрать ПредвыборкаВнешней.ФизЛицо ИЗ ПредвыборкаВнешней КАК ПредвыборкаВнешней))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ТаблицаЖурнала.Дата, ДЕНЬ) КАК Дата,
	|	МИНИМУМ(ТаблицаЖурнала.Дата) КАК ДатаНачала,
	|	МАКСИМУМ(ТаблицаЖурнала.ДатаОкончания) КАК ДатаОкончания,
	|	ТаблицаЖурнала.ФизЛицо КАК ПользовательСсылка,
	|	ТаблицаЖурнала.ПользовательСсылкаНаименование КАК ПользовательСсылкаНаименование,
	|	СУММА(РАЗНОСТЬДАТ(ТаблицаЖурнала.Дата, ТаблицаЖурнала.ДатаОкончания, СЕКУНДА)) КАК Продолжительность,
	|	СУММА(ТаблицаЖурнала.Количество) КАК Количество
	|ПОМЕСТИТЬ ПредВыборка
	|ИЗ
	|	ВнешняяТаблица КАК ТаблицаЖурнала
	|где ТаблицаЖурнала.Количество >= 1 И ТаблицаЖурнала.ФизЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|сгруппировать ПО ТаблицаЖурнала.ФизЛицо, ПользовательСсылкаНаименование, НАЧАЛОПЕРИОДА(ТаблицаЖурнала.Дата, ДЕНЬ)
	|;
	|ВЫБРАТЬ
	|ПредВыборка.Дата,
	|ПредВыборка.ДатаНачала,
	|ПредВыборка.ДатаОкончания,
	|ПредВыборка.ПользовательСсылка,
	|ПредВыборка.ПользовательСсылкаНаименование КАК ПользовательСсылкаНаименование,
	|ПредВыборка.Продолжительность КАК Продолжительность,
	|ПредВыборка.Продолжительность / 86400 КАК ДниПредв,
	|ПредВыборка.Продолжительность / 3600 КАК ЧасыПредв,
	|ПредВыборка.Продолжительность / 60 КАК МинутыПредв,
	|ВЫРАЗИТЬ(ПредВыборка.Продолжительность / 86400 КАК ЧИСЛО(15,0)) КАК ДниПредвОкр,
	|ВЫРАЗИТЬ(ПредВыборка.Продолжительность / 3600 КАК ЧИСЛО(15,0)) КАК ЧасыПредвОкр,
	|ВЫРАЗИТЬ(ПредВыборка.Продолжительность / 60 КАК ЧИСЛО(15,0)) КАК МинутыПредвОкр,
	|ПредВыборка.Количество КАК Количество
	|ПОМЕСТИТЬ ПостПостВыборка
	|ИЗ ПредВыборка КАК ПредВыборка
	|ГДЕ ПредВыборка.Продолжительность > 300
	|;
	|ВЫБРАТЬ
	|ПостПостВыборка.Дата,
	|ПостПостВыборка.ДатаНачала,
	|ПостПостВыборка.ДатаОкончания,
	|ПостПостВыборка.ПользовательСсылка,
	|ПостПостВыборка.ПользовательСсылкаНаименование,
	|ПостПостВыборка.Продолжительность,
	|ПостПостВыборка.ДниПредв,
	|ПостПостВыборка.ЧасыПредв,
	|ПостПостВыборка.МинутыПредв,
	|ПостПостВыборка.ДниПредвОкр,
	|ПостПостВыборка.ЧасыПредвОкр,
	|ПостПостВыборка.МинутыПредвОкр,
	|ПостПостВыборка.Количество
	|ПОМЕСТИТЬ ПостВыборка
	|ИЗ ПостПостВыборка как ПостПостВыборка
	|
	|объединить все
	|выбрать
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	Пользователи.ФизЛицо,
	|	Пользователи.ФизЛицо.Наименование,
	|	0,
	|   0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ Справочник.Пользователи КАК Пользователи
	|ГДЕ Пользователи.ФизЛицо <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) И НЕ Пользователи.ФизЛицо В(выбрать ПостПостВыборка.ПользовательСсылка ИЗ ПостПостВыборка КАК ПостПостВыборка) И НЕ Пользователи.ПометкаУдаления
	|;
	|ВЫБРАТЬ
	|ПостВыборка.Дата КАК Дата,
	|ПостВыборка.ДатаНачала КАК ДатаНачала,
	|ПостВыборка.ДатаОкончания КАК ДатаОкончания,
	|ПостВыборка.ПользовательСсылка КАК ПользовательСсылка,
	|ПостВыборка.ПользовательСсылкаНаименование КАК ПользовательСсылкаНаименование,
	|КадровыеДанные.Должность КАК Должность,
	|ПостВыборка.Продолжительность КАК Продолжительность,
	|ВЫБОР КОГДА ПостВыборка.ДниПредвОкр > ПостВыборка.ДниПредв ТОГДА ВЫРАЗИТЬ(ПостВыборка.ДниПредв - 0.5 КАК ЧИСЛО(15,0)) ИНАЧЕ ПостВыборка.ДниПредвОкр КОНЕЦ КАК Дни,
	|ВЫБОР КОГДА ПостВыборка.ЧасыПредвОкр > ПостВыборка.ЧасыПредв ТОГДА ВЫРАЗИТЬ(ПостВыборка.ЧасыПредв - 0.5 КАК ЧИСЛО(15,0)) ИНАЧЕ ПостВыборка.ЧасыПредвОкр КОНЕЦ - (ВЫБОР КОГДА ПостВыборка.ДниПредвОкр > ПостВыборка.ДниПредв ТОГДА ВЫРАЗИТЬ(ПостВыборка.ДниПредв - 0.5 КАК ЧИСЛО(15,0)) ИНАЧЕ ПостВыборка.ДниПредвОкр КОНЕЦ) * 24 КАК Часы,
	|МинутыПредвОкр - ((ВЫБОР КОГДА ПостВыборка.ДниПредвОкр > ПостВыборка.ДниПредв ТОГДА ВЫРАЗИТЬ(ПостВыборка.ДниПредв - 0.5 КАК ЧИСЛО(15,0)) ИНАЧЕ ПостВыборка.ДниПредвОкр КОНЕЦ) * 1440) - ((ВЫБОР КОГДА ПостВыборка.ЧасыПредвОкр > ПостВыборка.ЧасыПредв ТОГДА ВЫРАЗИТЬ(ПостВыборка.ЧасыПредв - 0.5 КАК ЧИСЛО(15,0)) ИНАЧЕ ПостВыборка.ЧасыПредвОкр КОНЕЦ - (ВЫБОР КОГДА ПостВыборка.ДниПредвОкр > ПостВыборка.ДниПредв ТОГДА ВЫРАЗИТЬ(ПостВыборка.ДниПредв - 0.5 КАК ЧИСЛО(15,0)) ИНАЧЕ ПостВыборка.ДниПредвОкр КОНЕЦ) * 24) * 60) КАК Минуты,
	|ПостВыборка.Количество КАК Количество
	|
	|ИЗ ПостВыборка КАК ПостВыборка
	|внутреннее СОЕДИНЕНИЕ РегистрСведений.уатСведенияОСотрудниках.СрезПоследних() КАК КадровыеДанные
	|		ПО (НЕ КадровыеДанные.Сотрудник.ПометкаУдаления) И КадровыеДанные.Сотрудник.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1) И КадровыеДанные.Сотрудник.ФизЛицо = ПостВыборка.ПользовательСсылка И ПостВыборка.ПользовательСсылка <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|ГДЕ ЕСТЬNULL(КадровыеДанные.Должность, ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка)
	|	//условиепользователи И ПостВыборка.ПользовательСсылка в (&Пользователи)
	|упорядочить по ПостВыборка.Продолжительность > 0 УБЫВ, ПользовательСсылкаНаименование ВОЗР, Дата ВОЗР
	|ИТОГИ СУММА(Продолжительность), СУММА(Количество), СУММА(Дни), СУММА(Часы), СУММА(Минуты), МАКСИМУМ(Должность) ПО ПользовательСсылка");
	мЗапрос.УстановитьПараметр("Таблица", мТаблицаЖурнала);
	Если пФильтрПроект <> Неопределено И пФильтрПроект <> "" Тогда
		мСтруктураОтбора = Новый Структура("Проект", пФильтрПроект);
		мМассивПользователей = фТаблицаФильтров.Выгрузить(мСтруктураОтбора).ВыгрузитьКолонку("Пользователь");
		
		мЗапрос.Текст = СтрЗаменить(мЗапрос.Текст, "//условиепользователи", "");
		мЗапрос.УстановитьПараметр("Пользователи", мМассивПользователей);
	КонецЕсли;
	мРезультат = мЗапрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗначениеВРеквизитФормы(мРезультат, "ДеревоРаботыПользователей");
	УстановитьПривилегированныйРежим(Ложь);
	Возврат Истина;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОтбор(пПериод)
	мМассивСтрокИменСобытий = Новый Массив;
	мМассивСтрокИменСобытий.Добавить("_$Session$_.Start");
	мМассивСтрокИменСобытий.Добавить("_$Session$_.Finish");
	вСтруктураОтбора = Новый Структура("ДатаНачала, ДатаОкончания, Событие", пПериод.ДатаНачала, пПериод.ДатаОкончания, мМассивСтрокИменСобытий);
	Возврат вСтруктураОтбора;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруЖурнала(пСтрокаКолонок)
	вТаблица = Новый ТаблицаЗначений;
	мСтрокаКолонок = СтрЗаменить(пСтрокаКолонок, ", ", Символы.ПС);
	Для Итр = 1 По СтрЧислоСтрок(мСтрокаКолонок) Цикл
		мСтрока = СтрПолучитьСтроку(мСтрокаКолонок, Итр);
		вТаблица.Колонки.Добавить(СокрЛП(мСтрока));
	КонецЦикла;
	
	Возврат вТаблица;
КонецФункции

&НаСервереБезКонтекста
Функция ПреобразоватьТаблицуВМассивСтруктур(пТаблица, пИменаКолонок = Неопределено)
	вМассив = Новый Массив;
	мСтрокаИменКолонок = "";
	Если пИменаКолонок = Неопределено Тогда
		Для Каждого мКолонка Из пТаблица.Колонки Цикл
			мСтрокаИменКолонок = мСтрокаИменКолонок + "," + мКолонка.Имя;
		КонецЦикла;
		мСтрокаИменКолонок = Сред(мСтрокаИменКолонок, 2);
	Иначе
		мСтрокаИменКолонок = СокрЛП(пИменаКолонок);
	КонецЕсли;
	
	Для Каждого мСтрока Из пТаблица Цикл
		мСтруктураСтроки = Новый Структура(мСтрокаИменКолонок);
		ЗаполнитьЗначенияСвойств(мСтруктураСтроки, мСтрока);
		вМассив.Добавить(мСтруктураСтроки);
	КонецЦикла;
	
	Возврат вМассив;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТаблицуРаботыТехники(пДатаФормирования)
	мЗапрос = Новый Запрос("ВЫБРАТЬ
	|	уатМестонахождениеТС.ТС КАК ТС,
	|	уатМестонахождениеТС.ТС.ТипТС КАК ТипТС,
	|	уатМестонахождениеТС.Подразделение КАК Подразделение,
	|	уатМестонахождениеТС.Состояние КАК Состояние,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТипыТСВЭксплуатацииПредварительный
	|ИЗ
	|	РегистрСведений.уатМестонахождениеТС.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаРазнарядки, ДЕНЬ), ) КАК уатМестонахождениеТС
	|ГДЕ
	|	уатМестонахождениеТС.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	И уатМестонахождениеТС.ТС <> ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка)
	|	И НЕ уатМестонахождениеТС.ТС.ТипТС.НеВыводитьВТабельТС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТипыТСВЭксплуатацииПредварительный.ТипТС КАК ТипТС,
	|	ТипыТСВЭксплуатацииПредварительный.Подразделение КАК Подразделение,
	|	СУММА(ТипыТСВЭксплуатацииПредварительный.Количество) КАК Количество
	|ПОМЕСТИТЬ ТипыТСВЭксплуатации
	|ИЗ
	|	ТипыТСВЭксплуатацииПредварительный КАК ТипыТСВЭксплуатацииПредварительный
	|ГДЕ
	|	ТипыТСВЭксплуатацииПредварительный.Состояние <> ЗНАЧЕНИЕ(Справочник.уатСостояниеТС.Привлеченный)
	|	И НЕ ТипыТСВЭксплуатацииПредварительный.Состояние.ЗапретитьВыпискуПЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТипыТСВЭксплуатацииПредварительный.Подразделение,
	|	ТипыТСВЭксплуатацииПредварительный.ТипТС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТипыТСВЭксплуатацииПредварительный.ТС КАК ТС
	|ПОМЕСТИТЬ ТипыТССубподряд
	|ИЗ
	|	ТипыТСВЭксплуатацииПредварительный КАК ТипыТСВЭксплуатацииПредварительный
	|ГДЕ
	|	ТипыТСВЭксплуатацииПредварительный.Состояние = ЗНАЧЕНИЕ(Справочник.уатСостояниеТС.Привлеченный)
	|	И НЕ ТипыТСВЭксплуатацииПредварительный.Состояние.ЗапретитьВыпискуПЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	1 КАК Количество,
	|	ВыпискаПЛ.ТранспортноеСредство КАК ТС,
	|	ВыпискаПЛ.ТранспортноеСредство.ТипТС КАК ТипТС,
	|	ТипыТСВЭксплуатацииПредварительный.Подразделение КАК Колонна
	|ПОМЕСТИТЬ ВыпискаПЛПоИдентификаторамПредварительная
	|ИЗ
	|	Документ.уатПутевойЛист КАК ВыпискаПЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТипыТСВЭксплуатацииПредварительный КАК ТипыТСВЭксплуатацииПредварительный
	|		ПО ВыпискаПЛ.ТранспортноеСредство = ТипыТСВЭксплуатацииПредварительный.ТС
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(ВыпискаПЛ.ДатаВыезда, ДЕНЬ) МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаРазнарядки, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаРазнарядки, ДЕНЬ)
	|	И НЕ ВыпискаПЛ.ПометкаУдаления
	|	И ВыпискаПЛ.Ссылка <> ЗНАЧЕНИЕ(Документ.уатПутевойЛист.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВыпискаПЛПоИдентификаторамПредварительная.Количество) КАК Количество,
	|	ВыпискаПЛПоИдентификаторамПредварительная.Колонна КАК Колонна,
	|	ВыпискаПЛПоИдентификаторамПредварительная.ТипТС КАК ТипТС
	|ПОМЕСТИТЬ ВыпискаПЛПоИдентификаторам
	|ИЗ
	|	ВыпискаПЛПоИдентификаторамПредварительная КАК ВыпискаПЛПоИдентификаторамПредварительная
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыпискаПЛПоИдентификаторамПредварительная.Колонна,
	|	ВыпискаПЛПоИдентификаторамПредварительная.ТипТС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВыпискаПЛПоИдентификаторамПредварительная.Количество) КАК Количество,
	|	ВыпискаПЛПоИдентификаторамПредварительная.Колонна КАК Колонна,
	|	ВыпискаПЛПоИдентификаторамПредварительная.ТипТС КАК ТипТС
	|ПОМЕСТИТЬ ЛинияСубподряд
	|ИЗ
	|	ВыпискаПЛПоИдентификаторамПредварительная КАК ВыпискаПЛПоИдентификаторамПредварительная
	|ГДЕ
	|	ВыпискаПЛПоИдентификаторамПредварительная.ТС В
	|			(ВЫБРАТЬ
	|				ТипыТССубподряд.ТС
	|			ИЗ
	|				ТипыТССубподряд)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыпискаПЛПоИдентификаторамПредварительная.Колонна,
	|	ВыпискаПЛПоИдентификаторамПредварительная.ТипТС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	1 КАК Количество,
	|	Разнарядка.ТС КАК ТС,
	|	Разнарядка.ТипТС КАК ТипТС,
	|	Разнарядка.Колонна КАК Колонна
	|ПОМЕСТИТЬ РазнарядкаРазличныеТС
	|ИЗ
	|	РегистрСведений.Разнарядка КАК Разнарядка
	|ГДЕ
	|	Разнарядка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаРазнарядки, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаРазнарядки, ДЕНЬ)
	|	И ЕСТЬNULL(Разнарядка.ТС, ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СУММА(РазнарядкаРазличныеТС.Количество) КАК Количество,
	|	РазнарядкаРазличныеТС.ТипТС КАК ТипТС,
	|	РазнарядкаРазличныеТС.Колонна КАК Колонна
	|ПОМЕСТИТЬ РазнарядкаРазличныеТСПоТипам
	|ИЗ
	|	РазнарядкаРазличныеТС КАК РазнарядкаРазличныеТС
	|
	|СГРУППИРОВАТЬ ПО
	|	РазнарядкаРазличныеТС.Колонна,
	|	РазнарядкаРазличныеТС.ТипТС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК Количество,
	|	Разнарядка.ТС КАК ТС,
	|	Разнарядка.ТипТС КАК ТипТС,
	|	Разнарядка.Колонна КАК Колонна,
	|	Разнарядка.СтатусыОтказа КАК СтатусыОтказа,
	|	Разнарядка.ИдентификаторСтрокиЗаявки КАК ИдентификаторСтрокиЗаявки
	|ПОМЕСТИТЬ РазнарядкаНаДату
	|ИЗ
	|	РегистрСведений.Разнарядка КАК Разнарядка
	|ГДЕ
	|	Разнарядка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаРазнарядки, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаРазнарядки, ДЕНЬ)
	|	И НЕ Разнарядка.ТС ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияРасширенные.ТипТС КАК ТипТС,
	|	СведенияРасширенные.Контрагент КАК Контрагент,
	|	РазнарядкаНаДату.Колонна КАК Колонна,
	|	СУММА(ДополнительныеСведенияЗаявокОбороты.КоличествоТСОборот) КАК Количество
	|ПОМЕСТИТЬ ВыборкаЗаявокПоКонтрагентамИТипам
	|ИЗ
	|	РегистрНакопления.ДополнительныеСведенияЗаявок.Обороты(НАЧАЛОПЕРИОДА(&ДатаРазнарядки, ДЕНЬ), КОНЕЦПЕРИОДА(&ДатаРазнарядки, ДЕНЬ), ДЕНЬ, ) КАК ДополнительныеСведенияЗаявокОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДополнительныеСведенияЗаявок КАК СведенияРасширенные
	|		ПО ДополнительныеСведенияЗаявокОбороты.ИдентификаторСтрокиЗаявки = СведенияРасширенные.ИдентификаторСтрокиЗаявки
	|			И ДополнительныеСведенияЗаявокОбороты.Период = СведенияРасширенные.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РазнарядкаНаДату КАК РазнарядкаНаДату
	|		ПО (РазнарядкаНаДату.ИдентификаторСтрокиЗаявки = СведенияРасширенные.ИдентификаторСтрокиЗаявки)
	|ГДЕ
	|	ДополнительныеСведенияЗаявокОбороты.КоличествоТСОборот > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РазнарядкаНаДату.Колонна,
	|	СведенияРасширенные.Контрагент,
	|	СведенияРасширенные.ТипТС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыборкаЗаявокПоКонтрагентамИТипам.ТипТС КАК ТипТС,
	|	ВыборкаЗаявокПоКонтрагентамИТипам.Колонна КАК Колонна,
	|	СУММА(ВыборкаЗаявокПоКонтрагентамИТипам.Количество) КАК Количество
	|ПОМЕСТИТЬ ВыборкаЗаявокПоТипам
	|ИЗ
	|	ВыборкаЗаявокПоКонтрагентамИТипам КАК ВыборкаЗаявокПоКонтрагентамИТипам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыборкаЗаявокПоКонтрагентамИТипам.Колонна,
	|	ВыборкаЗаявокПоКонтрагентамИТипам.ТипТС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТипыТСВЭксплуатации.ТипТС КАК ТипТС,
	|	ТипыТСВЭксплуатации.Подразделение КАК Колонна,
	|	ТипыТСВЭксплуатации.Количество КАК ВЭксплуатации,
	|	ВыборкаЗаявокПоТипам.Количество КАК Заявлено,
	|	РазнарядкаРазличныеТСПоТипам.Количество КАК Разнарядка,
	|	ВыпискаПЛ.Количество КАК Линия,
	|	ЛинияСубподряд.Количество КАК ЛинияСубподряд
	|ИЗ
	|	ТипыТСВЭксплуатации КАК ТипыТСВЭксплуатации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаЗаявокПоТипам КАК ВыборкаЗаявокПоТипам
	|		ПО ТипыТСВЭксплуатации.ТипТС = ВыборкаЗаявокПоТипам.ТипТС
	|			И ТипыТСВЭксплуатации.Подразделение = ВыборкаЗаявокПоТипам.Колонна
	|		ЛЕВОЕ СОЕДИНЕНИЕ РазнарядкаРазличныеТСПоТипам КАК РазнарядкаРазличныеТСПоТипам
	|		ПО (РазнарядкаРазличныеТСПоТипам.ТипТС = ТипыТСВЭксплуатации.ТипТС)
	|			И ТипыТСВЭксплуатации.Подразделение = РазнарядкаРазличныеТСПоТипам.Колонна
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыпискаПЛПоИдентификаторам КАК ВыпискаПЛ
	|		ПО (ВыпискаПЛ.ТипТС = ТипыТСВЭксплуатации.ТипТС)
	|			И ТипыТСВЭксплуатации.Подразделение = ВыпискаПЛ.Колонна
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЛинияСубподряд КАК ЛинияСубподряд
	|		ПО (ЛинияСубподряд.ТипТС = ТипыТСВЭксплуатации.ТипТС)
	|			И ТипыТСВЭксплуатации.Подразделение = ЛинияСубподряд.Колонна
	|
	|//ИТОГИ
	|//	СУММА(ВЭксплуатации),
	|//	СУММА(Заявлено),
	|//	СУММА(Линия), СУММА(Разнарядка), СУММА(Линия), СУММА(ЛинияСубподряд)
	|//ПО
	|//	ОБЩИЕ");
	
	мЗапрос.УстановитьПараметр("ДатаРазнарядки", пДатаФормирования);
	
	мТаблицаРезультат = мЗапрос.Выполнить().Выгрузить();
	Возврат ПреобразоватьТаблицуВМассивСтруктур(мТаблицаРезультат);
КонецФункции

&НаКлиенте
Процедура СформироватьТехника(Команда)
	мМассивСтруктурТаблицыТехники = ПолучитьТаблицуРаботыТехники(фДатаФормирования);
	ТаблицаРаботыТехники.Очистить();
	Для Каждого мЭлемент Из мМассивСтруктурТаблицыТехники Цикл
		мНоваяСтрокаТаблицы = ТаблицаРаботыТехники.Добавить();
		ЗаполнитьЗначенияСвойств(мНоваяСтрокаТаблицы, мЭлемент);
	КонецЦикла;
	ТаблицаРаботыТехники.Сортировать("ТипТС ВОЗР, Колонна ВОЗР");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	фПериодФормирования.Вариант = ВариантСтандартногоПериода.Последние7Дней;
	фДатаФормирования = НачалоДня(ТекущаяДата()) - 1;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПолучитьТаблицуФильтровИзНастроек();
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеСписковПроектов(Команда)
	мОписаниеОповещенияОбновитьСпискиФормы = Новый ОписаниеОповещения("ОбновитьСпискиФормы", ЭтаФорма);
	ОткрытьФорму("Обработка._юкСтатистикаРаботыПользователей.Форма.ФормаЗаполненияСписков", , , , , , мОписаниеОповещенияОбновитьСпискиФормы);
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуФильтровИзНастроек()
	мХранилищеДанных = ХранилищеОбщихНастроек.Загрузить("СтруктураСписковСтатистикиРаботыПользователей", "СпискиПользователейДляФильтров", , "ОбщаяНастройка");
	Если мХранилищеДанных <> Неопределено И мХранилищеДанных.Свойство("ДанныеМассив") Тогда
		мДанные = мХранилищеДанных.ДанныеМассив;
		фТаблицаФильтров.Очистить();
		Для Каждого мСтуктура Из мДанные Цикл
			мНоваяСтрока = фТаблицаФильтров.Добавить();
			ЗаполнитьЗначенияСвойств(мНоваяСтрока, мСтуктура);
		КонецЦикла;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПрименитьФильтр()
	Если фЗначениеФильтрПроекта <> "" И ДеревоРаботыПользователей.ПолучитьЭлементы().Количество() > 0 Тогда
		СформироватьРабота(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСпискиФормы(пРезультат, пДополнительныеПараметры) Экспорт
	ПолучитьТаблицуФильтровИзНастроек();
	ПрименитьФильтр();
КонецПроцедуры

&НаКлиенте
Процедура фЗначениеФильтрПроектаПриИзменении(Элемент)
	СформироватьРабота(Неопределено);
КонецПроцедуры
