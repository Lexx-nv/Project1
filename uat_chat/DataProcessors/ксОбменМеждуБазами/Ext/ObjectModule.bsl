Перем ТекстЛог;

Процедура ДобавитьЛог(Текст)
	
	
	Сообщить(Текст);
	ТекстЛОг = ТекстЛОг+Символы.ПС+Текст;
	
	
КонецПроцедуры

Функция МассивУзлов()
	
	Мас = Новый Массив;
	Если   глРегистрацияОбмена.ЭтоГлавныйУзел() ТОгда
		Выборка = ПланыОбмена.ДИСП.Выбрать(); 
		Пока Выборка.Следующий() Цикл
			Если Выборка.Ссылка = ПланыОбмена.ДИСП.ЭтотУзел() Тогда Продолжить; КонецЕСЛИ;
			Мас.добавить(Выборка.Ссылка);
		КонецЦикла;
	ИНаче
		Мас.добавить(глРегистрацияОбмена.ПолучитьГлавныйУзел());
	КонецЕСли;
	Возврат Мас;	
	
КонецФункции

Процедура ПрочитатьСообщениеСИзменениями(СтрКАт,ИмяФайла,ЕстьОшибка) экспорт 
	
	Файл = Новый Файл(ИмяФайла);
	Если Не Файл.Существует() Тогда
		ДобавитьЛог("Файл не найден - "+имяфайла);
		ЕстьОшибка = Истина;
		Возврат;
	КонецЕсли;
	
	Если нрег(ПРав(СокрП(ИмяФайла),4)) = ".zip" Тогда 
		ИмяФайла = Распаковать(СтрКат,имяфайла);
	КонецеСЛИ;
	
	
	ЧтениеXML = Новый ЧтениеXML;
	Попытка
		ЧтениеXML.ОткрытьФайл(ИмяФайла);
	Исключение
		ДобавитьЛог("Невозможно открыть файл обмена данными.");
		ЕстьОшибка = Истина;
		Возврат;
	КонецПопытки;
	ДобавитьЛог(" --- загружается файл " + ИмяФайла);
	
	
	ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
	Попытка
		ЧтениеСообщения.НачатьЧтение(ЧтениеXML);
		ПланыОбмена.ПрочитатьИзменения(ЧтениеСообщения,5);
		ЧтениеСообщения.ЗакончитьЧтение();
	Исключение
		ДобавитьЛог(ОписаниеОшибки());
		ЕстьОшибка = Истина;
		ДобавитьЛог("Для узла: """ + ЧтениеСообщения+ """ не удалось прочитать изменения!");
	конецпопытки;
	
	ЧтениеXML.Закрыть();
	
	Если Не КонфигурацияИзменена() Тогда
		УдалитьФайлы(ИмяФайла);
	КонецеСЛИ;
	
КонецПроцедуры

Процедура ОБМЕН() Экспорт
	
	ИнПрофиль = ПолучитьИнПрофиль();
	ИнПрофильSMTP = ПолучитьИнПрофильSMTP();
	обработка501 = Обработки.ОтправкаОф501.Создать();
	
	//Проверим остались сообщение с прошлых загрузок (возможно было обновление БД)
	ЕстьОшибки = Ложь;
	Мас = НайтиФайлы(СтрКАт,"*.xml");	
	Для каждого Эл из Мас Цикл
		ПрочитатьСообщениеСИзменениями(СтрКат,Эл.ПолноеИмя,ЕстьОшибки);
	КонецЦикла;
	
    Мас = ПолучитьПочту(Отправитель,СтрКат,ИнПрофиль);
	Для каждого Эл из Мас Цикл
		ПрочитатьСообщениеСИзменениями(СтрКат,Эл,ЕстьОшибки);
	КонецЦикла;

	//Отправим сообщение в оф.501
	Если ЕстьОшибки ТОгда
		Тхт501 = обработка501.СформироватьСообщение("Обмен: получение","Ошибка",ТекстЛог);
	ИНАче
		Тхт501 = обработка501.СформироватьСообщение("Обмен: получение","Выполнено",ТекстЛог);
	КонецЕСли;
	обработка501.Почта(Тхт501);
	
	//Для перф. базы обновить конфигурацию
	Если   глРегистрацияОбмена.ЭтоГлавныйУзел()=ЛОжь ТОгда
		Если КонфигурацияИзменена() Тогда
			СохранениеИзмененийКонфигурации();
			Возврат;
		КонецеСЛИ;
	КонецеСЛИ;
	УдалитьФайлы(СтрКАт,"*.xml");
	
	Мас = МассивУзлов();
	Для каждого Эл из мас Цикл
		ИмяФайла = СтрКат+"Обмен_из_"+ПланыОбмена.ДИСП.ЭтотУзел()+"_в_"+Эл.Наименование+".xml"; 
		ДобавитьЛог("Выгрузка изменений в файл : "+ИмяФайла);
		
		ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.ОткрытьФайл(ИмяФайла);
		ЗаписьСообщения.НачатьЗапись(ЗаписьXML, Эл);
		ПланыОбмена.ЗаписатьИзменения(ЗаписьСообщения,3);
		ЗаписьСообщения.ЗакончитьЗапись();
		ЗаписьXML.Закрыть();
		
		Почта(Эл.Емайл,Отправитель,ИмяФайла,ИнПрофиль,Эл.НомерОтправленного);
	КонецЦикла;
	
	Тхт501 = обработка501.СформироватьСообщение("Обмен: отправка","Выполнено",ТекстЛог);
	обработка501.Почта(Тхт501);
	
КонецПроцедуры

//Работа с почтой
Функция ПолучитьИнПрофиль()
	
	Отправитель = ПланыОбмена.ДИСП.ЭтотУзел().Емайл;
	
	
	ИнПрофиль = Новый ИнтернетПочтовыйПрофиль;  
	
	ИнПрофиль.ПользовательSMTP="1c@urals-capital.ru";     
	ИнПрофиль.АдресСервераSMTP="mail.tdcl.ru";   
	ИнПрофиль.ПортSMTP = 25;   
	ИнПрофиль.ПарольSMTP="1!qqqqqq";     
	ИнПрофиль.Пользователь="1c@urals-capital.ru";    
	
	Если найти(нрег(Отправитель),"yandex")<>0 Тогда
		//ИнПрофиль.АдресСервераSMTP="smtp.yandex.ru";   
		ИнПрофиль.АдресСервераimap="imap.yandex.ru";     
		//ИнПрофиль.ПортSMTP = 465;   
		ИнПрофиль.Портimap = 993;   
		ИНПрофиль.ИспользоватьSSLIMAP = true;
	ИНАче
		ИнПрофиль.АдресСервераimap="mail.tdcl.ru";     
		ИнПрофиль.Портimap = 143;   
		ИНПрофиль.АутентификацияPOP3 = СпособPOP3Аутентификации.Обычная;
		
	КонецеСЛИ;
	
	ИнПрофиль.ПользовательIMAP=Отправитель;     
	ИнПрофиль.ПарольIMAP="1!qqqqqq";     
	ИнПрофиль.Пароль="1!qqqqqq";     
	//ИнПрофиль.POP3ПередSMTP = true;    
	ИНПрофиль.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
	//ИНПрофиль.Аутентификацияimap = СпособI;
	//ИНПрофиль.ТолькоЗащищеннаяАутентификацияIMAP=Ложь;
	
	Возврат ИнПрофиль;
	
КонецФункции


Функция ПолучитьИнПрофильSMTP() экспорт
	

	ИнПрофиль = Новый ИнтернетПочтовыйПрофиль;   
	
	ИнПрофиль.ПользовательSMTP="1c@urals-capital.ru";     
	ИнПрофиль.АдресСервераSMTP="mail.tdcl.ru";   
	ИнПрофиль.ПортSMTP = 25;   
	ИнПрофиль.ПарольSMTP="1!qqqqqq";     
	ИНПрофиль.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
	
	Возврат ИнПрофиль;
	
КонецФункции


//Работа с почтой
Функция ПолучитьИнПрофиль1()
	
	Если   ПланыОбмена.ГлавныйУзел() <> Неопределено ТОгда
		Отправитель = "MTKBASE1";
		Получатель  = "MTKcentrIB";
	ИНаче
		Отправитель = "MTKcentrIB";
		Получатель  = "MTKBASE1";
	КонецЕСЛИ;
	
	ИнПрофиль = Новый ИнтернетПочтовыйПрофиль;          
	//ИнПрофиль.АдресСервераSMTP= "192.168.1.2";     
	//ИнПрофиль.АдресСервераPOP3= "192.168.1.2";     
	ИнПрофиль.АдресСервераSMTP="smtp.yandex.ru";   
	ИнПрофиль.АдресСервераPOP3="pop.yandex.ru";     
	ИнПрофиль.ПользовательSMTP=Отправитель;     
	ИнПрофиль.Пользователь=Отправитель;     
	ИнПрофиль.ПарольSMTP="1!qqqqqq";     
	ИнПрофиль.Пользователь=Отправитель;     
	ИнПрофиль.Пароль="1!qqqqqq";     
	ИнПрофиль.ПортSMTP = 465;   
	ИнПрофиль.Портpop3 = 995;   
	//ИнПрофиль.POP3ПередSMTP = true;    
	ИНПрофиль.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
	ИНПрофиль.АутентификацияPOP3 = СпособPOP3Аутентификации.Обычная;
	ИНПрофиль.ИспользоватьSSLPOP3 = true;
	ИНПрофиль.ИспользоватьSSLSMTP = true;
	
	//инПрофиль.АутентификацияSMTP
	Возврат ИнПрофиль;
	
КонецФункции

Функция Распаковать(СтрКат,ИмяФайла)
	
	Файл1="";
	
	Зип = Новый ЧтениеZipФайла;
	Зип.Открыть(ИМяФайла);
	ДЛя каждого Эл из Зип.Элементы Цикл
		Файл1=СтрКат+"\"+Эл.Имя;
		ДобавитьЛог("Записан файл "+"\"+Эл.Имя);
	КонецЦикла;
	Зип.ИзвлечьВсе(СтрКат);
	
	УдалитьФайлы(ИмяФайла);
	
	Возврат Файл1;
	
КонецФункции

Функция ПолучитьПочту(Получатель,СтрКат,ИнПрофиль)
	
	Если РежимОтладки ТОгда Возврат Новый Массив; КонецеслИ;
	
	ИнПочта   = Новый ИнтернетПочта;           
	
	ИнПочта.Подключиться(ИнПрофиль,ПротоколИнтернетПочты.IMAP);
	ДобавитьЛог("Подключение к почтовому ящику "+ИнПрофиль.Пользователь+"  "+ИнПрофиль.АдресСервераSMTP+" прошло успешно.");
	МасПисем = Новый Массив;
	МасУдл   = Новый МАссив;
	
	//Найден последнее сообщение
	тбМакс = Новый ТаблицаЗначений;
	тбМакс.Колонки.Добавить("Отправитель");
	тбМакс.Колонки.Добавить("Макс");
	тбМакс.Колонки.Добавить("Ид");
	
	
	Мас = ИНПочта.ПолучитьЗаголовки();
	Макс = -1;
	Для каждого Эл Из Мас Цикл
		
		пОтпр = СокрЛП(Эл.Отправитель.Адрес);
		нс = тбМакс.Найти(пОтпр,"Отправитель");
		Если нс=Неопределено Тогда
			нс = тбМакс.Добавить();
			нс.Отправитель = пОтпр;
			нс.Макс = -1;
			нс.Ид =Неопределено;
		КонецеСЛИ;
		
		
		МасУдл.Добавить(Эл.ИдентификаторСообщения);
		Попытка
			п = Число(Эл.Тема);
		Исключение
			п=-2;
		КонецПопытки;
		Если п>нс.Макс ТОгда
			нс.ид = Эл.ИдентификаторСообщения;
			нс.Макс = п;
		КонецЕСлИ;
	КонецЦикла;
	
	//Сохраним посл. сообщение
	Если тбМакс.Количество()>0 Тогда
		
		Мас = ИнПочта.Выбрать(Истина);
		Для каждого Письмо из Мас Цикл
			Если тбМакс.Найти(Письмо.ИдентификаторСообщения,"Ид")=Неопределено ТОгда Продолжить; КонецеслИ;
			
			Для каждого Фл из Письмо.Вложения Цикл
				
				ПутьКФайлу = СтрКат+"\"+МасПисем.Количество()+"_"+фл.ИмяФайла;
				Фл.Данные.Записать(ПутьКФайлу);
				
				Если нрег(ПРав(СокрП(ПутьКФайлу),4)) = ".zip" Тогда 
					ПутьКФайлу = Распаковать(СтрКат,ПутьКФайлу);
				КонецеСЛИ;
				
				МасПисем.Добавить(ПутьКФайлу);
				ДобавитьЛог("Записан файл "+ПутьКФайлу);
			КонецЦикла;
		КонецЦикла;
	КонецеСлИ;
	
	Если МАсУдл.Количество()<>0 ТОгда
		инПочта.УдалитьСообщения(МасУдл); //не работает
	КонецЕСЛИ;
	ИнПочта.ОчиститьУдаленныеСообщения();
	ИнПочта.Отключиться();
	ДобавитьЛог("Количество записей : "+МАсПисем.Количество()+"
			|  ");
			
	//Найдем последний файл
	////Если МасПисем.Количество()>1 Тогда
	////	пПуть=Неопределено;
	////	пДт = Дата(1,1,1,0,0,0);
	////	Для каждого эл из МасПисем Цикл
	////		Файл = Новый Файл(Эл);
	////		Если Файл.ПолучитьВремяИзменения()>пДт тогда
	////			пДт = Файл.ПолучитьВремяИзменения();
	////			пПуть = Эл;
	////		КонецЕСЛИ;
	////	КонецЦикла;
	////	
	////	Для каждого Эл из МасПисем Цикл
	////		Если Эл<>ппуть Тогда
	////			УдалитьФайлы(эл);
	////		Конецесли;
	////	КонецЦикла;
	////	МасПисем.Очистить();
	////	МасПисем.Добавить(пПуть);
	////	
	////КонецеСЛи;
	
	Возврат МасПисем;
	
КонецФункции

Процедура Почта(Получатель,Отправитель,ИмяФайла,ИнПрофиль,НомерОтправленного)
	
	Если РежимОтладки ТОгда Возврат; КонецеСЛИ;
	
	 Зип = Новый ЗаписьZipФайла;
	 Зип.Открыть(ИмяФайла+".zip");
	 Зип.Добавить(ИмяФайла);
	 Зип.Записать();
	 Зип = Неопределено;
	 
	 УдалитьФайлы(ИмяФайла);
	 ИМяФайла = ИмяФайла+".zip";

	
	//Отправим почту
	Кому = Получатель;//+"@yandex.ru";//"@mail.ru";
	Тема = ""+НомерОтправленного;
	Текст = " Обмен с перефирийной базой "+ТекущаяДата();
	
	Письмо=Новый ИнтернетПочтовоеСообщение;
	Письмо.Получатели.Добавить(Кому);
	
		Письмо.Вложения.Добавить(ИмяФайла);
		ДобавитьЛог("Подготовлен к отправке : "+ИмяФайла);
	
	Письмо.ИмяОтправителя=ИнПрофиль.ПользовательSMTP;//+"@yandex.ru";//"@mail.ru";
	Письмо.Отправитель=ИнПрофиль.ПользовательSMTP;//+"@yandex.ru";//"@mail.ru";
	Письмо.Кодировка="windows-1251";
	Письмо.Тема=Тема;
	Письмо.Тексты.Добавить(Текст);
	
	ИнПочта=Новый ИнтернетПочта;
	ИнПочта.Подключиться(ИнПрофиль);
	ИнПочта.Послать(Письмо);
	ДобавитьЛог("Почта отправлена!");
	ИнПочта.Отключиться();
	
	Письмо = Неопределено;
	 УдалитьФайлы(ИмяФайла);
	

КонецПроцедуры

//Сохранение базы
Процедура СохранениеИзмененийКонфигурации()
	ДобавитьЛог("Произошло изменение конфигурации. Необходимо закрыть программу у всех пользователей для обновления 1с.");
	Стк = ПолучитьКластерИИмяБазы();
	Если Стк=Неопределено Тогда 
		#Если ТолстыйКлиентУправляемоеПриложение Тогда 
			УдалитьСоединенияСБазойFile(СтрКат);
		#КонецЕсли
	ИНаче
		УдалитьСоединенияСБазойSQL(Стк.Кластер,Стк.База,СтрКат);	
	КонецеСЛИ;

	
КонецПроцедуры


Функция ПолучитьКластерИИмяБазы() Экспорт
	
	пСтр = СтрокаСоединенияИнформационнойБазы();   //Srvr="192.168.20.13";Ref="BUHCentr";
	Если Найти(пСтр,"Srvr")=0 Тогда
	//	ДобавитьЛог("Функция работает только для серверной ИБ!");
		Возврат Неопределено;
	КонецЕСЛИ;
	
	пСтр = СтрЗаменить(пСтр,"""",Символы.ПС);
	
	Стк = Новый Структура("Кластер,База",СтрПолучитьСтроку(пСтр,2),СтрПолучитьСтроку(пСтр,4));
	Возврат Стк;
	
КонецФункции

//  "Designer","BackgroundJob"    
Функция ПолучитьТекстУдлСоединения(IPServer,ИмяБазы)
	
	Возврат  "
|dim IPServer
|dim BaseName
|dim COMConnector
|dim Agent
|	
|IPServer = """+IPServer+"""
|BaseName = LCase("""+ИмяБазы+""")

|set COMConnector = CreateObject(""V83.COMConnector"")
|SET Agent = COMConnector.ConnectAgent(IPServer)
|	
|	For Each  elm in Agent.GetClusters() 
|		Agent.Authenticate elm, """",""""
|		
|		For Each Ses in Agent.GetSessions(elm) 
|			
|                        if (LCase(Ses.infoBase.Name) = BaseName) and  (Ses.AppID <> ""COMConsole"")   THEN
|                              Agent.TerminateSession elm, Ses	
|                        END IF

|                On Error Resume next
|		NEXT
|	NEXT
|";	
	
	
КонецФункции

&НаКлиенте
Процедура УдалитьСоединенияСБазойFile(ПутьИсточник)
   СтрокаСоединения=СтрокаСоединенияИнформационнойБазы();
   
   СтрЗапуска = "";
   СтрЗапуска = СтрЗапуска +Символы.ПС+"WScript.Sleep 3000"; // на всякий случай
   Команда=""""""+КаталогПрограммы()+"1CV8.EXE"""" CONFIG /F "+НСтр(СтрокаСоединения,"File")+" /N 1с_Рег_Работы /P 19621209091262  -NoTruncate /UpdateDBCfg";
   СтрЗапуска = СтрЗапуска +Символы.ПС+ "ReturnCode=WshShell.Run("""+Команда+""",1,1)";
   СтрЗапуска = СтрЗапуска +Символы.ПС+ "If ReturnCode=0 Then"; 
   
   // если обновились удачно, то пытаемся дочитать сообщение
   Команда=""""""+КаталогПрограммы()+"1CV8.EXE"""" ENTERPRISE  /F "+НСтр(СтрокаСоединения,"File")+" /N 1с_Рег_Работы /P 19621209091262";
   СтрЗапуска = СтрЗапуска +Символы.ПС+ "ReturnCode=WshShell.Run("""+Команда+""",1,1)";
   
   //Запускаем программу для пользователя
   Команда=""""""+КаталогПрограммы()+"1CV8.EXE"""" ENTERPRISE  /F "+НСтр(СтрокаСоединения,"File")+" /N"""""+ИмяПользователя()+""""" /P";
   СтрЗапуска = СтрЗапуска +Символы.ПС+ "ReturnCode=WshShell.Run("""+Команда+""",1,1)";
   
   СтрЗапуска = СтрЗапуска +Символы.ПС+ "End If";
   СтрЗапуска = СтрЗапуска +Символы.ПС+ "Set FSO=CreateObject(""Scripting.FileSystemObject"")";
   СтрЗапуска = СтрЗапуска +Символы.ПС+ "Set File=FSO.GetFile(WScript.ScriptFullName)";
   СтрЗапуска = СтрЗапуска +Символы.ПС+ "File.Delete";
   
	
   ВыполнитьСкрипт(ПутьИсточник,СтрЗапуска);
   ЗавершитьРаботуСистемы(Ложь,Ложь);
	
Конецпроцедуры

Процедура УдалитьСоединенияСБазойSQL(IPServer,ИмяБазы,ПутьИсточник)
	
	Если Найти(ПутьИсточник," ")<>0 Тогда
		ЗаписатьЛог("Найден пробел в пути выгрузки : "+ПутьИсточник);
	КонецЕСЛи;
	СтрБаза = IPServer+"\"+ИмяБазы;
	
	СтрЗапуска = "";
	СтрЗапуска = СтрЗапуска +Символы.ПС+ ПолучитьТекстУдлСоединения(IPServer,ИмяБазы);
	
	СтрЗапуска = СтрЗапуска +Символы.ПС+ "sReturn = WshShell.Run("""""+ """"+КаталогПрограммы()+"\1cv8.exe""""   CONFIG /S "+стрБаза+" /N 1с_Рег_Работы /P 19621209091262  -NoTruncate /UpdateDBCfg  "+""" ,1,True)"; 
	СтрЗапуска = СтрЗапуска +Символы.ПС+ "sReturn = WshShell.Run("""""+ """"+КаталогПрограммы()+"\1cv8.exe""""   ENTERPRISE /S "+стрБаза+" /N 1с_Рег_Работы /P 19621209091262    "+""" ,1,True)"; 
	ЗаписатьЛог(СтрЗапуска);
	
	ВыполнитьСкрипт(ПутьИсточник,СтрЗапуска);
	
	
Конецпроцедуры

Процедура ВыполнитьСкрипт(ПутьИсточник,СтрЗапуска)
	

   ПутьКСкрипту=ПутьИсточник+"\UpdateDBCfg1с8.vbs";
   
   Скрипт=Новый ЗаписьТекста(ПутьКСкрипту,КодировкаТекста.ANSI);
   Скрипт.ЗаписатьСтроку("  
   |  
   |  Set WshShell = WScript.CreateObject(""WScript.Shell"")
   |  Set FSO=CreateObject(""Scripting.FileSystemObject"")
   |  
   |  "+СтрЗапуска+"
   |  
   |'-------------------------------------  
   |  Set File=FSO.GetFile(WScript.ScriptFullName)
   //   |  File.Delete
   |  Set WshShell = Nothing
   |   ");
   
   
   Скрипт.Закрыть();
   ЗаписатьЛог("Запуск скрипта "+ПутьКСкрипту);
   
   FSO = Новый COMОбъект("Scripting.FileSystemObject");
   IF FSO.FileExists("C:\Windows\SysWOW64" ) = TRUE THEN
	   ПутьКСкрипту = "C:\Windows\SysWOW64\wscript.exe "+ПутьКСкрипту;
   EndIF;
		
   ЗапуститьПриложение(ПутьКСкрипту);
	
КонецПроцедуры

Процедура ЗаписатьЛог(ТекСтр,НадоЗаписьВЖурнал=Ложь)
	
	//Если  НадоЗаписьВЖурнал Тогда
	//	ЗаписьЖурналаРегистрации("ИнформационнаяБаза.РегламентноеЗадание",УровеньЖурналаРегистрации.Информация,,,ТекСтр,);
	//КонецеСЛИ;
	//
	//ФайлЛог = Новый ЗаписьТекста(ИмяФайлаЛог,КодировкаТекста.ANSI,,Истина);
	//ФайлЛог.ЗаписатьСтроку(""+ТекущаяДата()+" : "+ТекСтр);
	//ФайлЛог.Закрыть();
	
КонецПроцедуры


	
WshShell = Новый COMObject("WScript.Shell");
Попытка
ЗаписьЖурналаРегистрации("ИнформационнаяБаза.РегламентноеЗадание",УровеньЖурналаРегистрации.Информация,,,"WshShell.CurrentDirectory : "+WshShell.CurrentDirectory,);
Исключение 
ЗаписьЖурналаРегистрации("ИнформационнаяБаза.РегламентноеЗадание",УровеньЖурналаРегистрации.Информация,,,"WshShell.CurrentDirectory (Ошибка): "+ОписаниеОшибки(),);
КонецПопытки;
Попытка
ЗаписьЖурналаРегистрации("ИнформационнаяБаза.РегламентноеЗадание",УровеньЖурналаРегистрации.Информация,,,"WshShell.Environment(Process).length : "+WshShell.Environment("Process").length,);
Исключение 
ЗаписьЖурналаРегистрации("ИнформационнаяБаза.РегламентноеЗадание",УровеньЖурналаРегистрации.Информация,,,"WshShell.Environment(Process).length (Ошибка): "+ОписаниеОшибки(),);
КонецПопытки;
//СтрКат = WshShell.SpecialFolders().Item("Desktop")+"\Обмен_1с\";
СтрКат = WshShell.Environment("Process").Item("APPDATA");
Если СокрЛП(СтрКат)="" ТОгда
	СтрКат = КаталогПрограммы();
КонецЕСЛИ;
СтрКат = СтрКат+"\1C\Обмен_1с\";
СоздатьКаталог(СтрКат);
ТекстЛог = "";
ЗаписьЖурналаРегистрации("ИнформационнаяБаза.РегламентноеЗадание",УровеньЖурналаРегистрации.Информация,,,СтрКат,);
