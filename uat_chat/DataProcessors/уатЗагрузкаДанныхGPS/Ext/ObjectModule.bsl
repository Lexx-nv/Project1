Перем флОтборТСУстановлен;
Перем тблОтборТС;


//Загружает файл обмена в таблицу
Процедура ЗагрузитьФайлОбмена() Экспорт
	//Сначала очистим дерево номенклатур для загрузки
	ТаблицаДанных.Очистить();
	
	//Проверим заполнение структуры файла
	Если ПоляФайлаОбмена.Найти(Истина, "Использование") = Неопределено Тогда
		Сообщить("Не выбраны поля в таблице полей файла обмена.", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	
	//Проверим наличие файла
	Файл = Новый Файл(ФайлОбмена);
	Если НЕ Файл.Существует() Тогда
		Сообщить("Файл обмена <" + ФайлОбмена + "> не найден.", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	
	МассивНоменклатуры = Новый Массив;
	
	//проверяем установлен ли отбор по ТС, если не установлен то запрос не будем использовать вообще
	Для Каждого ТекОтбор Из ПостроительОтчетаТС.Отбор Цикл
		Если ТекОтбор.Использование Тогда
			флОтборТСУстановлен = Истина;
		КонецЕсли;
	КонецЦикла;
	Если флОтборТСУстановлен Тогда
		ПостроительОтчетаТС.Выполнить();
		тблОтборТС = ПостроительОтчетаТС.Результат.Выгрузить();
		тблОтборТС.Индексы.Добавить("ИДвСистемеНавигации");
	КонецЕсли;
	
	//Считаем файл
	ФайлОбменаОбъект = Новый ЧтениеТекста(ФайлОбмена);
	
	Попытка
		ТекстДок = Новый ТекстовыйДокумент;
		ТекстДок.Прочитать(ФайлОбмена);
		ВсегоСтрок = ТекстДок.КоличествоСтрок();
	Исключение
		ВсегоСтрок = "?";
	КонецПопытки;
	НомСтроки = 1;
	
	СтрокаФайлаОбмена = "";
	Пока СтрокаФайлаОбмена <> Неопределено Цикл
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();
			Состояние("Загрузка данных из файла: " + НомСтроки + " / " + ВсегоСтрок);
		#КонецЕсли
		
		СтрокаФайлаОбмена = ФайлОбменаОбъект.ПрочитатьСтроку();
		
		Если (СтрокаФайлаОбмена <> Неопределено) И (НЕ ПустаяСтрока(СокрЛП(СтрокаФайлаОбмена))) Тогда
			//Для каждой строки файла обмена сформируем ветку дерева
			СтрокаФайлаОбмена = СокрЛП(СтрокаФайлаОбмена);
			Попытка
				ДобавитьСтрокуФайлаВТаблицу(СтрокаФайлаОбмена);
			Исключение
				Сообщить("Произошла ошибка при загрузке данных.");
				Возврат;
			КонецПопытки;
		КонецЕсли;
		
		НомСтроки = НомСтроки + 1;
	КонецЦикла;
	
	ФайлОбменаОбъект.Закрыть();
КонецПроцедуры

//Считывает одну строку файла обмена и добавляет позицию номенклатуры в дерево
Процедура ДобавитьСтрокуФайлаВТаблицу(СтрокаОбмена)
	Если ПустаяСтрока(СтрокаОбмена) Тогда
		Возврат;
	КонецЕсли; 
	
	//Формат строки по умолчанию:
	Формат_строки_по_умолчанию = "Дата Время ТС Лат Лон Скорость Пункт ЗначениеДатчика1 ЗначениеДатчика2 ЗначениеДатчика3 ЗначениеДатчика4 ЗначениеДатчика5";
		
	//обрезаем кавычки и добавляем справа доп. разделитель
	ОригинальнаяСтрокаОбмена = СтрокаОбмена;
	СтрокаОбмена = СтрокаОбмена + Разделитель;//Символы.Таб;
		
	//считаем поля из строки
	списПодстрокиПоля = Новый СписокЗначений; //массив полей, выделенных из строки
	Пока Истина Цикл
		НомРазделителя = Найти(СтрокаОбмена, Разделитель); //Символы.Таб);
		Если НомРазделителя = 0 Тогда
			Прервать;
		КонецЕсли;	
		ПодстрокаПоле = Лев(СтрокаОбмена, НомРазделителя - 1);
		
		списПодстрокиПоля.Добавить(ПодстрокаПоле);
		СтрокаОбмена = Сред(СтрокаОбмена, НомРазделителя + 1);
	КонецЦикла;
	
	Если списПодстрокиПоля.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//промежуточная структура, необходимая для первоначального заполнения строки без помещения в таблицу данных,
	//для возможности отбора, если он установлен
	ТекСтруктураДанных = Новый Структура("Дата, Время, ТС, ПредставлениеТС, Лат, Лон, Пункт, Скорость, ЗначениеДатчика1, ЗначениеДатчика2, ЗначениеДатчика3, ЗначениеДатчика4, ЗначениеДатчика5");
	
	НомПоля = 1;
	Для Каждого ТекПодстрока Из списПодстрокиПоля Цикл
		НомПоляНастройка = 1;
		Для Каждого ТекСтрокаПолеНастройка Из ПоляФайлаОбмена Цикл //поиск имени поля в таблице настроек
			Если НомПоляНастройка = НомПоля Тогда
				ТекИмяПоля = ТекСтрокаПолеНастройка.Поле;
				Если ТекИмяПоля = "ТС" Тогда
					ТекСтруктураДанных.ПредставлениеТС = Строка(ТекПодстрока.Значение);
					ТекСтруктураДанных[ТекИмяПоля] = Справочники.уатТС.НайтиПоРеквизиту("ИДвСистемеНавигации", ТекПодстрока.Значение);
				ИначеЕсли ТекИмяПоля = "Дата" Тогда
					ТекСтруктураДанных[ТекИмяПоля] = Дата(Сред(ТекПодстрока.Значение, 7, 4) + Сред(ТекПодстрока.Значение, 4, 2) + Лев(ТекПодстрока.Значение, 2) + "000000");
				ИначеЕсли ТекИмяПоля = "Время" Тогда
					ТекСтруктураДанных[ТекИмяПоля] = Дата("00010101" + СтрЗаменить(ТекПодстрока.Значение, ":", ""));
				Иначе
					ТекСтруктураДанных[ТекИмяПоля] = Строка(ТекПодстрока.Значение);
				КонецЕсли;
				Прервать;
			КонецЕсли;
			НомПоляНастройка = НомПоляНастройка + 1;
		КонецЦикла;
		
		НомПоля = НомПоля + 1;
	КонецЦикла;
	
	ТекДата = ТекСтруктураДанных.Дата + (ТекСтруктураДанных.Время - '00010101');
	
	Если ((НЕ флОтборТСУстановлен) ИЛИ тблОтборТС.Найти(ТекСтруктураДанных.ПредставлениеТС, "ИДвСистемеНавигации") <> Неопределено)
		И ТекДата >= ДатаНач И ТекДата <= ДатаКон Тогда
		НоваяСтрокаДанных = ТаблицаДанных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаДанных, ТекСтруктураДанных);
	КонецЕсли;
КонецПроцедуры

//Загружает данные из таблицы данных в регистр
Процедура ЗагрузкаРегистраМестонахождениеGPS() Экспорт
	НомСтроки = 1;
	ВсегоСтрок = ТаблицаДанных.Количество();
	Для Каждого ТекСтрока Из ТаблицаДанных Цикл
		МенеджерЗаписиМестоположениеGPS = РегистрыСведений.уатМестоположениеGPS.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписиМестоположениеGPS, ТекСтрока);
		МенеджерЗаписиМестоположениеGPS.Период = ТекСтрока.Дата + (ТекСтрока.Время - '00010101');
		
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();
			Состояние("Запись местоположения ТС в регистр: " + НомСтроки + " / " + ВсегоСтрок);
		#КонецЕсли
		
		Попытка
			МенеджерЗаписиМестоположениеGPS.Записать();
		Исключение
			Сообщить("Не удалось записать: " + ТекСтрока.Дата + (ТекСтрока.Время - '00010101') + "; " + ТекСтрока, СтатусСообщения.Внимание);
		КонецПопытки;
		
		НомСтроки = НомСтроки + 1;
	КонецЦикла;
КонецПроцедуры

//Настройка построителя отчета
Процедура НастроитьПостроительОтчета() Экспорт
	ПостроительОтчетаТС.Текст =
	"ВЫБРАТЬ
	|	уатТС.ИДвСистемеНавигации КАК ИДвСистемеНавигации
	|ИЗ
	|	Справочник.уатТС КАК уатТС
	|{ГДЕ
	|	уатТС.Ссылка.* КАК ТС}";
	
	ПостроительОтчетаТС.ЗаполнитьНастройки();
	ПостроительОтчетаТС.ДоступныеПоля.Удалить(ПостроительОтчетаТС.ДоступныеПоля.ИДвСистемеНавигации);
	ПостроительОтчетаТС.Отбор.Добавить("ТС");
КонецПроцедуры


флОтборТСУстановлен = Ложь;