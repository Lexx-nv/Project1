Перем мТекущийПользователь;

// Рассчитывает сумму в строке табличной части документа
//
// Параметры:
//  СтрокаТабличнойЧасти - строка табличной части документа,
//  ДокументОбъект       - объект редактируемого документа,
//  СпособРасчета        - "Со всеми скидками", сумма минус скидки;
//                         "Без учета ручной скидки", сумма минус автоматические скидки;
//                         "Без учета скидок", сумма (Цена * Количество);
//
Процедура мРассчитатьСумму(СтрокаТабличнойЧасти) Экспорт
		
	Если СтрокаТабличнойЧасти.Тариф.ФиксированныйТариф Тогда
		
		СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.Тариф.Тариф;
		
	Иначе
		
		Если СтрокаТабличнойЧасти.Тариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.ПробегСПассажирами Тогда
			СтрокаТабличнойЧасти.Цена = уатОбщегоНазначения.уатНайтиТариф(СтрокаТабличнойЧасти.Тариф, СтрокаТабличнойЧасти.Количество, 0, 0, 0);
		Иначе
			СтрокаТабличнойЧасти.Цена = уатОбщегоНазначения.уатНайтиТариф(СтрокаТабличнойЧасти.Тариф,0, СтрокаТабличнойЧасти.Количество, 0, 0);
		КонецЕсли;
		
	КонецЕсли;	
	
	Сумма = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
	СуммаСкидки = Сумма * СтрокаТабличнойЧасти.ПроцентСкидкиНаценки / 100;
	СтрокаТабличнойЧасти.Сумма = Сумма - СуммаСкидки;
	
КонецПроцедуры // ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти()

// Функция рассчитывает стоимость услуг
//
//В качестве формы можно передать только основную форму данной обработки
//
Функция РассчитатьСтоимостьУслугТС(Форма = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Прейскурант) Тогда
		//ищем прейскурант
		ТаблицаПрейскурант = уатОбщегоНазначения.уатНайтиПрейскурант(СписокФильтров, Истина);
		
		Если ТаблицаПрейскурант = Неопределено Тогда
			
			Если Форма <> Неопределено Тогда
				Форма.ЭлементыФормы.НадписьПрейскурант.Заголовок = "Прейскурант не найден!";
			КонецЕсли;
			
			Возврат 0;
			
		КонецЕсли;
		
		СуммаВключаетНДС = Прейскурант.СуммаВключаетНДС;
		
		//ищем прейскурант
	Иначе	
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	уатТарифыТС.Ссылка КАК Тариф,
		|	уатТарифыТС.Владелец.Ссылка КАК Прейскурант
		|ИЗ
		|	Справочник.уатТарифыТС КАК уатТарифыТС
		|ГДЕ
		|	уатТарифыТС.Владелец.Ссылка = &Владелец";
		
		Запрос.УстановитьПараметр("Владелец", Прейскурант);
		ТаблицаПрейскурант = Запрос.Выполнить().Выгрузить();
		
		Если ТаблицаПрейскурант.Количество() = 0 Тогда
			
			Если Форма <> Неопределено Тогда
				Форма.ЭлементыФормы.НадписьПрейскурант.Заголовок = "Действующие тарифы по прейскуранту отсутствуют!";
			КонецЕсли;
			
			Возврат 0;
			
		КонецЕсли;
	КонецЕсли;
	
	//получаем период действия актуального прейкуранта
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	|	уатПрейскурантыТССрезПоследних.ДатаНачала,
	|	уатПрейскурантыТССрезПоследних.ДатаОкончания
	|ИЗ
	|	РегистрСведений.уатПрейскурантыТС КАК уатПрейскурантыТССрезПоследних
	|ГДЕ
	|	(&ДатаОкончания = &ПустаяДата ИЛИ уатПрейскурантыТССрезПоследних.ДатаНачала <= &ДатаОкончания)
	|		И (&ДатаНачала = &ПустаяДата ИЛИ уатПрейскурантыТССрезПоследних.ДатаОкончания >= &ДатаНачала)
	|		И уатПрейскурантыТССрезПоследних.Прейскурант = &Прейскурант
	|УПОРЯДОЧИТЬ ПО
	|	уатПрейскурантыТССрезПоследних.ДатаНачала УБЫВ");
	Запрос.УстановитьПараметр("Прейскурант", Прейскурант);
	Запрос.УстановитьПараметр("ДатаНачала", ВремяНачалаОказанияУслуги);
	Запрос.УстановитьПараметр("ДатаОкончания", ВремяОкончанияОказанияУслуги);
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		СтрПериодПрейскуранта = "";
	Иначе
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		СтрПериодПрейскуранта = Формат(Выборка.ДатаНачала, "ДФ = дд.ММ.гггг") +
			"-" + ?(Выборка.ДатаОкончания = '00010101', "...", Формат(Выборка.ДатаОкончания, "ДФ = дд.ММ.гггг"));
	КонецЕсли;
	
	Если Форма <> Неопределено Тогда
		Форма.ЭлементыФормы.НадписьПрейскурант.Заголовок = "Прейскурант № " + СокрЛП(Прейскурант.Код) + " (" + СтрПериодПрейскуранта +
		") " + СокрЛП(Прейскурант.Наименование);
	КонецЕсли;
	
	Результат = Неопределено;
	Для Каждого ВыбраннаяСтрока Из ТаблицаПрейскурант Цикл
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Тариф =  ВыбраннаяСтрока.Тариф;
		НоваяСтрока.Количество 	= 1; 
		НоваяСтрока.Цена 		= ВыбраннаяСтрока.Тариф.Тариф;
		НоваяСтрока.СуммаНДС	= 0;
		НоваяСтрока.СтавкаНДС	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяСтавкаНДС");
		мРассчитатьСумму(НоваяСтрока);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НоваяСтрока, ЭтотОбъект);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции //РасчетПрейскурантов

#Если Клиент Тогда
мТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
#КонецЕсли
