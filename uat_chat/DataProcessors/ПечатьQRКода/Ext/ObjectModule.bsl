Функция КомпонентаФормированияQRКода(Отказ)
	ТекстОшибки = НСтр("ru = 'Не удалось подключить внешнюю компоненту для генерации QR-кода'");
	
	Макет = ПолучитьМакет("КомпонентаПечатиQRКода");
	Адрес = ПоместитьВоВременноеХранилище(Макет); 
	Попытка
		Если ПодключитьВнешнююКомпоненту(Адрес, "QR") Тогда
			QRCodeGenerator = Новый("AddIn.QR.QRCodeExtension");
		Иначе
			//Чего-то сообщить!!!
		КонецЕсли
	Исключение
		Сообщить(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Возврат QRCodeGenerator;
	
КонецФункции

// Возвращает двоичные данные для формирования QR кода.
//
// Параметры:
//  QRСтрока         - Строка - данные, которые необходимо разместить в QR-коде.
//
//  УровеньКоррекции - Число - уровень погрешности изображения при котором данный QR-код все еще возможно 100%
//                             распознать.
//                     Параметр должен иметь тип целого и принимать одно из 4 допустимых значений:
//                     0(7% погрешности), 1(15% погрешности), 2(25% погрешности), 3(35% погрешности).
//
//  Размер           - Число - определяет длину стороны выходного изображения в пикселях.
//                     Если минимально возможный размер изображения больше этого параметра - код сформирован не будет.
//
//  ТекстОшибки      - Строка - в этот параметр помещается описание возникшей ошибки (если возникла).
//
// Возвращаемое значение:
//  ДвоичныеДанные  - буфер, содержащий байты PNG-изображения QR-кода.
// 
// Пример:
//  
//  // Выводим на печать QR-код, содержащий в себе информацию зашифрованную по УФЭБС.
//
//  QRСтрока = УправлениеПечатью.ФорматнаяСтрокаУФЭБС(РеквизитыПлатежа);
//  ТекстОшибки = "";
//  ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRСтрока, 0, 190, ТекстОшибки);
//  Если Не ПустаяСтрока(ТекстОшибки)
//      ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
//  КонецЕсли;
//
//  КартинкаQRКода = Новый Картинка(ДанныеQRКода);
//  ОбластьМакета.Рисунки.QRКод.Картинка = КартинкаQRКода;
//
Функция ДанныеQRКода(QRСтрока, УровеньКоррекции, Размер) Экспорт
	Отказ = Ложь;
	ГенераторQRКода = КомпонентаФормированияQRКода(Отказ);
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	Попытка
		ДвоичныеДанныеКартинки = ГенераторQRКода.GenerateQRCode(QRСтрока, УровеньКоррекции, Размер);
	Исключение
		//ЗаписьЖурналаРегистрации(НСтр("ru = 'Формирование QR-кода'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		//	УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	Возврат ДвоичныеДанныеКартинки;
КонецФункции

Функция СформироватьСтрокуQRКода(ТранспортноеСредство,Водитель,ДокСсылка)
	
	QRСтрока = "";
	
	Организация = Константы.ксНашаОрганизация.Получить();
	
	Если ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.уатРемонтныйЛист") Тогда
		пВид = "Рем.лист";	
	ИначеЕсли ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.уатПутевойЛист") Тогда
		пВид = "Пут.лист";	
	ИначеЕсли ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.НарядНаТО") Тогда
		пВид = "Нар.на ТО";
	ИначеЕсли ТипЗнч(ДокСсылка) = Тип("Структура") Тогда
		пВид = ДокСсылка.ВидДокумента;
	КонецЕсли;
	
	МаркаАвто = СокрЛП(Сред(ТранспортноеСредство.Наименование,1,25));
	Если ЗначениеЗаполнено(Водитель) Тогда
		ВодителиСтрокаФИО =СокрЛП(Водитель.Наименование);
		ТабНомер = СокрЛП(Водитель.Код);
	Иначе	
		ВодителиСтрокаФИО = "";
		ТабНомер = "";
	КонецЕсли;	
	
	QRСтрока = 
	""+пВид+"|"+
	СокрЛП(ДокСсылка.Номер)+"|"+
	Формат(ДокСсылка.Дата,"ДФ=yyyyMMdd")+"|"+
	СтрЗаменить(Строка(Врег(ТранспортноеСредство.ГосударственныйНомер))," ","")+"|"+
	СокрЛП(ТранспортноеСредство.ГаражныйНомер)+"|"+
	СокрЛП(МаркаАвто)+"|"+
	СокрЛП(ВодителиСтрокаФИО)+"|"+
	ТабНомер+"|"+
	Формат(ТекущаяДата(),"ДФ=yyyyMMddHHmmss")+"|"+
	СокрЛП(Организация.ИНН)+""; 	
	
	
	бин = ПолучитьДвоичныеДанныеИзСтроки(QRСтрока);
	пСтр = ПолучитьBase64СтрокуИзДвоичныхДанных(бин);
	пСтр = СтрЗаменить(пстр,Символы.ПС,"%%!!%%");
	 
	Возврат "_!!_" + пСтр;

КонецФункции	

//Процедура ВывестиQRКодЮралс(ДокСсылка,ОбластьТаблицы,Ориентация) Экспорт
Процедура ВывестиQRКодЮралс(ТранспортноеСредство,Водитель,ДокСсылка,ОбластьТаблицы, Верх = 0,Лево = 0) Экспорт
	
	Если ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.уатПутевойЛист") Тогда
		ЭтоПутевой = Истина;
	Иначе
		ЭтоПутевой = Ложь;
	КонецЕсли;
	
	
	//Если это привлеченник, то печатать Юралс не надо
	мЭтоПривлеченныйТС = глОбщий.ЭтоПривлеченноеТС(ТранспортноеСредство,ДокСсылка.Дата);
	Если  мЭтоПривлеченныйТС Тогда
		Возврат;
	КонецЕсли;	
	
	//Рамка Юралс
	МакетРамкаЮКДляСклада = ПолучитьМакет("РамкаЮКДляСклада");
	РисунокUC = ОбластьТаблицы.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка); 
	РисунокUC.Картинка = Новый Картинка(МакетРамкаЮКДляСклада);	
	РисунокUC.РазмерКартинки = РазмерКартинки.Пропорционально; 
	РисунокUC.Высота = 55; 
	РисунокUC.Ширина = 55; 
	РисунокUC.ГраницаСверху = Ложь;
	РисунокUC.ГраницаСлева = Ложь;
	РисунокUC.ГраницаСправа = Ложь;
	РисунокUC.ГраницаСнизу = Ложь;	
	
	//QR Код
	СтрокаQRКода = СформироватьСтрокуQRКода(ТранспортноеСредство,Водитель,ДокСсылка);
	ДанныеQRКода = ДанныеQRКода(СтрокаQRКода,0,252);
	КартинкаQRКода = Новый Картинка(ДанныеQRКода);
	НовыйРисунок = ОбластьТаблицы.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
	НовыйРисунок.Картинка = КартинкаQRКода;
	НовыйРисунок.Высота = 45; 
	НовыйРисунок.Ширина = 45;
	НовыйРисунок.РазмерКартинки = РазмерКартинки.Растянуть; 
	НовыйРисунок.ГраницаСверху = Ложь;
	НовыйРисунок.ГраницаСлева = Ложь;
	НовыйРисунок.ГраницаСправа = Ложь;
	НовыйРисунок.ГраницаСнизу = Ложь;	
	
	
	РисунокUC.Верх = Верх;
	РисунокUC.Лево = Лево;
	НовыйРисунок.Верх = Верх + 5;
	НовыйРисунок.Лево = Лево+ 5;
	
	
КонецПроцедуры


Процедура ВывестиQRКодГазПром(КартинкаQRКодаГПН,ОбластьТаблицы, Верх = 0,Лево = 0) Экспорт
	
	НовыйРисунок = ОбластьТаблицы.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
	НовыйРисунок.Картинка = КартинкаQRКодаГПН;
	
	НовыйРисунок.Высота = 55; 
	НовыйРисунок.Ширина = 55;
	НовыйРисунок.РазмерКартинки = РазмерКартинки.Растянуть; 
	НовыйРисунок.ГраницаСверху = Истина;
	НовыйРисунок.ГраницаСлева = Истина;
	НовыйРисунок.ГраницаСправа = Истина;
	НовыйРисунок.ГраницаСнизу = Истина;	
	
	НовыйРисунок.Верх=Верх;
	НовыйРисунок.Лево=Лево;
	
КонецПроцедуры