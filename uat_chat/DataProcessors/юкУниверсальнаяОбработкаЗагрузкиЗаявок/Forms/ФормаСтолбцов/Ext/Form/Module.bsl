&НаКлиенте
Перем ЗакрытиеРазрешено;

#Область Вспомогательные

&НаСервереБезКонтекста
Функция ВывестиТаб(ТБл,Стк=Неопределено,КонтрольРек=Неопределено,Группировать=Ложь)
	
	Если Тбл.Количество()=0 Тогда
		Сообщить("Нет данных для отображения");
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	
	Если Стк = Неопределено Тогда
		Стк = Новый Структура;
		Для каждого Кол из Тбл.Колонки Цикл
			Стк.Вставить(Кол.Имя,Кол.Заголовок);
		КонецЦикла;
	КонецЕСлИ;
	
	Таб = Новый ТабличныйДокумент;
	ОблСтр = Новый ТабличныйДокумент;
	
	НС = 3;
	НК = 2;
	Линия  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
	ЛинияТ = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,2);
	сооШир = Новый Соответствие;
	
	Обл = Таб.Область(1,,1);
	Обл.Шрифт = Новый Шрифт(Обл.Шрифт,,,Истина);
	Обл.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
	
	
	Обл = Таб.Область(нс,1,нс,1);
	Обл.Текст = "п/п";
	Обл.Обвести(Линия,Линия,Линия,ЛинияТ);
	
	ОблС = ОблСтр.Область(1,1,1,1);
	ОблС.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
	ОблС.Параметр = "ном";
	ОблС.Обвести(Линия,Линия,Линия,Линия);
	Для каждого эл из Стк Цикл
		Обл = Таб.Область(нс,нк,нс,нк);
		Обл.Текст = Эл.Значение;
		Обл.РазмещениеТекста=ТипРазмещенияТекстаТабличногоДокумента.Переносить;
		Обл.Обвести(Линия,Линия,Линия,ЛинияТ);
		
		ОблС = ОблСтр.Область(1,нк,1,нк);
		ОблС.Параметр = Эл.Ключ;
		ОблС.Обвести(Линия,Линия,Линия,Линия);
		ОблС.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
		Если ТипЗнч(Тбл[0][Эл.Ключ]) = Тип("Строка") ТОгда
			ОблС.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр;
		ИначеЕсли ТипЗнч(Тбл[0][Эл.Ключ]) = Тип("Число") ТОгда
			ОблС.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Право;
			ОблС.Формат="ЧДЦ=2";
		ИНАче
			ОблС.ПараметрРасшифровки = Эл.Ключ;
		КонецеСлИ;
		
		нк = нк + 1;
		
		сооШир.Вставить(Эл.Ключ,4);
	КонецЦикла;
	
	Обл = Таб.Область(нс,1,нс,Таб.ШиринаТаблицы);
	ОБл.Шрифт = Новый Шрифт(Обл.Шрифт,,,Истина);
	Обл.ЦветФона=WebЦвета.НейтральноЗеленый;
	обл.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
	обл.ВертикальноеПоложение   = ВертикальноеПоложение.Центр;
	
	Если Группировать Тогда
		Таб.НачатьГруппуСтрок(,Ложь);
	КонецеСЛИ;
	
	//строка
	Для каждого Стр из Тбл Цикл
		Если КонтрольРек<>Неопределено Тогда
			Если Стр[КонтрольРек]=0 ТОгда Продолжить; КонецЕсли;
		КонецЕсли;
		
		ОблСтр.Параметры.Заполнить(Стр);
		облСтр.Параметры.ном = ТБл.ИНдекс(Стр)+1;
		Таб.Вывести(ОблСтр);
		
		Для каждого Эл из сооШир Цикл
			п = Мин(45,СтрДлина(Стр[Эл.Ключ]));
			Если п > Эл.Значение Тогда
				сооШир.Вставить(Эл.Ключ,п);
			Конецесли;
		Конеццикла;
	Конеццикла;
	
	Если Группировать Тогда
		Таб.ЗакончитьГруппуСтрок();
	КонецеСЛИ;
	
	//итог
	Обл = Таб.Область(Таб.ВысотаТаблицы+1,1,Таб.ВысотаТаблицы+1,Таб.ШиринаТаблицы);
	Обл.Шрифт = Новый Шрифт(Обл.Шрифт,,Обл.шрифт.Размер+1,Истина);
	Обл.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Право;
	Обл.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
	Обл.ГраницаСверху = ЛинияТ;
	Обл.ВысотаСтроки  = 17;
	Обл.ПоВыделеннымКолонкам = Истина;
	
	Есть = Ложь;
	Для а=2 по ОблСтр.ШиринаТаблицы Цикл
		п = Тбл[0][облСтр.Область(1,а,1,а).Параметр];
		Если ТипЗнч(п) = Тип("Число") Тогда
			ключ = облСтр.Область(1,а,1,а).Параметр;
			Обл = Таб.Область(Таб.ВысотаТаблицы,а,Таб.ВысотаТаблицы,а);			
			Обл.Текст = Тбл.Итог(ключ);
			Обл.Обвести(Линия,ЛинияТ,Линия,Линия);
			
			Эл = сооШир.Получить(Ключ);
			п = Мин(45,СтрДлина(Обл.Текст));
			Если п > Эл Тогда
				сооШир.Вставить(Ключ,п);
			Конецесли;
			Есть = Истина;
		КонецеСЛИ;
	КонецЦикла;
	Если Есть Тогда
		Таб.Область(Таб.ВысотаТаблицы,1,Таб.ВысотаТаблицы,1).Текст = "Итого :";
	КонецеслИ;
	
	//установим ширину колонок
	ном=2;
	Таб.Область(,1,,1).ШиринаКолонки = СтрДлина(Тбл.Количество())+1;
	Для каждого эл из Стк Цикл
		Таб.Область(,ном,,ном).ШиринаКолонки = сооШир.Получить(Эл.Ключ)+1;
		ном=ном+1;
	КонецЦикла;
	
	Таб.ТолькоПросмотр = Истина;
	Таб.ОтображатьЗаголовки = Ложь;
	Таб.ОтображатьСетку = Ложь;
	
	Возврат Таб;	
	
КонецФункции

//&НаСервереБезКонтекста
//Функция РазложитьСтрокуВМассив(Знач Стр, Разделитель = ",") 
//	
//	МассивСтрок = Новый Массив();
//	Если Разделитель = " " Тогда
//		Стр = СокрЛП(Стр);
//		Пока 1=1 Цикл
//			Поз = Найти(Стр,Разделитель);
//			Если Поз=0 Тогда
//				МассивСтрок.Добавить(Стр);
//				Возврат МассивСтрок;
//			КонецЕсли;
//			МассивСтрок.Добавить(Лев(Стр,Поз-1));
//			Стр = СокрЛ(Сред(Стр,Поз));
//		КонецЦикла;
//	Иначе
//		ДлинаРазделителя = СтрДлина(Разделитель);
//		Пока 1=1 Цикл
//			Поз = Найти(Стр,Разделитель);
//			Если Поз=0 Тогда
//				МассивСтрок.Добавить(Стр);
//				Возврат МассивСтрок;
//			КонецЕсли;
//			МассивСтрок.Добавить(Лев(Стр,Поз-1));
//			Стр = Сред(Стр,Поз+ДлинаРазделителя);
//		КонецЦикла;
//	КонецЕсли;
//	
//КонецФункции   

&НаКлиенте
Процедура ВыбранныеКолонкиПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеКолонкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Функция ВернутьОписаниеТипаТЧ(ИмяСтроки) 
	
	Результат = Новый ОписаниеТипов("Строка");
	Отбор = Новый Структура;
	Отбор.Вставить("мИмя", ИмяСтроки);
	РезультатОписаниеТипов = мОписаниеТипов.НайтиСтроки(Отбор);
	Если РезультатОписаниеТипов.Количество() > 0 Тогда
		Результат = РезультатОписаниеТипов[0].мТип;		
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции	

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("МасПроцентExcel") Тогда
		Для Каждого Парам Из Параметры.МасПроцентExcel Цикл
			НоваяСтрока = ПроцентExcel.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Парам, "КолонкаExcel, ИмяСтолбцаТЧ");
			Для каждого СтрПроцент Из Парам.ПроцентExcel Цикл
				НоваяСтрокаПроцент = НоваяСтрока.Проценты.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаПроцент, СтрПроцент);			
			КонецЦикла;			
		КонецЦикла;		
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаголовкиExcel") И Параметры.Свойство("КолонкиТЧ") И Параметры.Свойство("Контрагент") Тогда
		
		Объект.Контрагент = Параметры.Контрагент;
		
		Для Каждого Парам Из Параметры.ЗаголовкиExcel Цикл
			Элементы.ВыбранныеКолонкиКолонкаExcel.СписокВыбора.Добавить(Парам.Значение, Парам.Представление);
			СписокКолонок.Добавить(Парам.Значение, Парам.Представление);
		КонецЦикла;
				
		АналПоискаПоЗаголовкам = ПолучитьАналПоискаПоЗаголовкам();
		АналПоискаПоЗаголовкам.Сортировать("Значение Возр, Объект Возр");
		
		ФиксЗначениеПоЗаголовкам = ПолучитьФиксЗначенияПоЗаголовкам(Объект.Контрагент);
		
		//Проверка есть ли аналитика в базе
		ЕстьАналитика = Ложь;
		Для каждого ТЧ Из Параметры.КолонкиТЧ Цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Значение", ТЧ.Имя);
			СтрокиПоискаАналит = АналПоискаПоЗаголовкам.НайтиСтроки(Отбор);
			Если СтрокиПоискаАналит.Количество() > 0 Тогда				
				ЕстьАналитика = Истина;				
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
		
		//Заполняет выбранные колонки
		Для каждого ТЧ Из Параметры.КолонкиТЧ Цикл
			
			НоваяСтрока = Объект.ВыбранныеКолонки.Добавить();
			НоваяСтрока.КолонкаТЧ = ТЧ.Имя;
			
			//Сохраняем типы ТЧ
			НовоеОписаниеТипа = мОписаниеТипов.Добавить();
			НовоеОписаниеТипа.мИмя = ТЧ.Имя;
			НовоеОписаниеТипа.мТип = ТЧ.Тип;
			
			Отбор = Новый Структура;
			Отбор.Вставить("Значение", ТЧ.Имя);
			
			// +
			НоваяСтрока.КолонкаExcel = "";
			НоваяСтрока.НомерКолонкиExcel = 0;
			НоваяСтрока.ДополнительнаяКолонкаИзПараметров = ТЧ.ДополнительнаяКолонкаИзПараметров;
			НоваяСтрока.ОсновнаяКолонкаМесяца = ТЧ.ОсновнаяКолонкаМесяца;
			НоваяСтрока.СмещениеОтОсновнойКолонки = ТЧ.СмещениеОтОсновнойКолонки;
			// -
			
			//после установки первых двух колонок, можно вычислить
			//	смещение = (колонка2-колонка1) * (N-1), где N - номер месяца
			
			СтрокиПоискаАналит = АналПоискаПоЗаголовкам.НайтиСтроки(Отбор);
			СтрокиПоискаФикс = ФиксЗначениеПоЗаголовкам.НайтиСтроки(Отбор);
			
			Если СтрокиПоискаАналит.Количество() > 0 Тогда
				КолАналит = СтрокиПоискаАналит.Количество();
				Сч = 0;
				Для каждого СтрокаАналит Из СтрокиПоискаАналит Цикл
					Для каждого ЗаголовокExcel Из Параметры.ЗаголовкиExcel Цикл
						Если СтрокаАналит.Объект = СокрЛП(ЗаголовокExcel.Представление) Тогда
							Если КолАналит >= 2 Тогда
								Представление = Лев(ЗаголовокExcel.Представление + "     (выбирали ранее)", 25) + "...";
							Иначе
								Представление = ЗаголовокExcel.Представление + "     (выбирали ранее)";
							КонецЕсли;	
							Если Сч = 0 Тогда
								НоваяСтрока.КолонкаExcel = Представление;
								НоваяСтрока.НомерКолонкиExcel = ЗаголовокExcel.Значение;
							Иначе
								НоваяСтрока.КолонкаExcel = НоваяСтрока.КолонкаExcel + "; " + Представление;
								НоваяСтрока.НомерКолонкиExcel =  НоваяСтрока.НомерКолонкиExcel + ";" + ЗаголовокExcel.Значение;
							КонецЕсли;
							НоваяСтрока.ВидЗаголовка = СтрокаАналит.ВидЗаголовка;
							Сч = Сч + 1;
							Прервать; 							
						КонецЕсли;	
					КонецЦикла;	
				КонецЦикла;
			ИначеЕсли СтрокиПоискаФикс.Количество() > 0 Тогда
				НоваяСтрока.Фикс = Истина;
				НоваяСтрока.ФиксЗначение = СтрокиПоискаФикс[0].ФиксЗначение;
				//Вынести в функцию
				Если СтрНайти(НРег(СтрокиПоискаФикс[0].Значение), "время") <> 0 Тогда
					НоваяСтрока.КолонкаExcel = Формат(СтрокиПоискаФикс[0].ФиксЗначение, "ДФ=ЧЧ:мм");
				ИначеЕсли  СтрНайти(НРег(СтрокиПоискаФикс[0].Значение), "работа с") <> 0 Тогда
					НоваяСтрока.КолонкаExcel = Формат(СтрокиПоискаФикс[0].ФиксЗначение, "ДЛФ=Д");
				Иначе
					НоваяСтрока.КолонкаExcel = СтрокиПоискаФикс[0].ФиксЗначение;			
				КонецЕсли;	
			Иначе							
				Если ТЧ.КолонкаExcel <> Неопределено И ТЧ.КолонкаExcel <> 0 И НЕ ЕстьАналитика Тогда
					Если НоваяСтрока.ДополнительнаяКолонкаИзПараметров Тогда
						Продолжить;
					КонецЕсли;
					КолонкаExcel = Параметры.ЗаголовкиExcel.НайтиПоЗначению(ТЧ.КолонкаExcel);
					//Поиск процента
					ПроцентСовпадения = "";
					Отбор = Новый Структура;
					Отбор.Вставить("КолонкаExcel", ТЧ.КолонкаExcel);
					Отбор.Вставить("ИмяСтолбцаТЧ", ТЧ.Имя);
					КолонкаExcelПроцент = ПроцентExcel.НайтиСтроки(Отбор);
					Если КолонкаExcelПроцент.Количество() > 0 Тогда
						Для Каждого Процент Из КолонкаExcelПроцент[0].Проценты Цикл
							Если ТЧ.КолонкаExcel = Процент.НомерСтолбцаExcel Тогда
								ПроцентСовпадения = Процент.ПроцентСовпадения;
							КонецЕсли;	
						КонецЦикла;
						НоваяСтрока.ВидЗаголовка = Перечисления.юкВидыАналитикиЗаголовковExcel.ПодобранаПрограммой;
					КонецЕсли;	
					//
					НоваяСтрока.КолонкаExcel = ?(КолонкаExcel <> Неопределено, КолонкаExcel.Представление + "     " + ПроцентСовпадения + "%", "");
					НоваяСтрока.НомерКолонкиExcel = ТЧ.КолонкаExcel;
				КонецЕсли;			                                				
			КонецЕсли;
		КонецЦикла; 		
				
	КонецЕсли;	
			
	Если Параметры.Свойство("ТабДокументОбразец") Тогда
		ОбразецExcel = Параметры.ТабДокументОбразец;
	КонецЕсли;
	
	Если Параметры.Свойство("НомСтрЗаголовка") Тогда
		НомСтрЗаголовка = Параметры.НомСтрЗаголовка;
	Иначе
		НомСтрЗаголовка = 1;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьАналПоискаПоЗаголовкам()
	
	МасExcel = Новый Массив();
	Для Каждого ЗаголовокExcel Из Параметры.ЗаголовкиExcel Цикл
		МасExcel.Добавить(ЗаголовокExcel.Представление);
	КонецЦикла;	
	
	Запрос = Новый Запрос();
	МВТ = Новый МенеджерВременныхТаблиц();
	Запрос.МенеджерВременныхТаблиц = МВТ;
	
	Сч = 1;
	Для каждого ТЧ Из Параметры.КолонкиТЧ Цикл
		Если Сч = 1 Тогда
			Запрос.Текст = "ВЫБРАТЬ
			|	юкАналитикаПоискаЗаголовковExcel.Значение,
			|	юкАналитикаПоискаЗаголовковExcel.Объект,
			|	юкАналитикаПоискаЗаголовковExcel.ВидЗаголовка
			|ПОМЕСТИТЬ ВТЗаголовки
			|ИЗ
			|	РегистрСведений.юкАналитикаПоискаЗаголовковExcel КАК юкАналитикаПоискаЗаголовковExcel
			|ГДЕ
			|	юкАналитикаПоискаЗаголовковExcel.Значение = " + """" + СокрЛП(ТЧ.Имя) + """" + "
			|	И юкАналитикаПоискаЗаголовковExcel.ВидЗаголовка <> Значение(Перечисление.юкВидыАналитикиЗаголовковExcel.ФиксированноеЗначение)
			|	И юкАналитикаПоискаЗаголовковExcel.Контрагент = &Контрагент";
		Иначе
			Запрос.Текст = Запрос.Текст + "
			|ОБЪЕДИНИТЬ ВСЕ
			|ВЫБРАТЬ           
			|	юкАналитикаПоискаЗаголовковExcel.Значение,
			|	юкАналитикаПоискаЗаголовковExcel.Объект,
			|	юкАналитикаПоискаЗаголовковExcel.ВидЗаголовка
			|ИЗ
			|	РегистрСведений.юкАналитикаПоискаЗаголовковExcel КАК юкАналитикаПоискаЗаголовковExcel
			|ГДЕ
			|	юкАналитикаПоискаЗаголовковExcel.Значение = " + """" + СокрЛП(ТЧ.Имя) + """"  + "
			|	И юкАналитикаПоискаЗаголовковExcel.ВидЗаголовка <> Значение(Перечисление.юкВидыАналитикиЗаголовковExcel.ФиксированноеЗначение)
			|	И юкАналитикаПоискаЗаголовковExcel.Контрагент = &Контрагент";
		КонецЕсли;
		Сч = Сч + 1;
	КонецЦикла;	
		
	Запрос.Текст =  Запрос.Текст + "
	|;
	|ВЫБРАТЬ
	|	ВТЗаголовки.Значение,
	|	ВТЗаголовки.Объект,
	|	МАКСИМУМ(ВТЗаголовки.ВидЗаголовка) КАК ВидЗаголовка
	|ИЗ
	|	ВТЗаголовки КАК ВТЗаголовки
	|ГДЕ
	|	ВТЗаголовки.Объект В(&МасExcel)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗаголовки.Значение,
	|	ВТЗаголовки.Объект";

	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("МасExcel", МасExcel);
			
	Возврат Запрос.Выполнить().Выгрузить();			
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьФиксЗначенияПоЗаголовкам(Контрагент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	юкАналитикаПоискаЗаголовковExcel.Значение КАК Значение,
	               |	юкАналитикаПоискаЗаголовковExcel.Объект КАК Объект,
	               |	юкАналитикаПоискаЗаголовковExcel.ФиксЗначение КАК ФиксЗначение
	               |ИЗ
	               |	РегистрСведений.юкАналитикаПоискаЗаголовковExcel КАК юкАналитикаПоискаЗаголовковExcel
	               |ГДЕ
	               |	юкАналитикаПоискаЗаголовковExcel.Контрагент = &Контрагент
	               |	И юкАналитикаПоискаЗаголовковExcel.ВидЗаголовка = ЗНАЧЕНИЕ(Перечисление.юкВидыАналитикиЗаголовковExcel.ФиксированноеЗначение)";
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции	

&НаКлиенте
Процедура Выбрать(Команда)

	ЗаписатьАналитикуВБазу();
	ЗакрытиеРазрешено = Истина;
	Закрыть(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьАналитикуВБазу()
	
	НаборЗаписей = РегистрыСведений.юкАналитикаПоискаЗаголовковExcel.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Контрагент.Установить(Объект.Контрагент); 
		
	ТЗЗаписей = Новый ТаблицаЗначений;
	ТЗЗаписей.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТЗЗаписей.Колонки.Добавить("Значение", Новый ОписаниеТипов("Строка"));
	ТЗЗаписей.Колонки.Добавить("Объект", Новый ОписаниеТипов("Строка"));
	ТЗЗаписей.Колонки.Добавить("ВидЗаголовка", Новый ОписаниеТипов("ПеречислениеСсылка.юкВидыАналитикиЗаголовковExcel"));
	ТЗЗаписей.Колонки.Добавить("ФиксЗначение");
	
	Для Каждого ВыбКолонки Из Объект.ВыбранныеКолонки Цикл
		
		Если ВыбКолонки.Фикс Тогда
			НоваяЗапись = ТЗЗаписей.Добавить(); 
			НоваяЗапись.Контрагент = Объект.Контрагент; 
			НоваяЗапись.Значение = ВыбКолонки.КолонкаТЧ; 
			НоваяЗапись.Объект = "Фиксированное значение";
			НоваяЗапись.ФиксЗначение = ВыбКолонки.ФиксЗначение;
			НоваяЗапись.ВидЗаголовка = Перечисления.юкВидыАналитикиЗаголовковExcel.ФиксированноеЗначение;
			Продолжить;
		КонецЕсли;
		
		ФорматВыбКолонки = СтрЗаменить(ВыбКолонки.НомерКолонкиExcel, " ;", ";");
		МасВыбКолонки = РазложитьСтрокуВМассив(ФорматВыбКолонки, ";");
		
		Для каждого МасКолонка Из МасВыбКолонки Цикл
			Отбор = Новый Структура;
			Отбор.Вставить("НомерСтолбца", МасКолонка);
			НайденнаяСтрока = Объект.ЗаголовкиExcel.НайтиСтроки(Отбор);
			Если НайденнаяСтрока.Количество() > 0 Тогда
				
				НоваяЗапись = ТЗЗаписей.Добавить(); 
				НоваяЗапись.Контрагент = Объект.Контрагент; 
				НоваяЗапись.Значение = ВыбКолонки.КолонкаТЧ; 
				НоваяЗапись.Объект = СокрЛП(НайденнаяСтрока[0].Значение);
				НоваяЗапись.ВидЗаголовка = Перечисления.юкВидыАналитикиЗаголовковExcel.НайденаВБазе;
				
			КонецЕсли
		КонецЦикла;
				
	КонецЦикла;
	
	ТЗЗаписей.Свернуть("Контрагент, Значение, Объект, ВидЗаголовка, ФиксЗначение");
	НаборЗаписей.Загрузить(ТЗЗаписей);
	
	НаборЗаписей.Записать(); 
	
КонецПроцедуры	
	
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КопироватьДанныеФормы(ВладелецФормы.Объект.ЗаголовкиExcel, Объект.ЗаголовкиExcel);
	ОбразецExcel = СформароватьОбразец(ВладелецФормы.Объект.ЗаголовкиExcel, ОбразецExcel, НомСтрЗаголовка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформароватьОбразец(Знач ЗаголовкиExcel, ОбразецExcel, НомСтрЗаголовка)

	ТЗ = Новый ТаблицаЗначений;
	Сч = 0;
	Для каждого ЗаголовокExcel Из ЗаголовкиExcel Цикл
		ТЗ.Колонки.Добавить("Колонка" + ЗаголовокExcel.НомерСтолбца, , ЗаголовокExcel.Значение);
		Сч = Сч + 1;
	КонецЦикла;
	
	НомСтрЗаголовка = НомСтрЗаголовка + 2;
	
	Для Итр = НомСтрЗаголовка По ОбразецExcel.ВысотаТаблицы Цикл
		НоваяСтрока = ТЗ.Добавить();
		Для каждого ЗаголовокExcel Из ЗаголовкиExcel Цикл			
			Область = ОбразецExcel.Область("R" + Формат(Итр, "ЧГ=") + "C" + Формат(ЗаголовокExcel.НомерСтолбца, "ЧГ="));
			//+- Алексей, было "НомерСтроки", а создание идет через "НомерСтолбца", несоответствие получается, вываливается с ошибкой...
			//НоваяСтрока["Колонка" + ЗаголовокExcel.НомерСтроки] = Область.Текст;
			НоваяСтрока["Колонка" + Число(ЗаголовокExcel.НомерСтолбца)] = Область.Текст;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ВывестиТаб(ТЗ);

КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗакрытиеРазрешено Тогда
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтаФорма), "Выполнить поиск по Excel?", РежимДиалогаВопрос.ДаНет, 10);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ЗакрытиеРазрешено = Истина;
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Закрыть(Объект);
	Иначе
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеКолонкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;         	
	СписокКолонок.ЗаполнитьПометки(Ложь);
	
	ТекДанные = Элементы.ВыбранныеКолонки.ТекущиеДанные;
	ВыбКолонки = ТекДанные.НомерКолонкиExcel;
	ФорматВыбКолонки = СтрЗаменить(ВыбКолонки, " ;", ";");
	МасВыбКолонки = РазложитьСтрокуВМассив(ФорматВыбКолонки, ";");
	
	СписокКолонокПроцент = Новый СписокЗначений;
	
	//Доб. сначало с процентами
	Отбор = Новый Структура;
	Отбор.Вставить("ИмяСтолбцаТЧ", ТекДанные.КолонкаТЧ);
	СтрокаПоиска = ПроцентExcel.НайтиСтроки(Отбор);
	Если СтрокаПоиска.Количество() > 0 Тогда
		ИтогСтрокаПоиска = СтрокаПоиска[0].Проценты;
		ИтогСтрокаПоиска.Сортировать("ПроцентСовпадения УБЫВ");
		Для каждого Процент Из ИтогСтрокаПоиска Цикл
			НоваяЗаписи = СписокКолонокПроцент.Добавить();
			НоваяЗаписи.Значение = Процент.НомерСтолбцаExcel;
			НоваяЗаписи.Представление = Процент.ЗначениеСтолбцаExcel + "     " + Процент.ПроцентСовпадения + "%";
			//Указ. выбрано
			Если МасВыбКолонки.Найти(Процент.НомерСтолбцаExcel) <> Неопределено Тогда
				НоваяЗаписи.Пометка = Истина;
			КонецЕсли
		КонецЦикла;		
	КонецЕсли;	
	
	//Доб. без процентов
	Для Каждого ЭлементК Из СписокКолонок Цикл
		Если СтрокаПоиска.Количество() > 0	Тогда
			Отбор = Новый Структура;
			Отбор.Вставить("ЗначениеСтолбцаExcel", ЭлементК.Представление);
			СтрокаСовпадения = СтрокаПоиска[0].Проценты.НайтиСтроки(Отбор);
			Если СтрокаСовпадения.Количество() = 0 Тогда
				НоваяЗаписи = СписокКолонокПроцент.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗаписи, ЭлементК);
				//Указ. выбрано
				Если МасВыбКолонки.Найти(ЭлементК.Значение) <> Неопределено Тогда
					НоваяЗаписи.Пометка = Истина;
				КонецЕсли;
			КонецЕсли;
		Иначе
			НоваяЗаписи = СписокКолонокПроцент.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗаписи, ЭлементК);
			//Указ. выбрано
			Если МасВыбКолонки.Найти(ЭлементК.Значение) <> Неопределено Тогда
				НоваяЗаписи.Пометка = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;		
	
	
	//+ Тест
	ОписаниеТипаФиксЗначения = ВернутьОписаниеТипаТЧ(ТекДанные.КолонкаТЧ);
		
	П = Новый Структура;
	П.Вставить("ЗакрыватьПриВыборе", Истина);
	П.Вставить("СписокКолонокПроцент", СписокКолонокПроцент);
	П.Вставить("ИмяТЧ", ТекДанные.КолонкаТЧ);
	П.Вставить("ОписаниеТипаФиксЗначения", ОписаниеТипаФиксЗначения);
	
	П.Вставить("Фикс", ТекДанные.Фикс);
	П.Вставить("ФиксЗначение", ТекДанные.ФиксЗначение);
	
	ОповещениеОВыборе = Новый ОписаниеОповещения("ПослеВыбораЗначенияКолонки", ЭтаФорма);
	ОткрытьФорму("Обработка.юкУниверсальнаяОбработкаЗагрузкиЗаявок.Форма.ФормаВыбораСтолбцов", П, ЭтаФорма,,,, ОповещениеОВыборе);	
	//
	
	//Сч = 0;
	//НовыйВыбор = Новый СписокЗначений;
	//Если СписокКолонокПроцент.ОтметитьЭлементы("Выберите колонки:") Тогда
	//	Для Каждого ЭлементК Из СписокКолонокПроцент Цикл
	//		Сч = Сч + 1;
	//		Если ЭлементК.Пометка Тогда
	//	        НовыйВыбор.Добавить(ЭлементК.Значение, ЭлементК.Представление);
	//	    КонецЕсли;
	//	КонецЦикла;
	//КонецЕсли;
	//	
	//НовыйВыбор.СортироватьПоПредставлению(НаправлениеСортировки.Возр);
	//
	//ТекДанные = Элементы.ВыбранныеКолонки.ТекущиеДанные;
	//Если Сч <> 0 Тогда
	//	ТекДанные.КолонкаExcel = НовыйВыбор;
	//	МасНомКолонки = НовыйВыбор.ВыгрузитьЗначения();
	//	//ничего не выбрано
	//	Если МасНомКолонки.Количество() = 0 Тогда
	//		ТекДанные.НомерКолонкиExcel = "";
	//	Иначе	
	//		Сч = 0;
	//		Для каждого МасНом Из МасНомКолонки Цикл
	//			Если Сч = 0 Тогда
	//				ТекДанные.НомерКолонкиExcel = МасНом;
	//			Иначе
	//				ТекДанные.НомерКолонкиExcel = ТекДанные.НомерКолонкиExcel + ";" + МасНом;
	//			КонецЕсли;	
	//			Сч = Сч + 1;
	//		КонецЦикла;	
	//	КонецЕсли;
	//КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораЗначенияКолонки(НовыйВыбор, ДопПараметры) Экспорт
	
	ТекДанные = Элементы.ВыбранныеКолонки.ТекущиеДанные;
	
	Если ТипЗнч(НовыйВыбор) = Тип("СписокЗначений") Тогда
		
		НовыйВыбор.СортироватьПоПредставлению(НаправлениеСортировки.Возр);
		//Сч = НовыйВыбор.Количество();
				
		//Если Сч <> 0 Тогда
			ТекДанные.КолонкаExcel = НовыйВыбор;
			МасНомКолонки = НовыйВыбор.ВыгрузитьЗначения();
			//ничего не выбрано
			Если МасНомКолонки.Количество() = 0 Тогда
				ТекДанные.НомерКолонкиExcel = "";
			Иначе	
				Сч = 0;
				Для каждого МасНом Из МасНомКолонки Цикл
					Если Сч = 0 Тогда
						ТекДанные.НомерКолонкиExcel = МасНом;
					Иначе
						ТекДанные.НомерКолонкиExcel = ТекДанные.НомерКолонкиExcel + ";" + МасНом;
					КонецЕсли;	
					Сч = Сч + 1;
				КонецЦикла;	
			КонецЕсли;
		//КонецЕсли;
		
		ТекДанные.Фикс = Ложь;
		ТекДанные.ФиксЗначение = ПредопределенноеЗначение("Справочник.уатТС.ПустаяСсылка");
		
		Если ТекДанные.ДополнительнаяКолонкаИзПараметров И (ТекДанные.КолонкаТЧ = "ДнейВРаботеЗаСмену1") Тогда
			//Есть ли такие колонки?
			мМассивИменКолонок = РазложитьСтрокуВМассив("ДнейВРаботеЗаСмену", ",");
			мКолонкиНет = Ложь;
			Для джИтр = 1 По мМассивИменКолонок.Количество() - 1 Цикл
				Для Итр = 1 По 12 Цикл
					мКолонкиНет = (Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мМассивИменКолонок[джИтр] + Формат(Итр, "ЧГ="))).Количество() = 0);
					Если мКолонкиНет Тогда
						Возврат;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			//какую колонку заполняем?
			мИмяКолонки = Лев(ТекДанные.КолонкаТЧ, Найти(ТекДанные.КолонкаТЧ, "1") - 1);
			
			//остальные колонки
			мКолонкаФевраль = Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мИмяКолонки + "2"))[0];
			мКолонкаМарт = Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мИмяКолонки + "3"))[0];
			мКолонкаАпрель = Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мИмяКолонки + "4"))[0];
			мКолонкаМай = Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мИмяКолонки + "5"))[0];
			мКолонкаИюнь = Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мИмяКолонки + "6"))[0];
			мКолонкаИюль = Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мИмяКолонки + "7"))[0];
			мКолонкаАвгуст = Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мИмяКолонки + "8"))[0];
			мКолонкаСентябрь = Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мИмяКолонки + "9"))[0];
			мКолонкаОктябрь = Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мИмяКолонки + "10"))[0];
			мКолонкаНоябрь = Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мИмяКолонки + "11"))[0];
			мКолонкаДекабрь = Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мИмяКолонки + "12"))[0];
			
			Если Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мИмяКолонки + "1"))[0].НомерКолонкиExcel <> "" Тогда
				//попытка подбора автоматически?
				мКолонкаЯнварьПерваяВСписке = НайтиКолонкуСМинимальнымНомером(СписокКолонок, "январь");
				Колонка1 = Объект.ВыбранныеКолонки.НайтиСтроки(Новый Структура("КолонкаТЧ", "" + мИмяКолонки + "1"))[0].НомерКолонкиExcel;
				мСмещение = Колонка1 - мКолонкаЯнварьПерваяВСписке;
				
				мКолонкаФевраль.НомерКолонкиExcel = НайтиКолонкуСМинимальнымНомером(СписокКолонок, "февраль") + мСмещение;
				мКолонкаФевраль.КолонкаExcel = СписокКолонок.НайтиПоЗначению(мКолонкаФевраль.НомерКолонкиExcel).Представление;
				мКолонкаМарт.НомерКолонкиExcel = НайтиКолонкуСМинимальнымНомером(СписокКолонок, "март") + мСмещение;
				мКолонкаМарт.КолонкаExcel = СписокКолонок.НайтиПоЗначению(мКолонкаМарт.НомерКолонкиExcel).Представление;
				мКолонкаАпрель.НомерКолонкиExcel = НайтиКолонкуСМинимальнымНомером(СписокКолонок, "апрель") + мСмещение;
				мКолонкаАпрель.КолонкаExcel = СписокКолонок.НайтиПоЗначению(мКолонкаАпрель.НомерКолонкиExcel).Представление;
				мКолонкаМай.НомерКолонкиExcel = НайтиКолонкуСМинимальнымНомером(СписокКолонок, "май") + мСмещение;
				мКолонкаМай.КолонкаExcel = СписокКолонок.НайтиПоЗначению(мКолонкаМай.НомерКолонкиExcel).Представление;
				мКолонкаИюнь.НомерКолонкиExcel = НайтиКолонкуСМинимальнымНомером(СписокКолонок, "июнь") + мСмещение;
				мКолонкаИюнь.КолонкаExcel = СписокКолонок.НайтиПоЗначению(мКолонкаИюнь.НомерКолонкиExcel).Представление;
				мКолонкаИюль.НомерКолонкиExcel = НайтиКолонкуСМинимальнымНомером(СписокКолонок, "июль") + мСмещение;
				мКолонкаИюль.КолонкаExcel = СписокКолонок.НайтиПоЗначению(мКолонкаИюль.НомерКолонкиExcel).Представление;
				мКолонкаАвгуст.НомерКолонкиExcel = НайтиКолонкуСМинимальнымНомером(СписокКолонок, "август") + мСмещение;
				мКолонкаАвгуст.КолонкаExcel = СписокКолонок.НайтиПоЗначению(мКолонкаАвгуст.НомерКолонкиExcel).Представление;
				мКолонкаСентябрь.НомерКолонкиExcel = НайтиКолонкуСМинимальнымНомером(СписокКолонок, "сентябрь") + мСмещение;
				мКолонкаСентябрь.КолонкаExcel = СписокКолонок.НайтиПоЗначению(мКолонкаСентябрь.НомерКолонкиExcel).Представление;
				мКолонкаОктябрь.НомерКолонкиExcel = НайтиКолонкуСМинимальнымНомером(СписокКолонок, "октябрь") + мСмещение;
				мКолонкаОктябрь.КолонкаExcel = СписокКолонок.НайтиПоЗначению(мКолонкаОктябрь.НомерКолонкиExcel).Представление;
				мКолонкаНоябрь.НомерКолонкиExcel = НайтиКолонкуСМинимальнымНомером(СписокКолонок, "ноябрь") + мСмещение;
				мКолонкаНоябрь.КолонкаExcel = СписокКолонок.НайтиПоЗначению(мКолонкаНоябрь.НомерКолонкиExcel).Представление;
				мКолонкаДекабрь.НомерКолонкиExcel = НайтиКолонкуСМинимальнымНомером(СписокКолонок, "декабрь") + мСмещение;
				мКолонкаДекабрь.КолонкаExcel = СписокКолонок.НайтиПоЗначению(мКолонкаДекабрь.НомерКолонкиExcel).Представление;
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли НовыйВыбор <> КодВозвратаДиалога.Отмена И НовыйВыбор <> Неопределено Тогда
		ТекДанные.Фикс = Истина;
		ТекДанные.ФиксЗначение = НовыйВыбор;
		ТекДанные.ВидЗаголовка = ПредопределенноеЗначение("Перечисление.юкВидыАналитикиЗаголовковExcel.ФиксированноеЗначение");
		//Вынести в функцию
		Если СтрНайти(НРег(ТекДанные.КолонкаТЧ), "время") <> 0 Тогда
			ТекДанные.КолонкаExcel = Формат(НовыйВыбор, "ДФ=ЧЧ:мм");
		ИначеЕсли  СтрНайти(НРег(ТекДанные.КолонкаТЧ), "работа с") <> 0 Тогда
			ТекДанные.КолонкаExcel = Формат(НовыйВыбор, "ДЛФ=Д");
		Иначе
			ТекДанные.КолонкаExcel = НовыйВыбор;			
		КонецЕсли;		
		ТекДанные.НомерКолонкиExcel = "";
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Функция РазложитьСтрокуВМассив(пСтрока, пРазделитель = Неопределено)
	вМассив = Новый Массив;
	Если пРазделитель = Неопределено Тогда
		мРазделить = Символы.ПС;
	Иначе
		мРазделить = пРазделитель;
	КонецЕсли;
	Если мРазделить <> Символы.ПС Тогда
		мСтрока = СтрЗаменить(пСтрока, пРазделитель, Символы.ПС);
	КонецЕсли;
	Для Итр = 1 По СтрЧислоСтрок(мСтрока) Цикл
		мПодстрока = СокрЛП(СтрПолучитьСтроку(мСтрока, Итр));
		Если мПодстрока <> "" Тогда
			вМассив.Добавить(мПодстрока);
		КонецЕсли;
	КонецЦикла;
	
	Возврат вМассив;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НайтиКолонкуСМинимальнымНомером(пСписок, пНаименованиеКолонки, пПереопределенныйПоказатель = Неопределено)
	мИндекс = 999;
	мЗначениеПереопределенного = Неопределено;
	Для Каждого мКолонка Из пСписок Цикл
		Если Найти(мКолонка.Представление, пНаименованиеКолонки) > 0 Тогда
			мИндекс = Мин(мИндекс, Число(мКолонка.Значение));
			Если пПереопределенныйПоказатель <> Неопределено И мИндекс = Число(мКолонка.Значение) Тогда
				мЗначениеПереопределенного = мКолонка[пПереопределенныйПоказатель];
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	Если пПереопределенныйПоказатель = Неопределено Тогда
		Возврат мИндекс;
	Иначе
		Возврат мЗначениеПереопределенного;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура УбратьВсе(Команда)
	Для Каждого мСтрока Из Объект.ВыбранныеКолонки Цикл
		мСтрока.НомерКолонкиExcel = "";
		мСтрока.КолонкаExcel = "";
	КонецЦикла;
КонецПроцедуры
ЗакрытиеРазрешено = Ложь;







