
Функция СткПолучитьСоединениеИзстрокиПРз()
	
	Стк = Новый Структура();
	
	Стк.Вставить("Сервер","10.8.85.12");
	Стк.Вставить("Порт",80);
	Стк.Вставить("Логин","Serv");
	Стк.Вставить("Пароль","SERVgfhjkm");
	

	
	Возврат Стк;
	
КонецФункции


Процедура ЗагрузитьТКСамотлор(Владелец) Экспорт
	
		СткСоединение = СткПолучитьСоединениеИзстрокиПРз();
		Соединение = Новый HTTPСоединение(
		СткСоединение.Сервер, // сервер (хост)
		СткСоединение.Порт, // порт, по умолчанию для http используется 80, для https 443
		СткСоединение.Логин, // пользователь для доступа к серверу (если он есть)
		СткСоединение.Пароль, // пароль для доступа к серверу (если он есть)
		, // здесь указывается прокси, если он есть
		, // таймаут в секундах, 0 или пусто - не устанавливать
		// защищенное соединение, если используется https
		);
		
		ИмяБазы = Константы.КонтрагентПосредник.Получить().БазаHTTP;   //TKSam_BUH
		Если ИмяБазы = "" Тогда
			Сообщить("База посредника не указана!");
			Возврат;
		КонецеСЛИ;
		
		стрАПИ = "/"+ИмяБазы+"/hs/invAPI/REFDOG?INN="+Владелец.ИНН;
		Запрос = Новый HTTPЗапрос(стрАПИ);
		
		
		Результат = Соединение.GET(Запрос);
		Если Результат.КодСостояния <> 200 Тогда 
			ЗаписьЖурналаРегистрации("ОшибкаСервиса_1_"+Результат.КодСостояния,,,""+стрАПИ+" "+СокрЛП(Результат.КодСостояния)+" "+результат.ПолучитьТелоКакСтроку());
			Сообщить("Ошибка синхронизации: код "+Результат.КодСостояния+" ");
			Сообщить(результат.ПолучитьТелоКакСтроку());
			Возврат;
		КонецЕСЛИ;
		
		ТБл = XMLзначение(Тип("ХранилищеЗначения"),результат.ПолучитьТелоКакСтроку()).Получить()[1];
		
		Если Тбл.Количество() = 0 ТОгда
			
		КонецЕСЛИ;
		
		Для каждого Стр из ТБл ЦИкл
			Если Стр.ВидДоговораПорядок <> 0 Тогда Продолжить; КонецеСЛИ;
			
			ГУИД = Новый УникальныйИдентификатор(Стр.СсылкаGUID);
			сс = Справочники.ДоговорыКонтрагентов.ПолучитьСсылку(ГУИД);
			Если Найти(СокрЛП(Сс),"не найден")<>0 Тогда
				обкДог = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
				обкДог.УстановитьСсылкуНового(Справочники.ДоговорыКонтрагентов.ПолучитьСсылку(ГУИД));
			ИНАче
				обкДог = сс.ПолучитьОбъект();
			КонецЕСли;
			
			
			обкДог.Владелец = Владелец;
			ОбкДог.Код = Стр.Код;
			ОбкДог.Наименование = Стр.Наименование;
			обкДог.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
			обкДог.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоКоду("643");
			обкДог.Организация = Справочники.Организации.НайтиПоКоду("000000001");
			обкДог.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом;
			
			Если Стр.Дата > Дата(2000,1,1) Тогда
				обкДог.Дата = стр.Дата;
			КонецЕСЛИ;
			
			обкДОг.КонтрагентПосредник = Константы.КонтрагентПосредник.Получить();
			
			обкДог.ОбменДанными.Загрузка = Истина;
			обкДог.Записать();
			
			Сообщить("Записан "+ОбкДог);
			
		КонецЦикла;
	
КонецПроцедуры
