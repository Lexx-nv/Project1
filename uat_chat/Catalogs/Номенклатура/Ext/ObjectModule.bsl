// Функция проверяет, существуют ли ссылки на единицу измерения в движениях регистров накопления.
// Если есть - нельзя менять коэффициент
//
// Параметры:
//  СуществуютСсылки - булево, переменная, в которой сохраняется результат работы функции, чтобы
//                     при последующих вызовах заново не считать функцию.
//
// Возвращаемое значение:
//  Истина - если есть движения, Ложь - если нет.
//
Функция СуществуютСсылки(СуществуютСсылки) Экспорт

	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Ложь;
	ИначеЕсли СуществуютСсылки <> Неопределено Тогда
		Возврат СуществуютСсылки; // уже было рассчитано
	КонецЕсли;
	
	Запрос = Новый Запрос();

	Запрос.УстановитьПараметр("ТекущийВладелец", Ссылка);

	ТипНоменклатура = ТипЗнч(Справочники.Номенклатура.ПустаяСсылка());

	Запрос.Текст = "";

	Для Каждого РегистрНакопления Из Метаданные.РегистрыНакопления Цикл
		Для Каждого РеквизитРегистра Из РегистрНакопления.Измерения Цикл
			Если РеквизитРегистра.Тип.СодержитТип(ТипНоменклатура) Тогда
				Если Запрос.Текст <> "" Тогда
					Запрос.Текст = Запрос.Текст + "
					|ОБЪЕДИНИТЬ ВСЕ
					|";
				КонецЕсли;
				Запрос.Текст = Запрос.Текст + "
				|ВЫБРАТЬ ПЕРВЫЕ 1
				|	РегистрНакопления."+РегистрНакопления.Имя+"."+РеквизитРегистра.Имя+" КАК Номенклатура
				|ГДЕ
				|	"+РеквизитРегистра.Имя+" = &ТекущийВладелец
				|";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	СуществуютСсылки = НЕ Запрос.Выполнить().Пустой();

	Возврат СуществуютСсылки;

КонецФункции //  СуществуютСсылки()

// Обработчик события элемента ПриКопировании
//
Процедура ПриКопировании(ОбъектКопирования)
	
	Если Не ЭтоГруппа Тогда
		
		ЕдиницаХраненияОстатков = Неопределено;
		ЕдиницаДляОтчетов       = Неопределено;
		ОсновноеИзображение     = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ)
    Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		
		Если Не Услуга И НЕ ЗначениеЗаполнено(БазоваяЕдиницаИзмерения) Тогда
			ОбщегоНазначения.СообщитьПользователюНезаполненРеквизит(Ссылка, "базовая единица");
			Отказ = Истина;
		Иначе
			// Надо проверить владельца единицы хранения остатков
			Если ЗначениеЗаполнено(ЕдиницаХраненияОстатков)
			   И ЕдиницаХраненияОстатков.Владелец <> Ссылка Тогда
				ТекстСообщения = "У единицы хранения остатков номенклатуры """ + СокрЛП(Ссылка) + """ неверно указан владелец!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ЕдиницаДляОтчетов) Тогда
			ЕдиницаДляОтчетов = ЕдиницаХраненияОстатков;
		КонецЕсли;

		// Надо проверить владельца единицы для отчетов
		Если ЗначениеЗаполнено(ЕдиницаДляОтчетов)
		   И ЕдиницаДляОтчетов.Владелец <> Ссылка Тогда
			ТекстСообщения = "У единицы для отчетов номенклатуры """ + СокрЛП(Ссылка) + """ неверно указан владелец!";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;
		
		СуществуютСсылки = Неопределено;
		Если Ссылка.ЕдиницаХраненияОстатков <> ЕдиницаХраненияОстатков И СуществуютСсылки(СуществуютСсылки) Тогда
			ТекстСообщения = "Единица """ + СокрЛП(Ссылка.ЕдиницаХраненияОстатков) + """ является единицей хранения остатков для """ + Наименование + """
			|и уже участвует в товародвижении. 
			|Изменить эту единицу уже нельзя!";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;
		Если Услуга <> Ссылка.Услуга И СуществуютСсылки(СуществуютСсылки)Тогда
			ТекстСообщения = "Номенклатура """ + СокрЛП(Ссылка) + """ участвует в товародвижении.
			|Признак услуги не может быть изменен!";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()

