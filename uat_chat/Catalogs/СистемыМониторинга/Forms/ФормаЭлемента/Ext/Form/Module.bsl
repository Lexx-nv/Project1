
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Объект.ВидСистемыGPS = Перечисления.ВидСистемыGPS.Автограф Тогда
		ОбновитьСписокВыбораРесурсаАвтоГРАФ();
	ИначеЕсли Объект.ВидСистемыGPS = Перечисления.ВидСистемыGPS.Виалон Тогда	
		ОбновитьСписокВыбораРесурсаWialon();
	КонецЕсли;
	ВидимостьЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокВыбораРесурсаWialon()
	
	ТекстОшибки = "";
	Ресурсы = Новый Массив;
	КодВозврата = глСистемыМониторингаСервер.Wialon_ПолучитьСписокРесурсов(Объект, ТекстОшибки, Ресурсы);
	
	ЭтаФорма.Элементы.Ресурс.СписокВыбора.Очистить();
	Если КодВозврата = 0
		И ТекстОшибки = "" Тогда
		Если ТипЗнч(Ресурсы) = тип("Массив") Тогда
			Для Каждого ТекРесурс Из Ресурсы Цикл
				IDРесура            = Строка(ТекРесурс.Получить("id"));
				НаименованиеРесурса = ТекРесурс.Получить("nm");
				ЭтаФорма.Элементы.Ресурс.СписокВыбора.Добавить(IDРесура, НаименованиеРесурса);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	ЭтаФорма.ОбновитьОтображениеДанных();
КонецПроцедуры




&НаКлиенте
Процедура ВидимостьЭлементовФормы()
	Элементы.КнопкаОткрытьСоответствиеПараметров.Видимость = (Объект.ВидСистемыGPS = Перечисления.ВидСистемыGPS.Автограф);
КонецПроцедуры	

&НаКлиенте
Процедура ВидСистемыGPSПриИзменении(Элемент)
	Наименование = Строка(Объект.ВидСистемыGPS);
	ВидимостьЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ФлагПриоритетнаяСистемаПриИзменении(Элемент)
	Если Объект.ФлагПриоритетнаяСистема И ПолучитьПриоритетнуюСистемуМониторинга(Объект.Ссылка) Тогда
		Предупреждение("Уже существует система мониторинга с приоритетной записью!!! Проверяйте!!!");
		Объект.ФлагПриоритетнаяСистема = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПриоритетнуюСистемуМониторинга(Ссылка)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СистемыМониторинга.Ссылка
		|ИЗ
		|	Справочник.СистемыМониторинга КАК СистемыМониторинга
		|ГДЕ
		|	СистемыМониторинга.Ссылка <> &Ссылка
		|	И СистемыМониторинга.ФлагПриоритетнаяСистема = ИСТИНА";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	Возврат Не Результат.Пустой();
КонецФункции	

&НаКлиенте
Процедура КомандаПолучитьТокен(Команда)
	
	Сообщить("Начало операции - " + Строка(ТекущаяДата()));
	тДата = ТекущаяДата();
	
	СтруктураПараметров = Новый Структура("Логин,Пароль,АдресСервера,СдвигЧасовогоПояса");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров,Объект);
	Если Объект.ВидСистемыGPS = Перечисления.ВидСистемыGPS.Виалон Тогда
		ПолучитьТокенWialon(СтруктураПараметров);
	ИначеЕсли Объект.ВидСистемыGPS = Перечисления.ВидСистемыGPS.Автограф Тогда
		ТокенАвторизации = ПолучитьТокенАвтоГРАФ(СтруктураПараметров);  
		Если ТокенАвторизации = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		Объект.ТокенАвторизации = ТокенАвторизации;
		ОбновитьСписокВыбораРесурсаАвтоГРАФ();
	КонецЕсли;	
	Сообщить("Время выполнения операции - " + Строка(ТекущаяДата() - тДата));
	Сообщить("Окончание операции - " + Строка(ТекущаяДата()));
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьТокенWialon(СтруктураПараметров)
	Если ПустаяСтрока(СтруктураПараметров.АдресСервера) Тогда 
		ТекстОшибки = НСтр("ru = 'Необходимо заполнить адрес сервиса'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Объект.АдресСервиса");
		Возврат;
	КонецЕсли;
	ОткрытьФорму("Справочник.СистемыМониторинга.Форма.ФормаАвторизацииWialon",,Объект,,,,Новый ОписаниеОповещения("ПолучитьТокенWialonЗавершение", ЭтаФорма),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТокенWialonЗавершение(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	Объект.ТокенАвторизации = Результат;
КонецПроцедуры



&НаКлиенте
Функция ПолучитьТокенАвтоГРАФ(СтруктураПараметров)
	ТекстОшибки = "";
	
	Если ПустаяСтрока(СтруктураПараметров.АдресСервера) Тогда 
		ТекстОшибки = НСтр("ru = 'Необходимо заполнить адрес сервиса'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Объект.АдресСервиса");
		Возврат Неопределено;
	КонецЕсли;
	
	Токен = глСистемыМониторингаСервер.АвтоГРАФ5_СозданиеТокена(СтруктураПараметров.АдресСервера, СтруктураПараметров.Логин, СтруктураПараметров.Пароль, ТекстОшибки);
	
	Если Токен = "" Тогда 
		ТекстОшибки = НСтр("en='Session token is not received and could not be installed.';ru='Токен сессии не получен и не может быть установлен.'")
					+ Символы.ПС + ТекстОшибки;
		ПоказатьПредупреждение(, ТекстОшибки);
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Токен;
КонецФункции

&НаКлиенте
Процедура ОбновитьСписокВыбораРесурсаАвтоГРАФ()
	
	ТекстОшибки = "";
	Ресурсы = Новый Массив;
	КодВозврата = глСистемыМониторингаСервер.АвтоГРАФ5_СписокСхем(Объект, ТекстОшибки, Ресурсы);
	
	ЭтаФорма.Элементы.Ресурс.СписокВыбора.Очистить();
	Если КодВозврата = 0
		И ТекстОшибки = "" Тогда
		Если ТипЗнч(Ресурсы) = тип("Массив") Тогда
			Для Каждого ТекРесурс Из Ресурсы Цикл
				IDРесура            = ТекРесурс.Получить("ID");
				НаименованиеРесурса = ТекРесурс.Получить("Name");
				ЭтаФорма.Элементы.Ресурс.СписокВыбора.Добавить(IDРесура, НаименованиеРесурса);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	ЭтаФорма.ОбновитьОтображениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьФормуСоответствияПараметров(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьГруппФормы(Команда)
	Элементы.ГруппаОсновная.Видимость = Элементы.ГруппаСоответствиеПараметров.Видимость;
	Элементы.ГруппаСоответствиеПараметров.Видимость = 1 - Элементы.ГруппаСоответствиеПараметров.Видимость;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПараметры()
	ТекстОшибки = "";
	СтруктураПараметровРаботыТС = глСистемыМониторингаСервер.АвтоГРАФ5_ПолучитьДанныеДляПЛПоТС(НачалоДня(ТекущаяДата()), КонецДня(ТекущаяДата()), ТранспортноеСредство, ТекстОшибки, ТранспортноеСредство.СистемаМониторинга,,);
	Если ТипЗнч(СтруктураПараметровРаботыТС) = Тип("Структура") Тогда
		ПараметрыБСМТС = СтруктураПараметровРаботыТС.ПараметрыБСМТС;
		Для Каждого ХХХ Из ПараметрыБСМТС Цикл
			НовСтрока = Объект.ТаблицаСоответствияПараметров.Добавить();
			НовСтрока.ПараметрБСМТС = ХХХ.Ключ;
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьПоТС(Команда)
	Если ЗначениеЗаполнено(ТранспортноеСредство) Тогда
		ЗагрузитьПараметры();
	КонецЕсли;	
КонецПроцедуры
